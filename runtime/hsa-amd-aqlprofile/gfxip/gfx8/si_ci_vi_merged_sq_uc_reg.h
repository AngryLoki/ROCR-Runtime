#if !defined SI_CI_VI_merged_sq_uc_reg_HEADER
#define SI_CI_VI_merged_sq_uc_reg_HEADER


//
// Source merge files:
//      E:\MergedHeaders\SI+CI+Amur\Original\SICI/si_ci_merged_sq_uc_reg.h
//      E:\MergedHeaders\SI+CI+Amur\Original\Amur/vi_sq_uc_reg.h
// *
// *
// *	 (c) 2014 AMD Inc.  (unpublished)
// *
// *	 All rights reserved.  This notice is intended as a precaution against
// *	 inadvertent publication and does not imply publication or any waiver
// *	 of confidentiality.  The year included in the foregoing notice is the
// *	 year of creation of the work.
//
//
#define SQ_ATTR0 0x00000000
#define SQ_BUFFER_ATOMIC_FCMPSWAP__SI__CI 0x0000003e
#define SQ_BUFFER_ATOMIC_FCMPSWAP_X2__SI__CI 0x0000005e
#define SQ_BUFFER_ATOMIC_FMAX__SI__CI 0x00000040
#define SQ_BUFFER_ATOMIC_FMAX_X2__SI__CI 0x00000060
#define SQ_BUFFER_ATOMIC_FMIN__SI__CI 0x0000003f
#define SQ_BUFFER_ATOMIC_FMIN_X2__SI__CI 0x0000005f
#define SQ_BUFFER_ATOMIC_RSUB_X2__SI 0x00000054
#define SQ_BUFFER_ATOMIC_RSUB__SI 0x00000034
#define SQ_BUFFER_LOAD_DWORDX3__CI 0x0000000f
#define SQ_BUFFER_LOAD_FORMAT_X 0x00000000
#define SQ_BUFFER_LOAD_FORMAT_XY 0x00000001
#define SQ_BUFFER_LOAD_FORMAT_XYZ 0x00000002
#define SQ_BUFFER_LOAD_FORMAT_XYZW 0x00000003
#define SQ_BUFFER_STORE_BYTE 0x00000018
#define SQ_BUFFER_STORE_DWORD 0x0000001c
#define SQ_BUFFER_STORE_DWORDX2 0x0000001d
#define SQ_BUFFER_STORE_DWORDX3__CI 0x0000001f
#define SQ_BUFFER_STORE_FORMAT_X 0x00000004
#define SQ_BUFFER_STORE_FORMAT_XY 0x00000005
#define SQ_BUFFER_STORE_FORMAT_XYZ 0x00000006
#define SQ_BUFFER_STORE_FORMAT_XYZW 0x00000007
#define SQ_BUFFER_STORE_SHORT 0x0000001a
#define SQ_BUFFER_WBINVL1_SC__SI 0x00000070
#define SQ_BUFFER_WBINVL1_VOL__CI 0x00000070
#define SQ_CHAN_W 0x00000003
#define SQ_CHAN_X 0x00000000
#define SQ_CHAN_Y 0x00000001
#define SQ_CHAN_Z 0x00000002
#define SQ_CNT1 0x00000000
#define SQ_CNT2 0x00000001
#define SQ_CNT3 0x00000002
#define SQ_CNT4 0x00000003
#define SQ_DFMT_10_10_10_2__SI__CI 0x00000008
#define SQ_DFMT_10_11_11__SI__CI 0x00000006
#define SQ_DFMT_11_11_10__SI__CI 0x00000007
#define SQ_DFMT_16__SI__CI 0x00000002
#define SQ_DFMT_16_16__SI__CI 0x00000005
#define SQ_DFMT_16_16_16_16__SI__CI 0x0000000c
#define SQ_DFMT_2_10_10_10__SI__CI 0x00000009
#define SQ_DFMT_32__SI__CI 0x00000004
#define SQ_DFMT_32_32__SI__CI 0x0000000b
#define SQ_DFMT_32_32_32__SI__CI 0x0000000d
#define SQ_DFMT_32_32_32_32__SI__CI 0x0000000e
#define SQ_DFMT_8__SI__CI 0x00000001
#define SQ_DFMT_8_8__SI__CI 0x00000003
#define SQ_DFMT_8_8_8_8__SI__CI 0x0000000a
#define SQ_DFMT_INVALID__SI__CI 0x00000000
#define SQ_DS_0_ENCODING_MASK 0xfc000000
#define SQ_DS_0_ENCODING_SHIFT 26
#define SQ_DS_0_ENCODING_SIZE 6
#define SQ_DS_0_GDS_SIZE 1
#define SQ_DS_0_OFFSET0_MASK 0x000000ff
#define SQ_DS_0_OFFSET0_SHIFT 0x00000000
#define SQ_DS_0_OFFSET0_SIZE 8
#define SQ_DS_0_OFFSET1_MASK 0x0000ff00
#define SQ_DS_0_OFFSET1_SHIFT 8
#define SQ_DS_0_OFFSET1_SIZE 8
#define SQ_DS_0_OP_SIZE 8
#define SQ_DS_0_REG_SIZE 32
#define SQ_DS_1_ADDR_MASK 0x000000ff
#define SQ_DS_1_ADDR_SHIFT 0x00000000
#define SQ_DS_1_ADDR_SIZE 8
#define SQ_DS_1_DATA0_MASK 0x0000ff00
#define SQ_DS_1_DATA0_SHIFT 8
#define SQ_DS_1_DATA0_SIZE 8
#define SQ_DS_1_DATA1_MASK 0x00ff0000
#define SQ_DS_1_DATA1_SHIFT 16
#define SQ_DS_1_DATA1_SIZE 8
#define SQ_DS_1_DEFAULT 0xcdcdcdcd
#define SQ_DS_1_REG_SIZE 32
#define SQ_DS_1_VDST_MASK 0xff000000
#define SQ_DS_1_VDST_SHIFT 24
#define SQ_DS_1_VDST_SIZE 8
#define SQ_DS_ADD_RTN_U32 0x00000020
#define SQ_DS_ADD_RTN_U64 0x00000060
#define SQ_DS_ADD_SRC2_U32 0x00000080
#define SQ_DS_ADD_SRC2_U64 0x000000c0
#define SQ_DS_ADD_U32 0x00000000
#define SQ_DS_ADD_U64 0x00000040
#define SQ_DS_AND_B32 0x00000009
#define SQ_DS_AND_B64 0x00000049
#define SQ_DS_AND_RTN_B32 0x00000029
#define SQ_DS_AND_RTN_B64 0x00000069
#define SQ_DS_AND_SRC2_B32 0x00000089
#define SQ_DS_AND_SRC2_B64 0x000000c9
#define SQ_DS_CMPST_B32 0x00000010
#define SQ_DS_CMPST_B64 0x00000050
#define SQ_DS_CMPST_F32 0x00000011
#define SQ_DS_CMPST_F64 0x00000051
#define SQ_DS_CMPST_RTN_B32 0x00000030
#define SQ_DS_CMPST_RTN_B64 0x00000070
#define SQ_DS_CMPST_RTN_F32 0x00000031
#define SQ_DS_CMPST_RTN_F64 0x00000071
#define SQ_DS_CONDXCHG32_RTN_B128__CI__VI 0x000000fd
#define SQ_DS_CONDXCHG32_RTN_B64__CI__VI 0x0000007e
#define SQ_DS_DEC_RTN_U32 0x00000024
#define SQ_DS_DEC_RTN_U64 0x00000064
#define SQ_DS_DEC_SRC2_U32 0x00000084
#define SQ_DS_DEC_SRC2_U64 0x000000c4
#define SQ_DS_DEC_U32 0x00000004
#define SQ_DS_DEC_U64 0x00000044
#define SQ_DS_GWS_SEMA_RELEASE_ALL__CI 0x00000018
#define SQ_DS_INC_RTN_U32 0x00000023
#define SQ_DS_INC_RTN_U64 0x00000063
#define SQ_DS_INC_SRC2_U32 0x00000083
#define SQ_DS_INC_SRC2_U64 0x000000c3
#define SQ_DS_INC_U32 0x00000003
#define SQ_DS_INC_U64 0x00000043
#define SQ_DS_MAX_F32 0x00000013
#define SQ_DS_MAX_F64 0x00000053
#define SQ_DS_MAX_I32 0x00000006
#define SQ_DS_MAX_I64 0x00000046
#define SQ_DS_MAX_RTN_F32 0x00000033
#define SQ_DS_MAX_RTN_F64 0x00000073
#define SQ_DS_MAX_RTN_I32 0x00000026
#define SQ_DS_MAX_RTN_I64 0x00000066
#define SQ_DS_MAX_RTN_U32 0x00000028
#define SQ_DS_MAX_RTN_U64 0x00000068
#define SQ_DS_MAX_SRC2_F32 0x00000093
#define SQ_DS_MAX_SRC2_F64 0x000000d3
#define SQ_DS_MAX_SRC2_I32 0x00000086
#define SQ_DS_MAX_SRC2_I64 0x000000c6
#define SQ_DS_MAX_SRC2_U32 0x00000088
#define SQ_DS_MAX_SRC2_U64 0x000000c8
#define SQ_DS_MAX_U32 0x00000008
#define SQ_DS_MAX_U64 0x00000048
#define SQ_DS_MIN_F32 0x00000012
#define SQ_DS_MIN_F64 0x00000052
#define SQ_DS_MIN_I32 0x00000005
#define SQ_DS_MIN_I64 0x00000045
#define SQ_DS_MIN_RTN_F32 0x00000032
#define SQ_DS_MIN_RTN_F64 0x00000072
#define SQ_DS_MIN_RTN_I32 0x00000025
#define SQ_DS_MIN_RTN_I64 0x00000065
#define SQ_DS_MIN_RTN_U32 0x00000027
#define SQ_DS_MIN_RTN_U64 0x00000067
#define SQ_DS_MIN_SRC2_F32 0x00000092
#define SQ_DS_MIN_SRC2_F64 0x000000d2
#define SQ_DS_MIN_SRC2_I32 0x00000085
#define SQ_DS_MIN_SRC2_I64 0x000000c5
#define SQ_DS_MIN_SRC2_U32 0x00000087
#define SQ_DS_MIN_SRC2_U64 0x000000c7
#define SQ_DS_MIN_U32 0x00000007
#define SQ_DS_MIN_U64 0x00000047
#define SQ_DS_MSKOR_B32 0x0000000c
#define SQ_DS_MSKOR_B64 0x0000004c
#define SQ_DS_MSKOR_RTN_B32 0x0000002c
#define SQ_DS_MSKOR_RTN_B64 0x0000006c
#define SQ_DS_NOP__CI__VI 0x00000014
#define SQ_DS_OR_B32 0x0000000a
#define SQ_DS_OR_B64 0x0000004a
#define SQ_DS_OR_RTN_B32 0x0000002a
#define SQ_DS_OR_RTN_B64 0x0000006a
#define SQ_DS_OR_SRC2_B32 0x0000008a
#define SQ_DS_OR_SRC2_B64 0x000000ca
#define SQ_DS_READ2ST64_B32 0x00000038
#define SQ_DS_READ2ST64_B64 0x00000078
#define SQ_DS_READ2_B32 0x00000037
#define SQ_DS_READ2_B64 0x00000077
#define SQ_DS_READ_B128__CI__VI 0x000000ff
#define SQ_DS_READ_B32 0x00000036
#define SQ_DS_READ_B64 0x00000076
#define SQ_DS_READ_B96__CI__VI 0x000000fe
#define SQ_DS_READ_I16 0x0000003b
#define SQ_DS_READ_I8 0x00000039
#define SQ_DS_READ_U16 0x0000003c
#define SQ_DS_READ_U8 0x0000003a
#define SQ_DS_RSUB_RTN_U32 0x00000022
#define SQ_DS_RSUB_RTN_U64 0x00000062
#define SQ_DS_RSUB_SRC2_U32 0x00000082
#define SQ_DS_RSUB_SRC2_U64 0x000000c2
#define SQ_DS_RSUB_U32 0x00000002
#define SQ_DS_RSUB_U64 0x00000042
#define SQ_DS_SUB_RTN_U32 0x00000021
#define SQ_DS_SUB_RTN_U64 0x00000061
#define SQ_DS_SUB_SRC2_U32 0x00000081
#define SQ_DS_SUB_SRC2_U64 0x000000c1
#define SQ_DS_SUB_U32 0x00000001
#define SQ_DS_SUB_U64 0x00000041
#define SQ_DS_WRAP_RTN_B32__CI__VI 0x00000034
#define SQ_DS_WRITE2ST64_B32 0x0000000f
#define SQ_DS_WRITE2ST64_B64 0x0000004f
#define SQ_DS_WRITE2_B32 0x0000000e
#define SQ_DS_WRITE2_B64 0x0000004e
#define SQ_DS_WRITE_B128__CI__VI 0x000000df
#define SQ_DS_WRITE_B16 0x0000001f
#define SQ_DS_WRITE_B32 0x0000000d
#define SQ_DS_WRITE_B64 0x0000004d
#define SQ_DS_WRITE_B8 0x0000001e
#define SQ_DS_WRITE_B96__CI__VI 0x000000de
#define SQ_DS_WRITE_SRC2_B32 0x0000008d
#define SQ_DS_WRITE_SRC2_B64 0x000000cd
#define SQ_DS_WRXCHG2ST64_RTN_B32 0x0000002f
#define SQ_DS_WRXCHG2ST64_RTN_B64 0x0000006f
#define SQ_DS_WRXCHG2_RTN_B32 0x0000002e
#define SQ_DS_WRXCHG2_RTN_B64 0x0000006e
#define SQ_DS_WRXCHG_RTN_B32 0x0000002d
#define SQ_DS_WRXCHG_RTN_B64 0x0000006d
#define SQ_DS_XOR_B32 0x0000000b
#define SQ_DS_XOR_B64 0x0000004b
#define SQ_DS_XOR_RTN_B32 0x0000002b
#define SQ_DS_XOR_RTN_B64 0x0000006b
#define SQ_DS_XOR_SRC2_B32 0x0000008b
#define SQ_DS_XOR_SRC2_B64 0x000000cb
#define SQ_ENC_DS_BITS 0xd8000000
#define SQ_ENC_DS_FIELD 0x00000036
#define SQ_ENC_DS_MASK 0xfc000000
#define SQ_ENC_EXP_MASK 0xfc000000
#define SQ_ENC_FLAT_BITS__CI__VI 0xdc000000
#define SQ_ENC_FLAT_FIELD__CI__VI 0x00000037
#define SQ_ENC_FLAT_MASK__CI__VI 0xfc000000
#define SQ_ENC_MIMG_BITS 0xf0000000
#define SQ_ENC_MIMG_FIELD 0x0000003c
#define SQ_ENC_MIMG_MASK 0xfc000000
#define SQ_ENC_MTBUF_BITS 0xe8000000
#define SQ_ENC_MTBUF_FIELD 0x0000003a
#define SQ_ENC_MTBUF_MASK 0xfc000000
#define SQ_ENC_MUBUF_BITS 0xe0000000
#define SQ_ENC_MUBUF_FIELD 0x00000038
#define SQ_ENC_MUBUF_MASK 0xfc000000
#define SQ_ENC_SMRD_BITS__SI__CI 0xc0000000
#define SQ_ENC_SMRD_FIELD__SI__CI 0x00000018
#define SQ_ENC_SMRD_MASK__SI__CI 0xf8000000
#define SQ_ENC_SOP1_BITS 0xbe800000
#define SQ_ENC_SOP1_FIELD 0x0000017d
#define SQ_ENC_SOP1_MASK 0xff800000
#define SQ_ENC_SOP2_BITS 0x80000000
#define SQ_ENC_SOP2_FIELD 0x00000002
#define SQ_ENC_SOP2_MASK 0xc0000000
#define SQ_ENC_SOPC_BITS 0xbf000000
#define SQ_ENC_SOPC_FIELD 0x0000017e
#define SQ_ENC_SOPC_MASK 0xff800000
#define SQ_ENC_SOPK_BITS 0xb0000000
#define SQ_ENC_SOPK_FIELD 0x0000000b
#define SQ_ENC_SOPK_MASK 0xf0000000
#define SQ_ENC_SOPP_BITS 0xbf800000
#define SQ_ENC_SOPP_FIELD 0x0000017f
#define SQ_ENC_SOPP_MASK 0xff800000
#define SQ_ENC_VINTRP_MASK 0xfc000000
#define SQ_ENC_VOP1_BITS 0x7e000000
#define SQ_ENC_VOP1_FIELD 0x0000003f
#define SQ_ENC_VOP1_MASK 0xfe000000
#define SQ_ENC_VOP2_BITS 0x00000000
#define SQ_ENC_VOP2_FIELD 0x00000000
#define SQ_ENC_VOP2_MASK 0x80000000
#define SQ_ENC_VOP3_BITS 0xd0000000
#define SQ_ENC_VOP3_FIELD 0x00000034
#define SQ_ENC_VOP3_MASK 0xfc000000
#define SQ_ENC_VOPC_BITS 0x7c000000
#define SQ_ENC_VOPC_FIELD 0x0000003e
#define SQ_ENC_VOPC_MASK 0xfe000000
#define SQ_EQ 0x00000002
#define SQ_EXEC_HI 0x0000007f
#define SQ_EXEC_LO 0x0000007e
#define SQ_EXP 0x00000000
#define SQ_EXP_0_COMPR_MASK 0x00000400
#define SQ_EXP_0_COMPR_SHIFT 10
#define SQ_EXP_0_COMPR_SIZE 1
#define SQ_EXP_0_DEFAULT 0xcc000dcd
#define SQ_EXP_0_DONE_MASK 0x00000800
#define SQ_EXP_0_DONE_SHIFT 11
#define SQ_EXP_0_DONE_SIZE 1
#define SQ_EXP_0_ENCODING_MASK 0xfc000000
#define SQ_EXP_0_ENCODING_SHIFT 26
#define SQ_EXP_0_ENCODING_SIZE 6
#define SQ_EXP_0_EN_MASK 0x0000000f
#define SQ_EXP_0_EN_SHIFT 0x00000000
#define SQ_EXP_0_EN_SIZE 4
#define SQ_EXP_0_REG_SIZE 32
#define SQ_EXP_0_TGT_MASK 0x000003f0
#define SQ_EXP_0_TGT_SHIFT 4
#define SQ_EXP_0_TGT_SIZE 6
#define SQ_EXP_0_VM_MASK 0x00001000
#define SQ_EXP_0_VM_SHIFT 12
#define SQ_EXP_0_VM_SIZE 1
#define SQ_EXP_1_DEFAULT 0xcdcdcdcd
#define SQ_EXP_1_REG_SIZE 32
#define SQ_EXP_1_VSRC0_MASK 0x000000ff
#define SQ_EXP_1_VSRC0_SHIFT 0x00000000
#define SQ_EXP_1_VSRC0_SIZE 8
#define SQ_EXP_1_VSRC1_MASK 0x0000ff00
#define SQ_EXP_1_VSRC1_SHIFT 8
#define SQ_EXP_1_VSRC1_SIZE 8
#define SQ_EXP_1_VSRC2_MASK 0x00ff0000
#define SQ_EXP_1_VSRC2_SHIFT 16
#define SQ_EXP_1_VSRC2_SIZE 8
#define SQ_EXP_1_VSRC3_MASK 0xff000000
#define SQ_EXP_1_VSRC3_SHIFT 24
#define SQ_EXP_1_VSRC3_SIZE 8
#define SQ_EXP_GDS0 0x00000018
#define SQ_EXP_MRT0 0x00000000
#define SQ_EXP_MRTZ 0x00000008
#define SQ_EXP_NULL 0x00000009
#define SQ_EXP_NUM_GDS 0x00000005
#define SQ_EXP_NUM_MRT 0x00000008
#define SQ_EXP_NUM_PARAM 0x00000020
#define SQ_EXP_NUM_POS 0x00000004
#define SQ_EXP_PARAM0 0x00000020
#define SQ_EXP_POS0 0x0000000c
#define SQ_F 0x00000000
#define SQ_FLAT_0_DEFAULT__CI__VI 0xcdcd0000
#define SQ_FLAT_0_ENCODING_MASK__CI__VI 0xfc000000
#define SQ_FLAT_0_ENCODING_SHIFT__CI__VI 26
#define SQ_FLAT_0_ENCODING_SIZE__CI__VI 6
#define SQ_FLAT_0_GLC_MASK__CI__VI 0x00010000
#define SQ_FLAT_0_GLC_SHIFT__CI__VI 16
#define SQ_FLAT_0_GLC_SIZE__CI__VI 1
#define SQ_FLAT_0_OP_MASK__CI__VI 0x01fc0000
#define SQ_FLAT_0_OP_SHIFT__CI__VI 18
#define SQ_FLAT_0_OP_SIZE__CI__VI 7
#define SQ_FLAT_0_REG_SIZE__CI__VI 32
#define SQ_FLAT_0_SLC_MASK__CI__VI 0x00020000
#define SQ_FLAT_0_SLC_SHIFT__CI__VI 17
#define SQ_FLAT_0_SLC_SIZE__CI__VI 1
#define SQ_FLAT_1_ADDR_MASK__CI__VI 0x000000ff
#define SQ_FLAT_1_ADDR_SHIFT__CI__VI 0x00000000
#define SQ_FLAT_1_ADDR_SIZE__CI__VI 8
#define SQ_FLAT_1_DATA_MASK__CI__VI 0x0000ff00
#define SQ_FLAT_1_DATA_SHIFT__CI__VI 8
#define SQ_FLAT_1_DATA_SIZE__CI__VI 8
#define SQ_FLAT_1_DEFAULT__CI__VI 0xcd80cdcd
#define SQ_FLAT_1_REG_SIZE__CI__VI 32
#define SQ_FLAT_1_TFE_MASK__CI__VI 0x00800000
#define SQ_FLAT_1_TFE_SHIFT__CI__VI 23
#define SQ_FLAT_1_TFE_SIZE__CI__VI 1
#define SQ_FLAT_1_VDST_MASK__CI__VI 0xff000000
#define SQ_FLAT_1_VDST_SHIFT__CI__VI 24
#define SQ_FLAT_1_VDST_SIZE__CI__VI 8
#define SQ_FLAT_ATOMIC_ADD_X2__CI 0x00000052
#define SQ_FLAT_ATOMIC_ADD__CI 0x00000032
#define SQ_FLAT_ATOMIC_AND_X2__CI 0x00000059
#define SQ_FLAT_ATOMIC_AND__CI 0x00000039
#define SQ_FLAT_ATOMIC_CMPSWAP_X2__CI 0x00000051
#define SQ_FLAT_ATOMIC_CMPSWAP__CI 0x00000031
#define SQ_FLAT_ATOMIC_DEC_X2__CI 0x0000005d
#define SQ_FLAT_ATOMIC_DEC__CI 0x0000003d
#define SQ_FLAT_ATOMIC_FCMPSWAP_X2__CI 0x0000005e
#define SQ_FLAT_ATOMIC_FCMPSWAP__CI 0x0000003e
#define SQ_FLAT_ATOMIC_FMAX_X2__CI 0x00000060
#define SQ_FLAT_ATOMIC_FMAX__CI 0x00000040
#define SQ_FLAT_ATOMIC_FMIN_X2__CI 0x0000005f
#define SQ_FLAT_ATOMIC_FMIN__CI 0x0000003f
#define SQ_FLAT_ATOMIC_INC_X2__CI 0x0000005c
#define SQ_FLAT_ATOMIC_INC__CI 0x0000003c
#define SQ_FLAT_ATOMIC_OR_X2__CI 0x0000005a
#define SQ_FLAT_ATOMIC_OR__CI 0x0000003a
#define SQ_FLAT_ATOMIC_SMAX_X2__CI 0x00000057
#define SQ_FLAT_ATOMIC_SMAX__CI 0x00000037
#define SQ_FLAT_ATOMIC_SMIN_X2__CI 0x00000055
#define SQ_FLAT_ATOMIC_SMIN__CI 0x00000035
#define SQ_FLAT_ATOMIC_SUB_X2__CI 0x00000053
#define SQ_FLAT_ATOMIC_SUB__CI 0x00000033
#define SQ_FLAT_ATOMIC_SWAP_X2__CI 0x00000050
#define SQ_FLAT_ATOMIC_SWAP__CI 0x00000030
#define SQ_FLAT_ATOMIC_UMAX_X2__CI 0x00000058
#define SQ_FLAT_ATOMIC_UMAX__CI 0x00000038
#define SQ_FLAT_ATOMIC_UMIN_X2__CI 0x00000056
#define SQ_FLAT_ATOMIC_UMIN__CI 0x00000036
#define SQ_FLAT_ATOMIC_XOR_X2__CI 0x0000005b
#define SQ_FLAT_ATOMIC_XOR__CI 0x0000003b
#define SQ_FLAT_LOAD_DWORDX2__CI 0x0000000d
#define SQ_FLAT_LOAD_DWORDX3__CI 0x0000000f
#define SQ_FLAT_LOAD_DWORDX4__CI 0x0000000e
#define SQ_FLAT_LOAD_DWORD__CI 0x0000000c
#define SQ_FLAT_LOAD_SBYTE__CI 0x00000009
#define SQ_FLAT_LOAD_SSHORT__CI 0x0000000b
#define SQ_FLAT_LOAD_UBYTE__CI 0x00000008
#define SQ_FLAT_LOAD_USHORT__CI 0x0000000a
#define SQ_FLAT_SCRATCH_HI__CI 0x00000069
#define SQ_FLAT_SCRATCH_LO__CI 0x00000068
#define SQ_FLAT_STORE_BYTE__CI__VI 0x00000018
#define SQ_FLAT_STORE_DWORDX2__CI__VI 0x0000001d
#define SQ_FLAT_STORE_DWORDX3__CI 0x0000001f
#define SQ_FLAT_STORE_DWORDX4__CI 0x0000001e
#define SQ_FLAT_STORE_DWORD__CI__VI 0x0000001c
#define SQ_FLAT_STORE_SHORT__CI__VI 0x0000001a
#define SQ_GE 0x00000006
#define SQ_GS_OP_CUT 0x00000001
#define SQ_GS_OP_EMIT 0x00000002
#define SQ_GS_OP_EMIT_CUT 0x00000003
#define SQ_GS_OP_NOP 0x00000000
#define SQ_GT 0x00000004
#define SQ_HWREG_ID_SHIFT 0x00000000
#define SQ_HWREG_ID_SIZE 0x00000006
#define SQ_HWREG_OFFSET_SHIFT 0x00000006
#define SQ_HWREG_OFFSET_SIZE 0x00000005
#define SQ_HWREG_SIZE_SHIFT 0x0000000b
#define SQ_HWREG_SIZE_SIZE 0x00000005
#define SQ_HW_REG_GPR_ALLOC 0x00000005
#define SQ_HW_REG_HW_ID 0x00000004
#define SQ_HW_REG_IB_DBG0 0x0000000c
#define SQ_HW_REG_IB_STS 0x00000007
#define SQ_HW_REG_INST_DW0 0x0000000a
#define SQ_HW_REG_INST_DW1 0x0000000b
#define SQ_HW_REG_LDS_ALLOC 0x00000006
#define SQ_HW_REG_MODE 0x00000001
#define SQ_HW_REG_PC_HI 0x00000009
#define SQ_HW_REG_PC_LO 0x00000008
#define SQ_HW_REG_STATUS 0x00000002
#define SQ_HW_REG_TRAPSTS 0x00000003
#define SQ_IMAGE_ATOMIC_AND 0x00000018
#define SQ_IMAGE_ATOMIC_DEC 0x0000001c
#define SQ_IMAGE_ATOMIC_FCMPSWAP__SI__CI 0x0000001d
#define SQ_IMAGE_ATOMIC_FMAX__SI__CI 0x0000001f
#define SQ_IMAGE_ATOMIC_FMIN__SI__CI 0x0000001e
#define SQ_IMAGE_ATOMIC_INC 0x0000001b
#define SQ_IMAGE_ATOMIC_OR 0x00000019
#define SQ_IMAGE_ATOMIC_RSUB__SI 0x00000013
#define SQ_IMAGE_ATOMIC_SMAX 0x00000016
#define SQ_IMAGE_ATOMIC_SMIN 0x00000014
#define SQ_IMAGE_ATOMIC_UMAX 0x00000017
#define SQ_IMAGE_ATOMIC_UMIN 0x00000015
#define SQ_IMAGE_ATOMIC_XOR 0x0000001a
#define SQ_IMAGE_GATHER4 0x00000040
#define SQ_IMAGE_GATHER4_B 0x00000045
#define SQ_IMAGE_GATHER4_B_CL 0x00000046
#define SQ_IMAGE_GATHER4_B_CL_O 0x00000056
#define SQ_IMAGE_GATHER4_B_O 0x00000055
#define SQ_IMAGE_GATHER4_C 0x00000048
#define SQ_IMAGE_GATHER4_CL 0x00000041
#define SQ_IMAGE_GATHER4_CL_O 0x00000051
#define SQ_IMAGE_GATHER4_C_B 0x0000004d
#define SQ_IMAGE_GATHER4_C_B_CL 0x0000004e
#define SQ_IMAGE_GATHER4_C_B_CL_O 0x0000005e
#define SQ_IMAGE_GATHER4_C_B_O 0x0000005d
#define SQ_IMAGE_GATHER4_C_CL 0x00000049
#define SQ_IMAGE_GATHER4_C_CL_O 0x00000059
#define SQ_IMAGE_GATHER4_C_L 0x0000004c
#define SQ_IMAGE_GATHER4_C_LZ 0x0000004f
#define SQ_IMAGE_GATHER4_C_LZ_O 0x0000005f
#define SQ_IMAGE_GATHER4_C_L_O 0x0000005c
#define SQ_IMAGE_GATHER4_C_O 0x00000058
#define SQ_IMAGE_GATHER4_L 0x00000044
#define SQ_IMAGE_GATHER4_LZ 0x00000047
#define SQ_IMAGE_GATHER4_LZ_O 0x00000057
#define SQ_IMAGE_GATHER4_L_O 0x00000054
#define SQ_IMAGE_GATHER4_O 0x00000050
#define SQ_IMAGE_GET_LOD 0x00000060
#define SQ_IMAGE_GET_RESINFO 0x0000000e
#define SQ_IMAGE_LOAD 0x00000000
#define SQ_IMAGE_LOAD_MIP 0x00000001
#define SQ_IMAGE_LOAD_MIP_PCK 0x00000004
#define SQ_IMAGE_LOAD_MIP_PCK_SGN 0x00000005
#define SQ_IMAGE_LOAD_PCK 0x00000002
#define SQ_IMAGE_LOAD_PCK_SGN 0x00000003
#define SQ_IMAGE_RSRC256 0x0000007e
#define SQ_IMAGE_SAMPLE 0x00000020
#define SQ_IMAGE_SAMPLER 0x0000007f
#define SQ_IMAGE_SAMPLE_B 0x00000025
#define SQ_IMAGE_SAMPLE_B_CL 0x00000026
#define SQ_IMAGE_SAMPLE_B_CL_O 0x00000036
#define SQ_IMAGE_SAMPLE_B_O 0x00000035
#define SQ_IMAGE_SAMPLE_C 0x00000028
#define SQ_IMAGE_SAMPLE_CD 0x00000068
#define SQ_IMAGE_SAMPLE_CD_CL 0x00000069
#define SQ_IMAGE_SAMPLE_CD_CL_O 0x0000006d
#define SQ_IMAGE_SAMPLE_CD_O 0x0000006c
#define SQ_IMAGE_SAMPLE_CL 0x00000021
#define SQ_IMAGE_SAMPLE_CL_O 0x00000031
#define SQ_IMAGE_SAMPLE_C_B 0x0000002d
#define SQ_IMAGE_SAMPLE_C_B_CL 0x0000002e
#define SQ_IMAGE_SAMPLE_C_B_CL_O 0x0000003e
#define SQ_IMAGE_SAMPLE_C_B_O 0x0000003d
#define SQ_IMAGE_SAMPLE_C_CD 0x0000006a
#define SQ_IMAGE_SAMPLE_C_CD_CL 0x0000006b
#define SQ_IMAGE_SAMPLE_C_CD_CL_O 0x0000006f
#define SQ_IMAGE_SAMPLE_C_CD_O 0x0000006e
#define SQ_IMAGE_SAMPLE_C_CL 0x00000029
#define SQ_IMAGE_SAMPLE_C_CL_O 0x00000039
#define SQ_IMAGE_SAMPLE_C_D 0x0000002a
#define SQ_IMAGE_SAMPLE_C_D_CL 0x0000002b
#define SQ_IMAGE_SAMPLE_C_D_CL_O 0x0000003b
#define SQ_IMAGE_SAMPLE_C_D_O 0x0000003a
#define SQ_IMAGE_SAMPLE_C_L 0x0000002c
#define SQ_IMAGE_SAMPLE_C_LZ 0x0000002f
#define SQ_IMAGE_SAMPLE_C_LZ_O 0x0000003f
#define SQ_IMAGE_SAMPLE_C_L_O 0x0000003c
#define SQ_IMAGE_SAMPLE_C_O 0x00000038
#define SQ_IMAGE_SAMPLE_D 0x00000022
#define SQ_IMAGE_SAMPLE_D_CL 0x00000023
#define SQ_IMAGE_SAMPLE_D_CL_O 0x00000033
#define SQ_IMAGE_SAMPLE_D_O 0x00000032
#define SQ_IMAGE_SAMPLE_L 0x00000024
#define SQ_IMAGE_SAMPLE_LZ 0x00000027
#define SQ_IMAGE_SAMPLE_LZ_O 0x00000037
#define SQ_IMAGE_SAMPLE_L_O 0x00000034
#define SQ_IMAGE_SAMPLE_O 0x00000030
#define SQ_IMAGE_STORE 0x00000008
#define SQ_IMAGE_STORE_MIP 0x00000009
#define SQ_IMAGE_STORE_MIP_PCK 0x0000000b
#define SQ_IMAGE_STORE_PCK 0x0000000a
#define SQ_INST_DEFAULT 0xcdcdcdcd
#define SQ_INST_ENCODING_MASK 0xffffffff
#define SQ_INST_ENCODING_SHIFT 0x00000000
#define SQ_INST_ENCODING_SIZE 32
#define SQ_INST_REG_SIZE 32
#define SQ_LE 0x00000003
#define SQ_LG 0x00000005
#define SQ_LT 0x00000001
#define SQ_M0 0x0000007c
#define SQ_MIMG_0_DA_MASK 0x00004000
#define SQ_MIMG_0_DA_SHIFT 14
#define SQ_MIMG_0_DA_SIZE 1
#define SQ_MIMG_0_DEFAULT 0xcdcdcd00
#define SQ_MIMG_0_DMASK_MASK 0x00000f00
#define SQ_MIMG_0_DMASK_SHIFT 8
#define SQ_MIMG_0_DMASK_SIZE 4
#define SQ_MIMG_0_ENCODING_MASK 0xfc000000
#define SQ_MIMG_0_ENCODING_SHIFT 26
#define SQ_MIMG_0_ENCODING_SIZE 6
#define SQ_MIMG_0_GLC_MASK 0x00002000
#define SQ_MIMG_0_GLC_SHIFT 13
#define SQ_MIMG_0_GLC_SIZE 1
#define SQ_MIMG_0_LWE_MASK 0x00020000
#define SQ_MIMG_0_LWE_SHIFT 17
#define SQ_MIMG_0_LWE_SIZE 1
#define SQ_MIMG_0_OP_MASK 0x01fc0000
#define SQ_MIMG_0_OP_SHIFT 18
#define SQ_MIMG_0_OP_SIZE 7
#define SQ_MIMG_0_R128_MASK 0x00008000
#define SQ_MIMG_0_R128_SHIFT 15
#define SQ_MIMG_0_R128_SIZE 1
#define SQ_MIMG_0_REG_SIZE 32
#define SQ_MIMG_0_SLC_MASK 0x02000000
#define SQ_MIMG_0_SLC_SHIFT 25
#define SQ_MIMG_0_SLC_SIZE 1
#define SQ_MIMG_0_TFE_MASK 0x00010000
#define SQ_MIMG_0_TFE_SHIFT 16
#define SQ_MIMG_0_TFE_SIZE 1
#define SQ_MIMG_0_UNORM_MASK 0x00001000
#define SQ_MIMG_0_UNORM_SHIFT 12
#define SQ_MIMG_0_UNORM_SIZE 1
#define SQ_MIMG_1_REG_SIZE 32
#define SQ_MIMG_1_SRSRC_MASK 0x001f0000
#define SQ_MIMG_1_SRSRC_SHIFT 16
#define SQ_MIMG_1_SRSRC_SIZE 5
#define SQ_MIMG_1_SSAMP_MASK 0x03e00000
#define SQ_MIMG_1_SSAMP_SHIFT 21
#define SQ_MIMG_1_SSAMP_SIZE 5
#define SQ_MIMG_1_VADDR_MASK 0x000000ff
#define SQ_MIMG_1_VADDR_SHIFT 0x00000000
#define SQ_MIMG_1_VADDR_SIZE 8
#define SQ_MIMG_1_VDATA_MASK 0x0000ff00
#define SQ_MIMG_1_VDATA_SHIFT 8
#define SQ_MIMG_1_VDATA_SIZE 8
#define SQ_MSG_GS 0x00000002
#define SQ_MSG_GS_DONE 0x00000003
#define SQ_MSG_INTERRUPT 0x00000001
#define SQ_MSG_SYSMSG 0x0000000f
#define SQ_MTBUF_0_ADDR64_MASK__SI__CI 0x00008000
#define SQ_MTBUF_0_ADDR64_SHIFT__SI__CI 15
#define SQ_MTBUF_0_ADDR64_SIZE__SI__CI 1
#define SQ_MTBUF_0_DEFAULT 0xcdcdcdcd
#define SQ_MTBUF_0_DFMT_MASK 0x00780000
#define SQ_MTBUF_0_DFMT_SHIFT 19
#define SQ_MTBUF_0_DFMT_SIZE 4
#define SQ_MTBUF_0_ENCODING_MASK 0xfc000000
#define SQ_MTBUF_0_ENCODING_SHIFT 26
#define SQ_MTBUF_0_ENCODING_SIZE 6
#define SQ_MTBUF_0_GLC_MASK 0x00004000
#define SQ_MTBUF_0_GLC_SHIFT 14
#define SQ_MTBUF_0_GLC_SIZE 1
#define SQ_MTBUF_0_IDXEN_MASK 0x00002000
#define SQ_MTBUF_0_IDXEN_SHIFT 13
#define SQ_MTBUF_0_IDXEN_SIZE 1
#define SQ_MTBUF_0_NFMT_MASK 0x03800000
#define SQ_MTBUF_0_NFMT_SHIFT 23
#define SQ_MTBUF_0_NFMT_SIZE 3
#define SQ_MTBUF_0_OFFEN_MASK 0x00001000
#define SQ_MTBUF_0_OFFEN_SHIFT 12
#define SQ_MTBUF_0_OFFEN_SIZE 1
#define SQ_MTBUF_0_OFFSET_MASK 0x00000fff
#define SQ_MTBUF_0_OFFSET_SHIFT 0x00000000
#define SQ_MTBUF_0_OFFSET_SIZE 12
#define SQ_MTBUF_0_REG_SIZE 32
#define SQ_MTBUF_1_DEFAULT 0xcdcdcdcd
#define SQ_MTBUF_1_REG_SIZE 32
#define SQ_MTBUF_1_SLC_MASK 0x00400000
#define SQ_MTBUF_1_SLC_SHIFT 22
#define SQ_MTBUF_1_SLC_SIZE 1
#define SQ_MTBUF_1_SOFFSET_MASK 0xff000000
#define SQ_MTBUF_1_SOFFSET_SHIFT 24
#define SQ_MTBUF_1_SOFFSET_SIZE 8
#define SQ_MTBUF_1_SRSRC_MASK 0x001f0000
#define SQ_MTBUF_1_SRSRC_SHIFT 16
#define SQ_MTBUF_1_SRSRC_SIZE 5
#define SQ_MTBUF_1_TFE_MASK 0x00800000
#define SQ_MTBUF_1_TFE_SHIFT 23
#define SQ_MTBUF_1_TFE_SIZE 1
#define SQ_MTBUF_1_VADDR_MASK 0x000000ff
#define SQ_MTBUF_1_VADDR_SHIFT 0x00000000
#define SQ_MTBUF_1_VADDR_SIZE 8
#define SQ_MTBUF_1_VDATA_MASK 0x0000ff00
#define SQ_MTBUF_1_VDATA_SHIFT 8
#define SQ_MTBUF_1_VDATA_SIZE 8
#define SQ_MUBUF_0_ADDR64_MASK__SI__CI 0x00008000
#define SQ_MUBUF_0_ADDR64_SHIFT__SI__CI 15
#define SQ_MUBUF_0_ADDR64_SIZE__SI__CI 1
#define SQ_MUBUF_0_ENCODING_MASK 0xfc000000
#define SQ_MUBUF_0_ENCODING_SHIFT 26
#define SQ_MUBUF_0_ENCODING_SIZE 6
#define SQ_MUBUF_0_GLC_MASK 0x00004000
#define SQ_MUBUF_0_GLC_SHIFT 14
#define SQ_MUBUF_0_GLC_SIZE 1
#define SQ_MUBUF_0_IDXEN_MASK 0x00002000
#define SQ_MUBUF_0_IDXEN_SHIFT 13
#define SQ_MUBUF_0_IDXEN_SIZE 1
#define SQ_MUBUF_0_LDS_MASK 0x00010000
#define SQ_MUBUF_0_LDS_SHIFT 16
#define SQ_MUBUF_0_LDS_SIZE 1
#define SQ_MUBUF_0_OFFEN_MASK 0x00001000
#define SQ_MUBUF_0_OFFEN_SHIFT 12
#define SQ_MUBUF_0_OFFEN_SIZE 1
#define SQ_MUBUF_0_OFFSET_MASK 0x00000fff
#define SQ_MUBUF_0_OFFSET_SHIFT 0x00000000
#define SQ_MUBUF_0_OFFSET_SIZE 12
#define SQ_MUBUF_0_OP_MASK 0x01fc0000
#define SQ_MUBUF_0_OP_SHIFT 18
#define SQ_MUBUF_0_OP_SIZE 7
#define SQ_MUBUF_0_REG_SIZE 32
#define SQ_MUBUF_1_REG_SIZE 32
#define SQ_MUBUF_1_SLC_MASK__SI__CI 0x00400000
#define SQ_MUBUF_1_SLC_SHIFT__SI__CI 22
#define SQ_MUBUF_1_SLC_SIZE__SI__CI 1
#define SQ_MUBUF_1_SOFFSET_MASK 0xff000000
#define SQ_MUBUF_1_SOFFSET_SHIFT 24
#define SQ_MUBUF_1_SOFFSET_SIZE 8
#define SQ_MUBUF_1_SRSRC_MASK 0x001f0000
#define SQ_MUBUF_1_SRSRC_SHIFT 16
#define SQ_MUBUF_1_SRSRC_SIZE 5
#define SQ_MUBUF_1_TFE_MASK 0x00800000
#define SQ_MUBUF_1_TFE_SHIFT 23
#define SQ_MUBUF_1_TFE_SIZE 1
#define SQ_MUBUF_1_VADDR_MASK 0x000000ff
#define SQ_MUBUF_1_VADDR_SHIFT 0x00000000
#define SQ_MUBUF_1_VADDR_SIZE 8
#define SQ_MUBUF_1_VDATA_MASK 0x0000ff00
#define SQ_MUBUF_1_VDATA_SHIFT 8
#define SQ_MUBUF_1_VDATA_SIZE 8
#define SQ_NE 0x00000005
#define SQ_NEQ 0x0000000d
#define SQ_NFMT_FLOAT__SI__CI 0x00000007
#define SQ_NFMT_SINT__SI__CI 0x00000005
#define SQ_NFMT_SNORM__SI__CI 0x00000001
#define SQ_NFMT_SNORM_OGL__SI__CI 0x00000006
#define SQ_NFMT_SSCALED__SI__CI 0x00000003
#define SQ_NFMT_UINT__SI__CI 0x00000004
#define SQ_NFMT_UNORM__SI__CI 0x00000000
#define SQ_NFMT_USCALED__SI__CI 0x00000002
#define SQ_NGE 0x00000009
#define SQ_NGT 0x0000000b
#define SQ_NLE 0x0000000c
#define SQ_NLG 0x0000000a
#define SQ_NLT 0x0000000e
#define SQ_NUM_ATTR 0x00000021
#define SQ_NUM_TTMP 0x0000000c
#define SQ_NUM_VGPR 0x00000100
#define SQ_O 0x00000007
#define SQ_OMOD_D2 0x00000003
#define SQ_OMOD_M2 0x00000001
#define SQ_OMOD_M4 0x00000002
#define SQ_OMOD_OFF 0x00000000
#define SQ_PARAM_P0 0x00000002
#define SQ_PARAM_P10 0x00000000
#define SQ_PARAM_P20 0x00000001
#define SQ_SENDMSG_GSOP_SHIFT 0x00000004
#define SQ_SENDMSG_GSOP_SIZE 0x00000002
#define SQ_SENDMSG_MSG_SHIFT 0x00000000
#define SQ_SENDMSG_MSG_SIZE 0x00000004
#define SQ_SENDMSG_STREAMID_SHIFT 0x00000008
#define SQ_SENDMSG_STREAMID_SIZE 0x00000002
#define SQ_SENDMSG_SYSTEM_SHIFT 0x00000004
#define SQ_SENDMSG_SYSTEM_SIZE 0x00000003
#define SQ_SGPR0 0x00000000
#define SQ_SMRD_DEFAULT__SI__CI 0xcdcdcdcd
#define SQ_SMRD_ENCODING_MASK__SI__CI 0xf8000000
#define SQ_SMRD_ENCODING_SHIFT__SI__CI 27
#define SQ_SMRD_ENCODING_SIZE__SI__CI 5
#define SQ_SMRD_IMM_MASK__SI__CI 0x00000100
#define SQ_SMRD_IMM_SHIFT__SI__CI 8
#define SQ_SMRD_IMM_SIZE__SI__CI 1
#define SQ_SMRD_OFFSET_MASK__SI__CI 0x000000ff
#define SQ_SMRD_OFFSET_SHIFT__SI__CI 0x00000000
#define SQ_SMRD_OFFSET_SIZE__SI__CI 8
#define SQ_SMRD_OP_MASK__SI__CI 0x07c00000
#define SQ_SMRD_OP_SHIFT__SI__CI 22
#define SQ_SMRD_OP_SIZE__SI__CI 5
#define SQ_SMRD_REG_SIZE__SI__CI 32
#define SQ_SMRD_SBASE_MASK__SI__CI 0x00007e00
#define SQ_SMRD_SBASE_SHIFT__SI__CI 9
#define SQ_SMRD_SBASE_SIZE__SI__CI 6
#define SQ_SMRD_SDST_MASK__SI__CI 0x003f8000
#define SQ_SMRD_SDST_SHIFT__SI__CI 15
#define SQ_SMRD_SDST_SIZE__SI__CI 7
#define SQ_SOP1_DEFAULT 0xcdcdcdcd
#define SQ_SOP1_ENCODING_MASK 0xff800000
#define SQ_SOP1_ENCODING_SHIFT 23
#define SQ_SOP1_ENCODING_SIZE 9
#define SQ_SOP1_OP_MASK 0x0000ff00
#define SQ_SOP1_OP_SHIFT 8
#define SQ_SOP1_OP_SIZE 8
#define SQ_SOP1_REG_SIZE 32
#define SQ_SOP1_SDST_MASK 0x007f0000
#define SQ_SOP1_SDST_SHIFT 16
#define SQ_SOP1_SDST_SIZE 7
#define SQ_SOP1_SSRC0_MASK 0x000000ff
#define SQ_SOP1_SSRC0_SHIFT 0x00000000
#define SQ_SOP1_SSRC0_SIZE 8
#define SQ_SOP2_DEFAULT 0xcdcdcdcd
#define SQ_SOP2_ENCODING_MASK 0xc0000000
#define SQ_SOP2_ENCODING_SHIFT 30
#define SQ_SOP2_ENCODING_SIZE 2
#define SQ_SOP2_OP_MASK 0x3f800000
#define SQ_SOP2_OP_SHIFT 23
#define SQ_SOP2_OP_SIZE 7
#define SQ_SOP2_REG_SIZE 32
#define SQ_SOP2_SDST_MASK 0x007f0000
#define SQ_SOP2_SDST_SHIFT 16
#define SQ_SOP2_SDST_SIZE 7
#define SQ_SOP2_SSRC0_MASK 0x000000ff
#define SQ_SOP2_SSRC0_SHIFT 0x00000000
#define SQ_SOP2_SSRC0_SIZE 8
#define SQ_SOP2_SSRC1_MASK 0x0000ff00
#define SQ_SOP2_SSRC1_SHIFT 8
#define SQ_SOP2_SSRC1_SIZE 8
#define SQ_SOPC_DEFAULT 0xcdcdcdcd
#define SQ_SOPC_ENCODING_MASK 0xff800000
#define SQ_SOPC_ENCODING_SHIFT 23
#define SQ_SOPC_ENCODING_SIZE 9
#define SQ_SOPC_OP_MASK 0x007f0000
#define SQ_SOPC_OP_SHIFT 16
#define SQ_SOPC_OP_SIZE 7
#define SQ_SOPC_REG_SIZE 32
#define SQ_SOPC_SSRC0_MASK 0x000000ff
#define SQ_SOPC_SSRC0_SHIFT 0x00000000
#define SQ_SOPC_SSRC0_SIZE 8
#define SQ_SOPC_SSRC1_MASK 0x0000ff00
#define SQ_SOPC_SSRC1_SHIFT 8
#define SQ_SOPC_SSRC1_SIZE 8
#define SQ_SOPK_DEFAULT 0xcdcdcdcd
#define SQ_SOPK_ENCODING_MASK 0xf0000000
#define SQ_SOPK_ENCODING_SHIFT 28
#define SQ_SOPK_ENCODING_SIZE 4
#define SQ_SOPK_OP_MASK 0x0f800000
#define SQ_SOPK_OP_SHIFT 23
#define SQ_SOPK_OP_SIZE 5
#define SQ_SOPK_REG_SIZE 32
#define SQ_SOPK_SDST_MASK 0x007f0000
#define SQ_SOPK_SDST_SHIFT 16
#define SQ_SOPK_SDST_SIZE 7
#define SQ_SOPK_SIMM16_MASK 0x0000ffff
#define SQ_SOPK_SIMM16_SHIFT 0x00000000
#define SQ_SOPK_SIMM16_SIZE 16
#define SQ_SOPP_DEFAULT 0xcdcdcdcd
#define SQ_SOPP_ENCODING_MASK 0xff800000
#define SQ_SOPP_ENCODING_SHIFT 23
#define SQ_SOPP_ENCODING_SIZE 9
#define SQ_SOPP_OP_MASK 0x007f0000
#define SQ_SOPP_OP_SHIFT 16
#define SQ_SOPP_OP_SIZE 7
#define SQ_SOPP_REG_SIZE 32
#define SQ_SOPP_SIMM16_MASK 0x0000ffff
#define SQ_SOPP_SIMM16_SHIFT 0x00000000
#define SQ_SOPP_SIMM16_SIZE 16
#define SQ_SRC_0 0x00000080
#define SQ_SRC_0_5 0x000000f0
#define SQ_SRC_1 0x000000f2
#define SQ_SRC_10_INT 0x0000008a
#define SQ_SRC_11_INT 0x0000008b
#define SQ_SRC_12_INT 0x0000008c
#define SQ_SRC_13_INT 0x0000008d
#define SQ_SRC_14_INT 0x0000008e
#define SQ_SRC_15_INT 0x0000008f
#define SQ_SRC_16_INT 0x00000090
#define SQ_SRC_17_INT 0x00000091
#define SQ_SRC_18_INT 0x00000092
#define SQ_SRC_19_INT 0x00000093
#define SQ_SRC_1_INT 0x00000081
#define SQ_SRC_2 0x000000f4
#define SQ_SRC_20_INT 0x00000094
#define SQ_SRC_21_INT 0x00000095
#define SQ_SRC_22_INT 0x00000096
#define SQ_SRC_23_INT 0x00000097
#define SQ_SRC_24_INT 0x00000098
#define SQ_SRC_25_INT 0x00000099
#define SQ_SRC_26_INT 0x0000009a
#define SQ_SRC_27_INT 0x0000009b
#define SQ_SRC_28_INT 0x0000009c
#define SQ_SRC_29_INT 0x0000009d
#define SQ_SRC_2_INT 0x00000082
#define SQ_SRC_30_INT 0x0000009e
#define SQ_SRC_31_INT 0x0000009f
#define SQ_SRC_32_INT 0x000000a0
#define SQ_SRC_33_INT 0x000000a1
#define SQ_SRC_34_INT 0x000000a2
#define SQ_SRC_35_INT 0x000000a3
#define SQ_SRC_36_INT 0x000000a4
#define SQ_SRC_37_INT 0x000000a5
#define SQ_SRC_38_INT 0x000000a6
#define SQ_SRC_39_INT 0x000000a7
#define SQ_SRC_3_INT 0x00000083
#define SQ_SRC_4 0x000000f6
#define SQ_SRC_40_INT 0x000000a8
#define SQ_SRC_41_INT 0x000000a9
#define SQ_SRC_42_INT 0x000000aa
#define SQ_SRC_43_INT 0x000000ab
#define SQ_SRC_44_INT 0x000000ac
#define SQ_SRC_45_INT 0x000000ad
#define SQ_SRC_46_INT 0x000000ae
#define SQ_SRC_47_INT 0x000000af
#define SQ_SRC_48_INT 0x000000b0
#define SQ_SRC_49_INT 0x000000b1
#define SQ_SRC_4_INT 0x00000084
#define SQ_SRC_50_INT 0x000000b2
#define SQ_SRC_51_INT 0x000000b3
#define SQ_SRC_52_INT 0x000000b4
#define SQ_SRC_53_INT 0x000000b5
#define SQ_SRC_54_INT 0x000000b6
#define SQ_SRC_55_INT 0x000000b7
#define SQ_SRC_56_INT 0x000000b8
#define SQ_SRC_57_INT 0x000000b9
#define SQ_SRC_58_INT 0x000000ba
#define SQ_SRC_59_INT 0x000000bb
#define SQ_SRC_5_INT 0x00000085
#define SQ_SRC_60_INT 0x000000bc
#define SQ_SRC_61_INT 0x000000bd
#define SQ_SRC_62_INT 0x000000be
#define SQ_SRC_63_INT 0x000000bf
#define SQ_SRC_64_INT 0x000000c0
#define SQ_SRC_6_INT 0x00000086
#define SQ_SRC_7_INT 0x00000087
#define SQ_SRC_8_INT 0x00000088
#define SQ_SRC_9_INT 0x00000089
#define SQ_SRC_EXECZ 0x000000fc
#define SQ_SRC_LDS_DIRECT 0x000000fe
#define SQ_SRC_LITERAL 0x000000ff
#define SQ_SRC_M_0_5 0x000000f1
#define SQ_SRC_M_1 0x000000f3
#define SQ_SRC_M_10_INT 0x000000ca
#define SQ_SRC_M_11_INT 0x000000cb
#define SQ_SRC_M_12_INT 0x000000cc
#define SQ_SRC_M_13_INT 0x000000cd
#define SQ_SRC_M_14_INT 0x000000ce
#define SQ_SRC_M_15_INT 0x000000cf
#define SQ_SRC_M_16_INT 0x000000d0
#define SQ_SRC_M_1_INT 0x000000c1
#define SQ_SRC_M_2 0x000000f5
#define SQ_SRC_M_2_INT 0x000000c2
#define SQ_SRC_M_3_INT 0x000000c3
#define SQ_SRC_M_4 0x000000f7
#define SQ_SRC_M_4_INT 0x000000c4
#define SQ_SRC_M_5_INT 0x000000c5
#define SQ_SRC_M_6_INT 0x000000c6
#define SQ_SRC_M_7_INT 0x000000c7
#define SQ_SRC_M_8_INT 0x000000c8
#define SQ_SRC_M_9_INT 0x000000c9
#define SQ_SRC_SCC 0x000000fd
#define SQ_SRC_VCCZ 0x000000fb
#define SQ_SRC_VGPR0 0x00000100
#define SQ_SRC_VGPR_BIT 0x00000100
#define SQ_SYSMSG_OP_ECC_ERR_INTERRUPT 0x00000001
#define SQ_SYSMSG_OP_HOST_TRAP_ACK 0x00000003
#define SQ_SYSMSG_OP_REG_RD 0x00000002
#define SQ_SYSMSG_OP_TTRACE_PC 0x00000004
#define SQ_S_ADDC_U32 0x00000004
#define SQ_S_ADD_I32 0x00000002
#define SQ_S_ADD_U32 0x00000000
#define SQ_S_BARRIER 0x0000000a
#define SQ_S_BITCMP0_B32 0x0000000c
#define SQ_S_BITCMP0_B64 0x0000000e
#define SQ_S_BITCMP1_B32 0x0000000d
#define SQ_S_BITCMP1_B64 0x0000000f
#define SQ_S_BRANCH 0x00000002
#define SQ_S_BUFFER_LOAD_DWORD 0x00000008
#define SQ_S_BUFFER_LOAD_DWORDX16 0x0000000c
#define SQ_S_BUFFER_LOAD_DWORDX2 0x00000009
#define SQ_S_BUFFER_LOAD_DWORDX4 0x0000000a
#define SQ_S_BUFFER_LOAD_DWORDX8 0x0000000b
#define SQ_S_CBRANCH_CDBGSYS_AND_USER__CI__VI 0x0000001a
#define SQ_S_CBRANCH_CDBGSYS_OR_USER__CI__VI 0x00000019
#define SQ_S_CBRANCH_CDBGSYS__CI__VI 0x00000017
#define SQ_S_CBRANCH_CDBGUSER__CI__VI 0x00000018
#define SQ_S_CBRANCH_EXECNZ 0x00000009
#define SQ_S_CBRANCH_EXECZ 0x00000008
#define SQ_S_CBRANCH_SCC0 0x00000004
#define SQ_S_CBRANCH_SCC1 0x00000005
#define SQ_S_CBRANCH_VCCNZ 0x00000007
#define SQ_S_CBRANCH_VCCZ 0x00000006
#define SQ_S_CMP_EQ_I32 0x00000000
#define SQ_S_CMP_EQ_U32 0x00000006
#define SQ_S_CMP_GE_I32 0x00000003
#define SQ_S_CMP_GE_U32 0x00000009
#define SQ_S_CMP_GT_I32 0x00000002
#define SQ_S_CMP_GT_U32 0x00000008
#define SQ_S_CMP_LE_I32 0x00000005
#define SQ_S_CMP_LE_U32 0x0000000b
#define SQ_S_CMP_LG_I32 0x00000001
#define SQ_S_CMP_LG_U32 0x00000007
#define SQ_S_CMP_LT_I32 0x00000004
#define SQ_S_CMP_LT_U32 0x0000000a
#define SQ_S_CSELECT_B32 0x0000000a
#define SQ_S_CSELECT_B64 0x0000000b
#define SQ_S_DCACHE_INV_VOL__CI 0x0000001d
#define SQ_S_DECPERFLEVEL 0x00000015
#define SQ_S_ENDPGM 0x00000001
#define SQ_S_ICACHE_INV 0x00000013
#define SQ_S_INCPERFLEVEL 0x00000014
#define SQ_S_LOAD_DWORD 0x00000000
#define SQ_S_LOAD_DWORDX16 0x00000004
#define SQ_S_LOAD_DWORDX2 0x00000001
#define SQ_S_LOAD_DWORDX4 0x00000002
#define SQ_S_LOAD_DWORDX8 0x00000003
#define SQ_S_MAX_I32 0x00000008
#define SQ_S_MAX_U32 0x00000009
#define SQ_S_MIN_I32 0x00000006
#define SQ_S_MIN_U32 0x00000007
#define SQ_S_MOVK_I32 0x00000000
#define SQ_S_NOP 0x00000000
#define SQ_S_SENDMSG 0x00000010
#define SQ_S_SENDMSGHALT 0x00000011
#define SQ_S_SETHALT 0x0000000d
#define SQ_S_SETKILL__CI__VI 0x0000000b
#define SQ_S_SETPRIO 0x0000000f
#define SQ_S_SETVSKIP 0x00000010
#define SQ_S_SLEEP 0x0000000e
#define SQ_S_SUBB_U32 0x00000005
#define SQ_S_SUB_I32 0x00000003
#define SQ_S_SUB_U32 0x00000001
#define SQ_S_TRAP 0x00000012
#define SQ_S_TTRACEDATA 0x00000016
#define SQ_S_WAITCNT 0x0000000c
#define SQ_T 0x00000007
#define SQ_TBA_HI 0x0000006d
#define SQ_TBA_LO 0x0000006c
#define SQ_TBUFFER_LOAD_FORMAT_X 0x00000000
#define SQ_TBUFFER_LOAD_FORMAT_XY 0x00000001
#define SQ_TBUFFER_LOAD_FORMAT_XYZ 0x00000002
#define SQ_TBUFFER_LOAD_FORMAT_XYZW 0x00000003
#define SQ_TBUFFER_STORE_FORMAT_X 0x00000004
#define SQ_TBUFFER_STORE_FORMAT_XY 0x00000005
#define SQ_TBUFFER_STORE_FORMAT_XYZ 0x00000006
#define SQ_TBUFFER_STORE_FORMAT_XYZW 0x00000007
#define SQ_TMA_HI 0x0000006f
#define SQ_TMA_LO 0x0000006e
#define SQ_TRU 0x0000000f
#define SQ_TTMP0 0x00000070
#define SQ_TTMP1 0x00000071
#define SQ_TTMP10 0x0000007a
#define SQ_TTMP11 0x0000007b
#define SQ_TTMP2 0x00000072
#define SQ_TTMP3 0x00000073
#define SQ_TTMP4 0x00000074
#define SQ_TTMP5 0x00000075
#define SQ_TTMP6 0x00000076
#define SQ_TTMP7 0x00000077
#define SQ_TTMP8 0x00000078
#define SQ_TTMP9 0x00000079
#define SQ_U 0x00000008
#define SQ_VCC_ALL 0x00000000
#define SQ_VCC_HI 0x0000006b
#define SQ_VCC_LO 0x0000006a
#define SQ_VGPR0 0x00000000
#define SQ_VINTRP_ATTRCHAN_MASK 0x00000300
#define SQ_VINTRP_ATTRCHAN_SHIFT 8
#define SQ_VINTRP_ATTRCHAN_SIZE 2
#define SQ_VINTRP_ATTR_MASK 0x0000fc00
#define SQ_VINTRP_ATTR_SHIFT 10
#define SQ_VINTRP_ATTR_SIZE 6
#define SQ_VINTRP_DEFAULT 0xcdcdcdcd
#define SQ_VINTRP_ENCODING_MASK 0xfc000000
#define SQ_VINTRP_ENCODING_SHIFT 26
#define SQ_VINTRP_ENCODING_SIZE 6
#define SQ_VINTRP_OP_MASK 0x00030000
#define SQ_VINTRP_OP_SHIFT 16
#define SQ_VINTRP_OP_SIZE 2
#define SQ_VINTRP_REG_SIZE 32
#define SQ_VINTRP_VDST_MASK 0x03fc0000
#define SQ_VINTRP_VDST_SHIFT 18
#define SQ_VINTRP_VDST_SIZE 8
#define SQ_VINTRP_VSRC_MASK 0x000000ff
#define SQ_VINTRP_VSRC_SHIFT 0x00000000
#define SQ_VINTRP_VSRC_SIZE 8
#define SQ_VOP1_DEFAULT 0xcdcdcdcd
#define SQ_VOP1_ENCODING_MASK 0xfe000000
#define SQ_VOP1_ENCODING_SHIFT 25
#define SQ_VOP1_ENCODING_SIZE 7
#define SQ_VOP1_OP_MASK 0x0001fe00
#define SQ_VOP1_OP_SHIFT 9
#define SQ_VOP1_OP_SIZE 8
#define SQ_VOP1_REG_SIZE 32
#define SQ_VOP1_SRC0_MASK 0x000001ff
#define SQ_VOP1_SRC0_SHIFT 0x00000000
#define SQ_VOP1_SRC0_SIZE 9
#define SQ_VOP1_VDST_MASK 0x01fe0000
#define SQ_VOP1_VDST_SHIFT 17
#define SQ_VOP1_VDST_SIZE 8
#define SQ_VOP2_DEFAULT 0xcdcdcdcd
#define SQ_VOP2_ENCODING_MASK 0x80000000
#define SQ_VOP2_ENCODING_SHIFT 31
#define SQ_VOP2_ENCODING_SIZE 1
#define SQ_VOP2_OP_MASK 0x7e000000
#define SQ_VOP2_OP_SHIFT 25
#define SQ_VOP2_OP_SIZE 6
#define SQ_VOP2_REG_SIZE 32
#define SQ_VOP2_SRC0_MASK 0x000001ff
#define SQ_VOP2_SRC0_SHIFT 0x00000000
#define SQ_VOP2_SRC0_SIZE 9
#define SQ_VOP2_VDST_MASK 0x01fe0000
#define SQ_VOP2_VDST_SHIFT 17
#define SQ_VOP2_VDST_SIZE 8
#define SQ_VOP2_VSRC1_MASK 0x0001fe00
#define SQ_VOP2_VSRC1_SHIFT 9
#define SQ_VOP2_VSRC1_SIZE 8
#define SQ_VOP3_0_ABS_MASK 0x00000700
#define SQ_VOP3_0_ABS_SHIFT 8
#define SQ_VOP3_0_ABS_SIZE 3
#define SQ_VOP3_0_CLAMP_SIZE 1
#define SQ_VOP3_0_ENCODING_MASK 0xfc000000
#define SQ_VOP3_0_ENCODING_SHIFT 26
#define SQ_VOP3_0_ENCODING_SIZE 6
#define SQ_VOP3_0_REG_SIZE 32
#define SQ_VOP3_0_SDST_ENC_ENCODING_MASK 0xfc000000
#define SQ_VOP3_0_SDST_ENC_ENCODING_SHIFT 26
#define SQ_VOP3_0_SDST_ENC_ENCODING_SIZE 6
#define SQ_VOP3_0_SDST_ENC_REG_SIZE 32
#define SQ_VOP3_0_SDST_ENC_SDST_MASK 0x00007f00
#define SQ_VOP3_0_SDST_ENC_SDST_SHIFT 8
#define SQ_VOP3_0_SDST_ENC_SDST_SIZE 7
#define SQ_VOP3_0_SDST_ENC_VDST_MASK 0x000000ff
#define SQ_VOP3_0_SDST_ENC_VDST_SHIFT 0x00000000
#define SQ_VOP3_0_SDST_ENC_VDST_SIZE 8
#define SQ_VOP3_0_VDST_MASK 0x000000ff
#define SQ_VOP3_0_VDST_SHIFT 0x00000000
#define SQ_VOP3_0_VDST_SIZE 8
#define SQ_VOP3_1_DEFAULT 0xcdcdcdcd
#define SQ_VOP3_1_NEG_MASK 0xe0000000
#define SQ_VOP3_1_NEG_SHIFT 29
#define SQ_VOP3_1_NEG_SIZE 3
#define SQ_VOP3_1_OMOD_MASK 0x18000000
#define SQ_VOP3_1_OMOD_SHIFT 27
#define SQ_VOP3_1_OMOD_SIZE 2
#define SQ_VOP3_1_REG_SIZE 32
#define SQ_VOP3_1_SRC0_MASK 0x000001ff
#define SQ_VOP3_1_SRC0_SHIFT 0x00000000
#define SQ_VOP3_1_SRC0_SIZE 9
#define SQ_VOP3_1_SRC1_MASK 0x0003fe00
#define SQ_VOP3_1_SRC1_SHIFT 9
#define SQ_VOP3_1_SRC1_SIZE 9
#define SQ_VOP3_1_SRC2_MASK 0x07fc0000
#define SQ_VOP3_1_SRC2_SHIFT 18
#define SQ_VOP3_1_SRC2_SIZE 9
#define SQ_VOPC_DEFAULT 0xcdcdcdcd
#define SQ_VOPC_ENCODING_MASK 0xfe000000
#define SQ_VOPC_ENCODING_SHIFT 25
#define SQ_VOPC_ENCODING_SIZE 7
#define SQ_VOPC_OP_MASK 0x01fe0000
#define SQ_VOPC_OP_SHIFT 17
#define SQ_VOPC_OP_SIZE 8
#define SQ_VOPC_REG_SIZE 32
#define SQ_VOPC_SRC0_MASK 0x000001ff
#define SQ_VOPC_SRC0_SHIFT 0x00000000
#define SQ_VOPC_SRC0_SIZE 9
#define SQ_VOPC_VSRC1_MASK 0x0001fe00
#define SQ_VOPC_VSRC1_SHIFT 9
#define SQ_VOPC_VSRC1_SIZE 8
#define SQ_V_ADD_I32__SI__CI 0x00000025
#define SQ_V_ASHR_I32__SI__CI 0x00000017
#define SQ_V_ASHR_I64__SI__CI 0x00000163
#define SQ_V_CEIL_F64__CI__VI 0x00000018
#define SQ_V_CMPSX_EQ_F32__SI__CI 0x00000052
#define SQ_V_CMPSX_EQ_F64__SI__CI 0x00000072
#define SQ_V_CMPSX_F_F32__SI__CI 0x00000050
#define SQ_V_CMPSX_F_F64__SI__CI 0x00000070
#define SQ_V_CMPSX_GE_F32__SI__CI 0x00000056
#define SQ_V_CMPSX_GE_F64__SI__CI 0x00000076
#define SQ_V_CMPSX_GT_F32__SI__CI 0x00000054
#define SQ_V_CMPSX_GT_F64__SI__CI 0x00000074
#define SQ_V_CMPSX_LE_F32__SI__CI 0x00000053
#define SQ_V_CMPSX_LE_F64__SI__CI 0x00000073
#define SQ_V_CMPSX_LG_F32__SI__CI 0x00000055
#define SQ_V_CMPSX_LG_F64__SI__CI 0x00000075
#define SQ_V_CMPSX_LT_F32__SI__CI 0x00000051
#define SQ_V_CMPSX_LT_F64__SI__CI 0x00000071
#define SQ_V_CMPSX_NEQ_F32__SI__CI 0x0000005d
#define SQ_V_CMPSX_NEQ_F64__SI__CI 0x0000007d
#define SQ_V_CMPSX_NGE_F32__SI__CI 0x00000059
#define SQ_V_CMPSX_NGE_F64__SI__CI 0x00000079
#define SQ_V_CMPSX_NGT_F32__SI__CI 0x0000005b
#define SQ_V_CMPSX_NGT_F64__SI__CI 0x0000007b
#define SQ_V_CMPSX_NLE_F32__SI__CI 0x0000005c
#define SQ_V_CMPSX_NLE_F64__SI__CI 0x0000007c
#define SQ_V_CMPSX_NLG_F32__SI__CI 0x0000005a
#define SQ_V_CMPSX_NLG_F64__SI__CI 0x0000007a
#define SQ_V_CMPSX_NLT_F32__SI__CI 0x0000005e
#define SQ_V_CMPSX_NLT_F64__SI__CI 0x0000007e
#define SQ_V_CMPSX_O_F32__SI__CI 0x00000057
#define SQ_V_CMPSX_O_F64__SI__CI 0x00000077
#define SQ_V_CMPSX_TRU_F32__SI__CI 0x0000005f
#define SQ_V_CMPSX_TRU_F64__SI__CI 0x0000007f
#define SQ_V_CMPSX_U_F32__SI__CI 0x00000058
#define SQ_V_CMPSX_U_F64__SI__CI 0x00000078
#define SQ_V_CMPS_EQ_F32__SI__CI 0x00000042
#define SQ_V_CMPS_EQ_F64__SI__CI 0x00000062
#define SQ_V_CMPS_F_F32__SI__CI 0x00000040
#define SQ_V_CMPS_F_F64__SI__CI 0x00000060
#define SQ_V_CMPS_GE_F32__SI__CI 0x00000046
#define SQ_V_CMPS_GE_F64__SI__CI 0x00000066
#define SQ_V_CMPS_GT_F32__SI__CI 0x00000044
#define SQ_V_CMPS_GT_F64__SI__CI 0x00000064
#define SQ_V_CMPS_LE_F32__SI__CI 0x00000043
#define SQ_V_CMPS_LE_F64__SI__CI 0x00000063
#define SQ_V_CMPS_LG_F32__SI__CI 0x00000045
#define SQ_V_CMPS_LG_F64__SI__CI 0x00000065
#define SQ_V_CMPS_LT_F32__SI__CI 0x00000041
#define SQ_V_CMPS_LT_F64__SI__CI 0x00000061
#define SQ_V_CMPS_NEQ_F32__SI__CI 0x0000004d
#define SQ_V_CMPS_NEQ_F64__SI__CI 0x0000006d
#define SQ_V_CMPS_NGE_F32__SI__CI 0x00000049
#define SQ_V_CMPS_NGE_F64__SI__CI 0x00000069
#define SQ_V_CMPS_NGT_F32__SI__CI 0x0000004b
#define SQ_V_CMPS_NGT_F64__SI__CI 0x0000006b
#define SQ_V_CMPS_NLE_F32__SI__CI 0x0000004c
#define SQ_V_CMPS_NLE_F64__SI__CI 0x0000006c
#define SQ_V_CMPS_NLG_F32__SI__CI 0x0000004a
#define SQ_V_CMPS_NLG_F64__SI__CI 0x0000006a
#define SQ_V_CMPS_NLT_F32__SI__CI 0x0000004e
#define SQ_V_CMPS_NLT_F64__SI__CI 0x0000006e
#define SQ_V_CMPS_O_F32__SI__CI 0x00000047
#define SQ_V_CMPS_O_F64__SI__CI 0x00000067
#define SQ_V_CMPS_TRU_F32__SI__CI 0x0000004f
#define SQ_V_CMPS_TRU_F64__SI__CI 0x0000006f
#define SQ_V_CMPS_U_F32__SI__CI 0x00000048
#define SQ_V_CMPS_U_F64__SI__CI 0x00000068
#define SQ_V_CNDMASK_B32 0x00000000
#define SQ_V_CVT_F16_F32 0x0000000a
#define SQ_V_CVT_F32_F16 0x0000000b
#define SQ_V_CVT_F32_F64 0x0000000f
#define SQ_V_CVT_F32_I32 0x00000005
#define SQ_V_CVT_F32_U32 0x00000006
#define SQ_V_CVT_F32_UBYTE0 0x00000011
#define SQ_V_CVT_F32_UBYTE1 0x00000012
#define SQ_V_CVT_F32_UBYTE2 0x00000013
#define SQ_V_CVT_F32_UBYTE3 0x00000014
#define SQ_V_CVT_F64_F32 0x00000010
#define SQ_V_CVT_F64_I32 0x00000004
#define SQ_V_CVT_F64_U32 0x00000016
#define SQ_V_CVT_FLR_I32_F32 0x0000000d
#define SQ_V_CVT_I32_F32 0x00000008
#define SQ_V_CVT_I32_F64 0x00000003
#define SQ_V_CVT_OFF_F32_I4 0x0000000e
#define SQ_V_CVT_RPI_I32_F32 0x0000000c
#define SQ_V_CVT_U32_F32 0x00000007
#define SQ_V_CVT_U32_F64 0x00000015
#define SQ_V_EXP_LEGACY_F32__CI 0x00000046
#define SQ_V_FLOOR_F64__CI__VI 0x0000001a
#define SQ_V_INTERP_MOV_F32 0x00000002
#define SQ_V_INTERP_P1_F32 0x00000000
#define SQ_V_INTERP_P2_F32 0x00000001
#define SQ_V_LOG_CLAMP_F32__SI__CI 0x00000026
#define SQ_V_LOG_LEGACY_F32__CI 0x00000045
#define SQ_V_LSHL_B32__SI__CI 0x00000019
#define SQ_V_LSHL_B64__SI__CI 0x00000161
#define SQ_V_LSHR_B32__SI__CI 0x00000015
#define SQ_V_LSHR_B64__SI__CI 0x00000162
#define SQ_V_MAD_I64_I32__CI 0x00000177
#define SQ_V_MAD_U64_U32__CI 0x00000176
#define SQ_V_MAX_LEGACY_F32__SI__CI 0x0000000e
#define SQ_V_MIN_LEGACY_F32__SI__CI 0x0000000d
#define SQ_V_MOV_B32 0x00000001
#define SQ_V_MOV_FED_B32 0x00000009
#define SQ_V_MQSAD_PK_U16_U8__CI 0x00000173
#define SQ_V_MQSAD_U32_U8__CI 0x00000175
#define SQ_V_MQSAD_U8__SI 0x00000173
#define SQ_V_MULLIT_F32__SI__CI 0x00000150
#define SQ_V_MUL_LO_I32__SI__CI 0x0000016b
#define SQ_V_NOP 0x00000000
#define SQ_V_OP1_COUNT 0x00000080
#define SQ_V_OP2_COUNT 0x00000040
#define SQ_V_OP2_OFFSET 0x00000100
#define SQ_V_OPC_COUNT 0x00000100
#define SQ_V_OPC_OFFSET 0x00000000
#define SQ_V_QSAD_PK_U16_U8__CI 0x00000172
#define SQ_V_QSAD_U8__SI 0x00000172
#define SQ_V_RCP_CLAMP_F32__SI__CI 0x00000028
#define SQ_V_RCP_CLAMP_F64__SI__CI 0x00000030
#define SQ_V_RCP_LEGACY_F32__SI__CI 0x00000029
#define SQ_V_READFIRSTLANE_B32 0x00000002
#define SQ_V_RNDNE_F64__CI__VI 0x00000019
#define SQ_V_RSQ_CLAMP_F32__SI__CI 0x0000002c
#define SQ_V_RSQ_CLAMP_F64__SI__CI 0x00000032
#define SQ_V_RSQ_LEGACY_F32__SI__CI 0x0000002d
#define SQ_V_SUBREV_I32__SI__CI 0x00000027
#define SQ_V_SUB_I32__SI__CI 0x00000026
#define SQ_V_TRUNC_F64__CI__VI 0x00000017
#define SQ_WAITCNT_EXP_SHIFT 0x00000004
#define SQ_WAITCNT_EXP_SIZE 0x00000003
#define SQ_WAITCNT_LGKM_SHIFT 0x00000008
#define SQ_WAITCNT_LGKM_SIZE 0x00000004
#define SQ_WAITCNT_VM_SHIFT 0x00000000
#define SQ_WAITCNT_VM_SIZE 0x00000004

// Merged Defines

#define SQ_BUFFER_ATOMIC_ADD__SI__CI 0x00000032
#define SQ_BUFFER_ATOMIC_ADD__VI 0x00000042
#define SQ_BUFFER_ATOMIC_ADD_X2__SI__CI 0x00000052
#define SQ_BUFFER_ATOMIC_ADD_X2__VI 0x00000062
#define SQ_BUFFER_ATOMIC_AND__SI__CI 0x00000039
#define SQ_BUFFER_ATOMIC_AND__VI 0x00000048
#define SQ_BUFFER_ATOMIC_AND_X2__SI__CI 0x00000059
#define SQ_BUFFER_ATOMIC_AND_X2__VI 0x00000068
#define SQ_BUFFER_ATOMIC_CMPSWAP__SI__CI 0x00000031
#define SQ_BUFFER_ATOMIC_CMPSWAP__VI 0x00000041
#define SQ_BUFFER_ATOMIC_CMPSWAP_X2__SI__CI 0x00000051
#define SQ_BUFFER_ATOMIC_CMPSWAP_X2__VI 0x00000061
#define SQ_BUFFER_ATOMIC_DEC__SI__CI 0x0000003d
#define SQ_BUFFER_ATOMIC_DEC__VI 0x0000004c
#define SQ_BUFFER_ATOMIC_DEC_X2__SI__CI 0x0000005d
#define SQ_BUFFER_ATOMIC_DEC_X2__VI 0x0000006c
#define SQ_BUFFER_ATOMIC_INC__SI__CI 0x0000003c
#define SQ_BUFFER_ATOMIC_INC__VI 0x0000004b
#define SQ_BUFFER_ATOMIC_INC_X2__SI__CI 0x0000005c
#define SQ_BUFFER_ATOMIC_INC_X2__VI 0x0000006b
#define SQ_BUFFER_ATOMIC_OR__SI__CI 0x0000003a
#define SQ_BUFFER_ATOMIC_OR__VI 0x00000049
#define SQ_BUFFER_ATOMIC_OR_X2__SI__CI 0x0000005a
#define SQ_BUFFER_ATOMIC_OR_X2__VI 0x00000069
#define SQ_BUFFER_ATOMIC_SMAX__SI__CI 0x00000037
#define SQ_BUFFER_ATOMIC_SMAX__VI 0x00000046
#define SQ_BUFFER_ATOMIC_SMAX_X2__SI__CI 0x00000057
#define SQ_BUFFER_ATOMIC_SMAX_X2__VI 0x00000066
#define SQ_BUFFER_ATOMIC_SMIN__SI__CI 0x00000035
#define SQ_BUFFER_ATOMIC_SMIN__VI 0x00000044
#define SQ_BUFFER_ATOMIC_SMIN_X2__SI__CI 0x00000055
#define SQ_BUFFER_ATOMIC_SMIN_X2__VI 0x00000064
#define SQ_BUFFER_ATOMIC_SUB__SI__CI 0x00000033
#define SQ_BUFFER_ATOMIC_SUB__VI 0x00000043
#define SQ_BUFFER_ATOMIC_SUB_X2__SI__CI 0x00000053
#define SQ_BUFFER_ATOMIC_SUB_X2__VI 0x00000063
#define SQ_BUFFER_ATOMIC_SWAP__SI__CI 0x00000030
#define SQ_BUFFER_ATOMIC_SWAP__VI 0x00000040
#define SQ_BUFFER_ATOMIC_SWAP_X2__SI__CI 0x00000050
#define SQ_BUFFER_ATOMIC_SWAP_X2__VI 0x00000060
#define SQ_BUFFER_ATOMIC_UMAX__SI__CI 0x00000038
#define SQ_BUFFER_ATOMIC_UMAX__VI 0x00000047
#define SQ_BUFFER_ATOMIC_UMAX_X2__SI__CI 0x00000058
#define SQ_BUFFER_ATOMIC_UMAX_X2__VI 0x00000067
#define SQ_BUFFER_ATOMIC_UMIN__SI__CI 0x00000036
#define SQ_BUFFER_ATOMIC_UMIN__VI 0x00000045
#define SQ_BUFFER_ATOMIC_UMIN_X2__SI__CI 0x00000056
#define SQ_BUFFER_ATOMIC_UMIN_X2__VI 0x00000065
#define SQ_BUFFER_ATOMIC_XOR__SI__CI 0x0000003b
#define SQ_BUFFER_ATOMIC_XOR__VI 0x0000004a
#define SQ_BUFFER_ATOMIC_XOR_X2__SI__CI 0x0000005b
#define SQ_BUFFER_ATOMIC_XOR_X2__VI 0x0000006a
#define SQ_BUFFER_LOAD_DWORD__SI__CI 0x0000000c
#define SQ_BUFFER_LOAD_DWORD__VI 0x00000014
#define SQ_BUFFER_LOAD_DWORDX2__SI__CI 0x0000000d
#define SQ_BUFFER_LOAD_DWORDX2__VI 0x00000015
#define SQ_BUFFER_LOAD_DWORDX3__VI 0x00000016
#define SQ_BUFFER_LOAD_DWORDX4__SI__CI 0x0000000e
#define SQ_BUFFER_LOAD_DWORDX4__VI 0x00000017
#define SQ_BUFFER_LOAD_FORMAT_D16_X__VI 0x00000008
#define SQ_BUFFER_LOAD_FORMAT_D16_XY__VI 0x00000009
#define SQ_BUFFER_LOAD_FORMAT_D16_XYZ__VI 0x0000000a
#define SQ_BUFFER_LOAD_FORMAT_D16_XYZW__VI 0x0000000b
#define SQ_BUFFER_LOAD_SBYTE__SI__CI 0x00000009
#define SQ_BUFFER_LOAD_SBYTE__VI 0x00000011
#define SQ_BUFFER_LOAD_SSHORT__SI__CI 0x0000000b
#define SQ_BUFFER_LOAD_SSHORT__VI 0x00000013
#define SQ_BUFFER_LOAD_UBYTE__SI__CI 0x00000008
#define SQ_BUFFER_LOAD_UBYTE__VI 0x00000010
#define SQ_BUFFER_LOAD_USHORT__SI__CI 0x0000000a
#define SQ_BUFFER_LOAD_USHORT__VI 0x00000012
#define SQ_BUFFER_STORE_DWORDX3__VI 0x0000001e
#define SQ_BUFFER_STORE_DWORDX4__SI__CI 0x0000001e
#define SQ_BUFFER_STORE_DWORDX4__VI 0x0000001f
#define SQ_BUFFER_STORE_FORMAT_D16_X__VI 0x0000000c
#define SQ_BUFFER_STORE_FORMAT_D16_XY__VI 0x0000000d
#define SQ_BUFFER_STORE_FORMAT_D16_XYZ__VI 0x0000000e
#define SQ_BUFFER_STORE_FORMAT_D16_XYZW__VI 0x0000000f
#define SQ_BUFFER_STORE_LDS_DWORD__VI 0x0000003d
#define SQ_BUFFER_WBINVL1__SI__CI 0x00000071
#define SQ_BUFFER_WBINVL1__VI 0x0000003e
#define SQ_BUFFER_WBINVL1_VOL__VI 0x0000003f
#define SQ_DPP_BOUND_OFF__VI 0x00000000
#define SQ_DPP_BOUND_ZERO__VI 0x00000001
#define SQ_DPP_QUAD_PERM__VI 0x00000000
#define SQ_DPP_ROW_BCAST15__VI 0x00000142
#define SQ_DPP_ROW_BCAST31__VI 0x00000143
#define SQ_DPP_ROW_HALF_MIRROR__VI 0x00000141
#define SQ_DPP_ROW_MIRROR__VI 0x00000140
#define SQ_DPP_ROW_RR1__VI 0x00000121
#define SQ_DPP_ROW_RR10__VI 0x0000012a
#define SQ_DPP_ROW_RR11__VI 0x0000012b
#define SQ_DPP_ROW_RR12__VI 0x0000012c
#define SQ_DPP_ROW_RR13__VI 0x0000012d
#define SQ_DPP_ROW_RR14__VI 0x0000012e
#define SQ_DPP_ROW_RR15__VI 0x0000012f
#define SQ_DPP_ROW_RR2__VI 0x00000122
#define SQ_DPP_ROW_RR3__VI 0x00000123
#define SQ_DPP_ROW_RR4__VI 0x00000124
#define SQ_DPP_ROW_RR5__VI 0x00000125
#define SQ_DPP_ROW_RR6__VI 0x00000126
#define SQ_DPP_ROW_RR7__VI 0x00000127
#define SQ_DPP_ROW_RR8__VI 0x00000128
#define SQ_DPP_ROW_RR9__VI 0x00000129
#define SQ_DPP_ROW_SL1__VI 0x00000101
#define SQ_DPP_ROW_SL10__VI 0x0000010a
#define SQ_DPP_ROW_SL11__VI 0x0000010b
#define SQ_DPP_ROW_SL12__VI 0x0000010c
#define SQ_DPP_ROW_SL13__VI 0x0000010d
#define SQ_DPP_ROW_SL14__VI 0x0000010e
#define SQ_DPP_ROW_SL15__VI 0x0000010f
#define SQ_DPP_ROW_SL2__VI 0x00000102
#define SQ_DPP_ROW_SL3__VI 0x00000103
#define SQ_DPP_ROW_SL4__VI 0x00000104
#define SQ_DPP_ROW_SL5__VI 0x00000105
#define SQ_DPP_ROW_SL6__VI 0x00000106
#define SQ_DPP_ROW_SL7__VI 0x00000107
#define SQ_DPP_ROW_SL8__VI 0x00000108
#define SQ_DPP_ROW_SL9__VI 0x00000109
#define SQ_DPP_ROW_SR1__VI 0x00000111
#define SQ_DPP_ROW_SR10__VI 0x0000011a
#define SQ_DPP_ROW_SR11__VI 0x0000011b
#define SQ_DPP_ROW_SR12__VI 0x0000011c
#define SQ_DPP_ROW_SR13__VI 0x0000011d
#define SQ_DPP_ROW_SR14__VI 0x0000011e
#define SQ_DPP_ROW_SR15__VI 0x0000011f
#define SQ_DPP_ROW_SR2__VI 0x00000112
#define SQ_DPP_ROW_SR3__VI 0x00000113
#define SQ_DPP_ROW_SR4__VI 0x00000114
#define SQ_DPP_ROW_SR5__VI 0x00000115
#define SQ_DPP_ROW_SR6__VI 0x00000116
#define SQ_DPP_ROW_SR7__VI 0x00000117
#define SQ_DPP_ROW_SR8__VI 0x00000118
#define SQ_DPP_ROW_SR9__VI 0x00000119
#define SQ_DPP_WF_RL1__VI 0x00000134
#define SQ_DPP_WF_RR1__VI 0x0000013c
#define SQ_DPP_WF_SL1__VI 0x00000130
#define SQ_DPP_WF_SR1__VI 0x00000138
#define SQ_DS_0_DEFAULT__SI__CI 0xcdcccdcd
#define SQ_DS_0_DEFAULT__VI 0xcdcdcdcd
#define SQ_DS_0_GDS_MASK__SI__CI 0x00020000
#define SQ_DS_0_GDS_MASK__VI 0x00010000
#define SQ_DS_0_GDS_SHIFT__SI__CI 17
#define SQ_DS_0_GDS_SHIFT__VI 16
#define SQ_DS_0_GET_ENCODING__VI(sq_ds_0)                                                          \
  ((sq_ds_0 & SQ_DS_0_ENCODING_MASK) >> SQ_DS_0_ENCODING_SHIFT)

#define SQ_DS_0_GET_GDS__VI(sq_ds_0) ((sq_ds_0 & SQ_DS_0_GDS_MASK) >> SQ_DS_0_GDS_SHIFT)

#define SQ_DS_0_GET_OFFSET0__VI(sq_ds_0) ((sq_ds_0 & SQ_DS_0_OFFSET0_MASK) >> SQ_DS_0_OFFSET0_SHIFT)

#define SQ_DS_0_GET_OFFSET1__VI(sq_ds_0) ((sq_ds_0 & SQ_DS_0_OFFSET1_MASK) >> SQ_DS_0_OFFSET1_SHIFT)

#define SQ_DS_0_GET_OP__VI(sq_ds_0) ((sq_ds_0 & SQ_DS_0_OP_MASK) >> SQ_DS_0_OP_SHIFT)

#define SQ_DS_0_MASK__VI                                                                           \
  (SQ_DS_0_OFFSET0_MASK | SQ_DS_0_OFFSET1_MASK | SQ_DS_0_GDS_MASK | SQ_DS_0_OP_MASK |              \
   SQ_DS_0_ENCODING_MASK)

#define SQ_DS_0_OP_MASK__SI__CI 0x03fc0000
#define SQ_DS_0_OP_MASK__VI 0x01fe0000
#define SQ_DS_0_OP_SHIFT__SI__CI 18
#define SQ_DS_0_OP_SHIFT__VI 17
#define SQ_DS_0_SET_ENCODING__VI(sq_ds_0_reg, encoding)                                            \
  sq_ds_0_reg = (sq_ds_0_reg & ~SQ_DS_0_ENCODING_MASK) | (encoding << SQ_DS_0_ENCODING_SHIFT)

#define SQ_DS_0_SET_GDS__VI(sq_ds_0_reg, gds)                                                      \
  sq_ds_0_reg = (sq_ds_0_reg & ~SQ_DS_0_GDS_MASK) | (gds << SQ_DS_0_GDS_SHIFT)

#define SQ_DS_0_SET_OFFSET0__VI(sq_ds_0_reg, offset0)                                              \
  sq_ds_0_reg = (sq_ds_0_reg & ~SQ_DS_0_OFFSET0_MASK) | (offset0 << SQ_DS_0_OFFSET0_SHIFT)

#define SQ_DS_0_SET_OFFSET1__VI(sq_ds_0_reg, offset1)                                              \
  sq_ds_0_reg = (sq_ds_0_reg & ~SQ_DS_0_OFFSET1_MASK) | (offset1 << SQ_DS_0_OFFSET1_SHIFT)

#define SQ_DS_0_SET_OP__VI(sq_ds_0_reg, op)                                                        \
  sq_ds_0_reg = (sq_ds_0_reg & ~SQ_DS_0_OP_MASK) | (op << SQ_DS_0_OP_SHIFT)

#define SQ_DS_1_GET_ADDR__VI(sq_ds_1) ((sq_ds_1 & SQ_DS_1_ADDR_MASK) >> SQ_DS_1_ADDR_SHIFT)

#define SQ_DS_1_GET_DATA0__VI(sq_ds_1) ((sq_ds_1 & SQ_DS_1_DATA0_MASK) >> SQ_DS_1_DATA0_SHIFT)

#define SQ_DS_1_GET_DATA1__VI(sq_ds_1) ((sq_ds_1 & SQ_DS_1_DATA1_MASK) >> SQ_DS_1_DATA1_SHIFT)

#define SQ_DS_1_GET_VDST__VI(sq_ds_1) ((sq_ds_1 & SQ_DS_1_VDST_MASK) >> SQ_DS_1_VDST_SHIFT)

#define SQ_DS_1_MASK__VI                                                                           \
  (SQ_DS_1_ADDR_MASK | SQ_DS_1_DATA0_MASK | SQ_DS_1_DATA1_MASK | SQ_DS_1_VDST_MASK)

#define SQ_DS_1_SET_ADDR__VI(sq_ds_1_reg, addr)                                                    \
  sq_ds_1_reg = (sq_ds_1_reg & ~SQ_DS_1_ADDR_MASK) | (addr << SQ_DS_1_ADDR_SHIFT)

#define SQ_DS_1_SET_DATA0__VI(sq_ds_1_reg, data0)                                                  \
  sq_ds_1_reg = (sq_ds_1_reg & ~SQ_DS_1_DATA0_MASK) | (data0 << SQ_DS_1_DATA0_SHIFT)

#define SQ_DS_1_SET_DATA1__VI(sq_ds_1_reg, data1)                                                  \
  sq_ds_1_reg = (sq_ds_1_reg & ~SQ_DS_1_DATA1_MASK) | (data1 << SQ_DS_1_DATA1_SHIFT)

#define SQ_DS_1_SET_VDST__VI(sq_ds_1_reg, vdst)                                                    \
  sq_ds_1_reg = (sq_ds_1_reg & ~SQ_DS_1_VDST_MASK) | (vdst << SQ_DS_1_VDST_SHIFT)

#define SQ_DS_ADD_F32__VI 0x00000015
#define SQ_DS_ADD_RTN_F32__VI 0x00000035
#define SQ_DS_ADD_SRC2_F32__VI 0x00000095
#define SQ_DS_APPEND__SI__CI 0x0000003e
#define SQ_DS_APPEND__VI 0x000000be
#define SQ_DS_BPERMUTE_B32__VI 0x0000003f
#define SQ_DS_CONSUME__SI__CI 0x0000003d
#define SQ_DS_CONSUME__VI 0x000000bd
#define SQ_DS_GWS_BARRIER__SI__CI 0x0000001d
#define SQ_DS_GWS_BARRIER__VI 0x0000009d
#define SQ_DS_GWS_INIT__SI__CI 0x00000019
#define SQ_DS_GWS_INIT__VI 0x00000099
#define SQ_DS_GWS_SEMA_BR__SI__CI 0x0000001b
#define SQ_DS_GWS_SEMA_BR__VI 0x0000009b
#define SQ_DS_GWS_SEMA_P__SI__CI 0x0000001c
#define SQ_DS_GWS_SEMA_P__VI 0x0000009c
#define SQ_DS_GWS_SEMA_RELEASE_ALL__VI 0x00000098
#define SQ_DS_GWS_SEMA_V__SI__CI 0x0000001a
#define SQ_DS_GWS_SEMA_V__VI 0x0000009a
#define SQ_DS_ORDERED_COUNT__SI__CI 0x0000003f
#define SQ_DS_ORDERED_COUNT__VI 0x000000bf
#define SQ_DS_PERMUTE_B32__VI 0x0000003e
#define SQ_DS_SWIZZLE_B32__SI__CI 0x00000035
#define SQ_DS_SWIZZLE_B32__VI 0x0000003d
#define SQ_ENC_EXP_BITS__SI__CI 0xf8000000
#define SQ_ENC_EXP_BITS__VI 0xc4000000
#define SQ_ENC_EXP_FIELD__SI__CI 0x0000003e
#define SQ_ENC_EXP_FIELD__VI 0x00000031
#define SQ_ENC_SMEM_BITS__VI 0xc0000000
#define SQ_ENC_SMEM_FIELD__VI 0x00000030
#define SQ_ENC_SMEM_MASK__VI 0xfc000000
#define SQ_ENC_VINTRP_BITS__SI__CI 0xc8000000
#define SQ_ENC_VINTRP_BITS__VI 0xd4000000
#define SQ_ENC_VINTRP_FIELD__SI__CI 0x00000032
#define SQ_ENC_VINTRP_FIELD__VI 0x00000035
#define SQ_EXP_0_GET_COMPR__VI(sq_exp_0) ((sq_exp_0 & SQ_EXP_0_COMPR_MASK) >> SQ_EXP_0_COMPR_SHIFT)

#define SQ_EXP_0_GET_DONE__VI(sq_exp_0) ((sq_exp_0 & SQ_EXP_0_DONE_MASK) >> SQ_EXP_0_DONE_SHIFT)

#define SQ_EXP_0_GET_EN__VI(sq_exp_0) ((sq_exp_0 & SQ_EXP_0_EN_MASK) >> SQ_EXP_0_EN_SHIFT)

#define SQ_EXP_0_GET_ENCODING__VI(sq_exp_0)                                                        \
  ((sq_exp_0 & SQ_EXP_0_ENCODING_MASK) >> SQ_EXP_0_ENCODING_SHIFT)

#define SQ_EXP_0_GET_TGT__VI(sq_exp_0) ((sq_exp_0 & SQ_EXP_0_TGT_MASK) >> SQ_EXP_0_TGT_SHIFT)

#define SQ_EXP_0_GET_VM__VI(sq_exp_0) ((sq_exp_0 & SQ_EXP_0_VM_MASK) >> SQ_EXP_0_VM_SHIFT)

#define SQ_EXP_0_MASK__VI                                                                          \
  (SQ_EXP_0_EN_MASK | SQ_EXP_0_TGT_MASK | SQ_EXP_0_COMPR_MASK | SQ_EXP_0_DONE_MASK |               \
   SQ_EXP_0_VM_MASK | SQ_EXP_0_ENCODING_MASK)

#define SQ_EXP_0_SET_COMPR__VI(sq_exp_0_reg, compr)                                                \
  sq_exp_0_reg = (sq_exp_0_reg & ~SQ_EXP_0_COMPR_MASK) | (compr << SQ_EXP_0_COMPR_SHIFT)

#define SQ_EXP_0_SET_DONE__VI(sq_exp_0_reg, done)                                                  \
  sq_exp_0_reg = (sq_exp_0_reg & ~SQ_EXP_0_DONE_MASK) | (done << SQ_EXP_0_DONE_SHIFT)

#define SQ_EXP_0_SET_EN__VI(sq_exp_0_reg, en)                                                      \
  sq_exp_0_reg = (sq_exp_0_reg & ~SQ_EXP_0_EN_MASK) | (en << SQ_EXP_0_EN_SHIFT)

#define SQ_EXP_0_SET_ENCODING__VI(sq_exp_0_reg, encoding)                                          \
  sq_exp_0_reg = (sq_exp_0_reg & ~SQ_EXP_0_ENCODING_MASK) | (encoding << SQ_EXP_0_ENCODING_SHIFT)

#define SQ_EXP_0_SET_TGT__VI(sq_exp_0_reg, tgt)                                                    \
  sq_exp_0_reg = (sq_exp_0_reg & ~SQ_EXP_0_TGT_MASK) | (tgt << SQ_EXP_0_TGT_SHIFT)

#define SQ_EXP_0_SET_VM__VI(sq_exp_0_reg, vm)                                                      \
  sq_exp_0_reg = (sq_exp_0_reg & ~SQ_EXP_0_VM_MASK) | (vm << SQ_EXP_0_VM_SHIFT)

#define SQ_EXP_1_GET_VSRC0__VI(sq_exp_1) ((sq_exp_1 & SQ_EXP_1_VSRC0_MASK) >> SQ_EXP_1_VSRC0_SHIFT)

#define SQ_EXP_1_GET_VSRC1__VI(sq_exp_1) ((sq_exp_1 & SQ_EXP_1_VSRC1_MASK) >> SQ_EXP_1_VSRC1_SHIFT)

#define SQ_EXP_1_GET_VSRC2__VI(sq_exp_1) ((sq_exp_1 & SQ_EXP_1_VSRC2_MASK) >> SQ_EXP_1_VSRC2_SHIFT)

#define SQ_EXP_1_GET_VSRC3__VI(sq_exp_1) ((sq_exp_1 & SQ_EXP_1_VSRC3_MASK) >> SQ_EXP_1_VSRC3_SHIFT)

#define SQ_EXP_1_MASK__VI                                                                          \
  (SQ_EXP_1_VSRC0_MASK | SQ_EXP_1_VSRC1_MASK | SQ_EXP_1_VSRC2_MASK | SQ_EXP_1_VSRC3_MASK)

#define SQ_EXP_1_SET_VSRC0__VI(sq_exp_1_reg, vsrc0)                                                \
  sq_exp_1_reg = (sq_exp_1_reg & ~SQ_EXP_1_VSRC0_MASK) | (vsrc0 << SQ_EXP_1_VSRC0_SHIFT)

#define SQ_EXP_1_SET_VSRC1__VI(sq_exp_1_reg, vsrc1)                                                \
  sq_exp_1_reg = (sq_exp_1_reg & ~SQ_EXP_1_VSRC1_MASK) | (vsrc1 << SQ_EXP_1_VSRC1_SHIFT)

#define SQ_EXP_1_SET_VSRC2__VI(sq_exp_1_reg, vsrc2)                                                \
  sq_exp_1_reg = (sq_exp_1_reg & ~SQ_EXP_1_VSRC2_MASK) | (vsrc2 << SQ_EXP_1_VSRC2_SHIFT)

#define SQ_EXP_1_SET_VSRC3__VI(sq_exp_1_reg, vsrc3)                                                \
  sq_exp_1_reg = (sq_exp_1_reg & ~SQ_EXP_1_VSRC3_MASK) | (vsrc3 << SQ_EXP_1_VSRC3_SHIFT)

#define SQ_FLAT_0_GET_ENCODING__VI(sq_flat_0)                                                      \
  ((sq_flat_0 & SQ_FLAT_0_ENCODING_MASK) >> SQ_FLAT_0_ENCODING_SHIFT)

#define SQ_FLAT_0_GET_GLC__VI(sq_flat_0) ((sq_flat_0 & SQ_FLAT_0_GLC_MASK) >> SQ_FLAT_0_GLC_SHIFT)

#define SQ_FLAT_0_GET_OP__VI(sq_flat_0) ((sq_flat_0 & SQ_FLAT_0_OP_MASK) >> SQ_FLAT_0_OP_SHIFT)

#define SQ_FLAT_0_GET_SLC__VI(sq_flat_0) ((sq_flat_0 & SQ_FLAT_0_SLC_MASK) >> SQ_FLAT_0_SLC_SHIFT)

#define SQ_FLAT_0_MASK__VI                                                                         \
  (SQ_FLAT_0_GLC_MASK | SQ_FLAT_0_SLC_MASK | SQ_FLAT_0_OP_MASK | SQ_FLAT_0_ENCODING_MASK)

#define SQ_FLAT_0_SET_ENCODING__VI(sq_flat_0_reg, encoding)                                        \
  sq_flat_0_reg =                                                                                  \
      (sq_flat_0_reg & ~SQ_FLAT_0_ENCODING_MASK) | (encoding << SQ_FLAT_0_ENCODING_SHIFT)

#define SQ_FLAT_0_SET_GLC__VI(sq_flat_0_reg, glc)                                                  \
  sq_flat_0_reg = (sq_flat_0_reg & ~SQ_FLAT_0_GLC_MASK) | (glc << SQ_FLAT_0_GLC_SHIFT)

#define SQ_FLAT_0_SET_OP__VI(sq_flat_0_reg, op)                                                    \
  sq_flat_0_reg = (sq_flat_0_reg & ~SQ_FLAT_0_OP_MASK) | (op << SQ_FLAT_0_OP_SHIFT)

#define SQ_FLAT_0_SET_SLC__VI(sq_flat_0_reg, slc)                                                  \
  sq_flat_0_reg = (sq_flat_0_reg & ~SQ_FLAT_0_SLC_MASK) | (slc << SQ_FLAT_0_SLC_SHIFT)

#define SQ_FLAT_1_GET_ADDR__VI(sq_flat_1)                                                          \
  ((sq_flat_1 & SQ_FLAT_1_ADDR_MASK) >> SQ_FLAT_1_ADDR_SHIFT)

#define SQ_FLAT_1_GET_DATA__VI(sq_flat_1)                                                          \
  ((sq_flat_1 & SQ_FLAT_1_DATA_MASK) >> SQ_FLAT_1_DATA_SHIFT)

#define SQ_FLAT_1_GET_TFE__VI(sq_flat_1) ((sq_flat_1 & SQ_FLAT_1_TFE_MASK) >> SQ_FLAT_1_TFE_SHIFT)

#define SQ_FLAT_1_GET_VDST__VI(sq_flat_1)                                                          \
  ((sq_flat_1 & SQ_FLAT_1_VDST_MASK) >> SQ_FLAT_1_VDST_SHIFT)

#define SQ_FLAT_1_MASK__VI                                                                         \
  (SQ_FLAT_1_ADDR_MASK | SQ_FLAT_1_DATA_MASK | SQ_FLAT_1_TFE_MASK | SQ_FLAT_1_VDST_MASK)

#define SQ_FLAT_1_SET_ADDR__VI(sq_flat_1_reg, addr)                                                \
  sq_flat_1_reg = (sq_flat_1_reg & ~SQ_FLAT_1_ADDR_MASK) | (addr << SQ_FLAT_1_ADDR_SHIFT)

#define SQ_FLAT_1_SET_DATA__VI(sq_flat_1_reg, data)                                                \
  sq_flat_1_reg = (sq_flat_1_reg & ~SQ_FLAT_1_DATA_MASK) | (data << SQ_FLAT_1_DATA_SHIFT)

#define SQ_FLAT_1_SET_TFE__VI(sq_flat_1_reg, tfe)                                                  \
  sq_flat_1_reg = (sq_flat_1_reg & ~SQ_FLAT_1_TFE_MASK) | (tfe << SQ_FLAT_1_TFE_SHIFT)

#define SQ_FLAT_1_SET_VDST__VI(sq_flat_1_reg, vdst)                                                \
  sq_flat_1_reg = (sq_flat_1_reg & ~SQ_FLAT_1_VDST_MASK) | (vdst << SQ_FLAT_1_VDST_SHIFT)

#define SQ_FLAT_ATOMIC_ADD__VI 0x00000042
#define SQ_FLAT_ATOMIC_ADD_X2__VI 0x00000062
#define SQ_FLAT_ATOMIC_AND__VI 0x00000048
#define SQ_FLAT_ATOMIC_AND_X2__VI 0x00000068
#define SQ_FLAT_ATOMIC_CMPSWAP__VI 0x00000041
#define SQ_FLAT_ATOMIC_CMPSWAP_X2__VI 0x00000061
#define SQ_FLAT_ATOMIC_DEC__VI 0x0000004c
#define SQ_FLAT_ATOMIC_DEC_X2__VI 0x0000006c
#define SQ_FLAT_ATOMIC_INC__VI 0x0000004b
#define SQ_FLAT_ATOMIC_INC_X2__VI 0x0000006b
#define SQ_FLAT_ATOMIC_OR__VI 0x00000049
#define SQ_FLAT_ATOMIC_OR_X2__VI 0x00000069
#define SQ_FLAT_ATOMIC_SMAX__VI 0x00000046
#define SQ_FLAT_ATOMIC_SMAX_X2__VI 0x00000066
#define SQ_FLAT_ATOMIC_SMIN__VI 0x00000044
#define SQ_FLAT_ATOMIC_SMIN_X2__VI 0x00000064
#define SQ_FLAT_ATOMIC_SUB__VI 0x00000043
#define SQ_FLAT_ATOMIC_SUB_X2__VI 0x00000063
#define SQ_FLAT_ATOMIC_SWAP__VI 0x00000040
#define SQ_FLAT_ATOMIC_SWAP_X2__VI 0x00000060
#define SQ_FLAT_ATOMIC_UMAX__VI 0x00000047
#define SQ_FLAT_ATOMIC_UMAX_X2__VI 0x00000067
#define SQ_FLAT_ATOMIC_UMIN__VI 0x00000045
#define SQ_FLAT_ATOMIC_UMIN_X2__VI 0x00000065
#define SQ_FLAT_ATOMIC_XOR__VI 0x0000004a
#define SQ_FLAT_ATOMIC_XOR_X2__VI 0x0000006a
#define SQ_FLAT_LOAD_DWORD__VI 0x00000014
#define SQ_FLAT_LOAD_DWORDX2__VI 0x00000015
#define SQ_FLAT_LOAD_DWORDX3__VI 0x00000016
#define SQ_FLAT_LOAD_DWORDX4__VI 0x00000017
#define SQ_FLAT_LOAD_SBYTE__VI 0x00000011
#define SQ_FLAT_LOAD_SSHORT__VI 0x00000013
#define SQ_FLAT_LOAD_UBYTE__VI 0x00000010
#define SQ_FLAT_LOAD_USHORT__VI 0x00000012
#define SQ_FLAT_SCRATCH_HI__VI 0x00000067
#define SQ_FLAT_SCRATCH_LO__VI 0x00000066
#define SQ_FLAT_STORE_DWORDX3__VI 0x0000001e
#define SQ_FLAT_STORE_DWORDX4__VI 0x0000001f
#define SQ_HW_REG_IB_DBG1__VI 0x0000000d
#define SQ_IMAGE_ATOMIC_ADD__SI__CI 0x00000011
#define SQ_IMAGE_ATOMIC_ADD__VI 0x00000012
#define SQ_IMAGE_ATOMIC_CMPSWAP__SI__CI 0x00000010
#define SQ_IMAGE_ATOMIC_CMPSWAP__VI 0x00000011
#define SQ_IMAGE_ATOMIC_SUB__SI__CI 0x00000012
#define SQ_IMAGE_ATOMIC_SUB__VI 0x00000013
#define SQ_IMAGE_ATOMIC_SWAP__SI__CI 0x0000000f
#define SQ_IMAGE_ATOMIC_SWAP__VI 0x00000010
#define SQ_INST_GET_ENCODING__VI(sq_inst)                                                          \
  ((sq_inst & SQ_INST_ENCODING_MASK) >> SQ_INST_ENCODING_SHIFT)

#define SQ_INST_MASK__VI (SQ_INST_ENCODING_MASK)

#define SQ_INST_SET_ENCODING__VI(sq_inst_reg, encoding)                                            \
  sq_inst_reg = (sq_inst_reg & ~SQ_INST_ENCODING_MASK) | (encoding << SQ_INST_ENCODING_SHIFT)

#define SQ_L1__VI 0x00000001
#define SQ_L10__VI 0x0000000a
#define SQ_L11__VI 0x0000000b
#define SQ_L12__VI 0x0000000c
#define SQ_L13__VI 0x0000000d
#define SQ_L14__VI 0x0000000e
#define SQ_L15__VI 0x0000000f
#define SQ_L2__VI 0x00000002
#define SQ_L3__VI 0x00000003
#define SQ_L4__VI 0x00000004
#define SQ_L5__VI 0x00000005
#define SQ_L6__VI 0x00000006
#define SQ_L7__VI 0x00000007
#define SQ_L8__VI 0x00000008
#define SQ_L9__VI 0x00000009
#define SQ_MIMG_0_GET_DA__VI(sq_mimg_0) ((sq_mimg_0 & SQ_MIMG_0_DA_MASK) >> SQ_MIMG_0_DA_SHIFT)

#define SQ_MIMG_0_GET_DMASK__VI(sq_mimg_0)                                                         \
  ((sq_mimg_0 & SQ_MIMG_0_DMASK_MASK) >> SQ_MIMG_0_DMASK_SHIFT)

#define SQ_MIMG_0_GET_ENCODING__VI(sq_mimg_0)                                                      \
  ((sq_mimg_0 & SQ_MIMG_0_ENCODING_MASK) >> SQ_MIMG_0_ENCODING_SHIFT)

#define SQ_MIMG_0_GET_GLC__VI(sq_mimg_0) ((sq_mimg_0 & SQ_MIMG_0_GLC_MASK) >> SQ_MIMG_0_GLC_SHIFT)

#define SQ_MIMG_0_GET_LWE__VI(sq_mimg_0) ((sq_mimg_0 & SQ_MIMG_0_LWE_MASK) >> SQ_MIMG_0_LWE_SHIFT)

#define SQ_MIMG_0_GET_OP__VI(sq_mimg_0) ((sq_mimg_0 & SQ_MIMG_0_OP_MASK) >> SQ_MIMG_0_OP_SHIFT)

#define SQ_MIMG_0_GET_R128__VI(sq_mimg_0)                                                          \
  ((sq_mimg_0 & SQ_MIMG_0_R128_MASK) >> SQ_MIMG_0_R128_SHIFT)

#define SQ_MIMG_0_GET_SLC__VI(sq_mimg_0) ((sq_mimg_0 & SQ_MIMG_0_SLC_MASK) >> SQ_MIMG_0_SLC_SHIFT)

#define SQ_MIMG_0_GET_TFE__VI(sq_mimg_0) ((sq_mimg_0 & SQ_MIMG_0_TFE_MASK) >> SQ_MIMG_0_TFE_SHIFT)

#define SQ_MIMG_0_GET_UNORM__VI(sq_mimg_0)                                                         \
  ((sq_mimg_0 & SQ_MIMG_0_UNORM_MASK) >> SQ_MIMG_0_UNORM_SHIFT)

#define SQ_MIMG_0_MASK__VI                                                                         \
  (SQ_MIMG_0_DMASK_MASK | SQ_MIMG_0_UNORM_MASK | SQ_MIMG_0_GLC_MASK | SQ_MIMG_0_DA_MASK |          \
   SQ_MIMG_0_R128_MASK | SQ_MIMG_0_TFE_MASK | SQ_MIMG_0_LWE_MASK | SQ_MIMG_0_OP_MASK |             \
   SQ_MIMG_0_SLC_MASK | SQ_MIMG_0_ENCODING_MASK)

#define SQ_MIMG_0_SET_DA__VI(sq_mimg_0_reg, da)                                                    \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_DA_MASK) | (da << SQ_MIMG_0_DA_SHIFT)

#define SQ_MIMG_0_SET_DMASK__VI(sq_mimg_0_reg, dmask)                                              \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_DMASK_MASK) | (dmask << SQ_MIMG_0_DMASK_SHIFT)

#define SQ_MIMG_0_SET_ENCODING__VI(sq_mimg_0_reg, encoding)                                        \
  sq_mimg_0_reg =                                                                                  \
      (sq_mimg_0_reg & ~SQ_MIMG_0_ENCODING_MASK) | (encoding << SQ_MIMG_0_ENCODING_SHIFT)

#define SQ_MIMG_0_SET_GLC__VI(sq_mimg_0_reg, glc)                                                  \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_GLC_MASK) | (glc << SQ_MIMG_0_GLC_SHIFT)

#define SQ_MIMG_0_SET_LWE__VI(sq_mimg_0_reg, lwe)                                                  \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_LWE_MASK) | (lwe << SQ_MIMG_0_LWE_SHIFT)

#define SQ_MIMG_0_SET_OP__VI(sq_mimg_0_reg, op)                                                    \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_OP_MASK) | (op << SQ_MIMG_0_OP_SHIFT)

#define SQ_MIMG_0_SET_R128__VI(sq_mimg_0_reg, r128)                                                \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_R128_MASK) | (r128 << SQ_MIMG_0_R128_SHIFT)

#define SQ_MIMG_0_SET_SLC__VI(sq_mimg_0_reg, slc)                                                  \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_SLC_MASK) | (slc << SQ_MIMG_0_SLC_SHIFT)

#define SQ_MIMG_0_SET_TFE__VI(sq_mimg_0_reg, tfe)                                                  \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_TFE_MASK) | (tfe << SQ_MIMG_0_TFE_SHIFT)

#define SQ_MIMG_0_SET_UNORM__VI(sq_mimg_0_reg, unorm)                                              \
  sq_mimg_0_reg = (sq_mimg_0_reg & ~SQ_MIMG_0_UNORM_MASK) | (unorm << SQ_MIMG_0_UNORM_SHIFT)

#define SQ_MIMG_1_D16_MASK__VI 0x80000000
#define SQ_MIMG_1_D16_SHIFT__VI 31
#define SQ_MIMG_1_D16_SIZE__VI 1
#define SQ_MIMG_1_DEFAULT__SI__CI 0x01cdcdcd
#define SQ_MIMG_1_DEFAULT__VI 0x81cdcdcd
#define SQ_MIMG_1_GET_D16__VI(sq_mimg_1) ((sq_mimg_1 & SQ_MIMG_1_D16_MASK) >> SQ_MIMG_1_D16_SHIFT)

#define SQ_MIMG_1_GET_SRSRC__VI(sq_mimg_1)                                                         \
  ((sq_mimg_1 & SQ_MIMG_1_SRSRC_MASK) >> SQ_MIMG_1_SRSRC_SHIFT)

#define SQ_MIMG_1_GET_SSAMP__VI(sq_mimg_1)                                                         \
  ((sq_mimg_1 & SQ_MIMG_1_SSAMP_MASK) >> SQ_MIMG_1_SSAMP_SHIFT)

#define SQ_MIMG_1_GET_VADDR__VI(sq_mimg_1)                                                         \
  ((sq_mimg_1 & SQ_MIMG_1_VADDR_MASK) >> SQ_MIMG_1_VADDR_SHIFT)

#define SQ_MIMG_1_GET_VDATA__VI(sq_mimg_1)                                                         \
  ((sq_mimg_1 & SQ_MIMG_1_VDATA_MASK) >> SQ_MIMG_1_VDATA_SHIFT)

#define SQ_MIMG_1_MASK__VI                                                                         \
  (SQ_MIMG_1_VADDR_MASK | SQ_MIMG_1_VDATA_MASK | SQ_MIMG_1_SRSRC_MASK | SQ_MIMG_1_SSAMP_MASK |     \
   SQ_MIMG_1_D16_MASK)

#define SQ_MIMG_1_SET_D16__VI(sq_mimg_1_reg, d16)                                                  \
  sq_mimg_1_reg = (sq_mimg_1_reg & ~SQ_MIMG_1_D16_MASK) | (d16 << SQ_MIMG_1_D16_SHIFT)

#define SQ_MIMG_1_SET_SRSRC__VI(sq_mimg_1_reg, srsrc)                                              \
  sq_mimg_1_reg = (sq_mimg_1_reg & ~SQ_MIMG_1_SRSRC_MASK) | (srsrc << SQ_MIMG_1_SRSRC_SHIFT)

#define SQ_MIMG_1_SET_SSAMP__VI(sq_mimg_1_reg, ssamp)                                              \
  sq_mimg_1_reg = (sq_mimg_1_reg & ~SQ_MIMG_1_SSAMP_MASK) | (ssamp << SQ_MIMG_1_SSAMP_SHIFT)

#define SQ_MIMG_1_SET_VADDR__VI(sq_mimg_1_reg, vaddr)                                              \
  sq_mimg_1_reg = (sq_mimg_1_reg & ~SQ_MIMG_1_VADDR_MASK) | (vaddr << SQ_MIMG_1_VADDR_SHIFT)

#define SQ_MIMG_1_SET_VDATA__VI(sq_mimg_1_reg, vdata)                                              \
  sq_mimg_1_reg = (sq_mimg_1_reg & ~SQ_MIMG_1_VDATA_MASK) | (vdata << SQ_MIMG_1_VDATA_SHIFT)

#define SQ_MSG_SAVEWAVE__VI 0x00000004
#define SQ_MTBUF_0_GET_DFMT__VI(sq_mtbuf_0)                                                        \
  ((sq_mtbuf_0 & SQ_MTBUF_0_DFMT_MASK) >> SQ_MTBUF_0_DFMT_SHIFT)

#define SQ_MTBUF_0_GET_ENCODING__VI(sq_mtbuf_0)                                                    \
  ((sq_mtbuf_0 & SQ_MTBUF_0_ENCODING_MASK) >> SQ_MTBUF_0_ENCODING_SHIFT)

#define SQ_MTBUF_0_GET_GLC__VI(sq_mtbuf_0)                                                         \
  ((sq_mtbuf_0 & SQ_MTBUF_0_GLC_MASK) >> SQ_MTBUF_0_GLC_SHIFT)

#define SQ_MTBUF_0_GET_IDXEN__VI(sq_mtbuf_0)                                                       \
  ((sq_mtbuf_0 & SQ_MTBUF_0_IDXEN_MASK) >> SQ_MTBUF_0_IDXEN_SHIFT)

#define SQ_MTBUF_0_GET_NFMT__VI(sq_mtbuf_0)                                                        \
  ((sq_mtbuf_0 & SQ_MTBUF_0_NFMT_MASK) >> SQ_MTBUF_0_NFMT_SHIFT)

#define SQ_MTBUF_0_GET_OFFEN__VI(sq_mtbuf_0)                                                       \
  ((sq_mtbuf_0 & SQ_MTBUF_0_OFFEN_MASK) >> SQ_MTBUF_0_OFFEN_SHIFT)

#define SQ_MTBUF_0_GET_OFFSET__VI(sq_mtbuf_0)                                                      \
  ((sq_mtbuf_0 & SQ_MTBUF_0_OFFSET_MASK) >> SQ_MTBUF_0_OFFSET_SHIFT)

#define SQ_MTBUF_0_GET_OP__VI(sq_mtbuf_0) ((sq_mtbuf_0 & SQ_MTBUF_0_OP_MASK) >> SQ_MTBUF_0_OP_SHIFT)

#define SQ_MTBUF_0_MASK__VI                                                                        \
  (SQ_MTBUF_0_OFFSET_MASK | SQ_MTBUF_0_OFFEN_MASK | SQ_MTBUF_0_IDXEN_MASK | SQ_MTBUF_0_GLC_MASK |  \
   SQ_MTBUF_0_OP_MASK | SQ_MTBUF_0_DFMT_MASK | SQ_MTBUF_0_NFMT_MASK | SQ_MTBUF_0_ENCODING_MASK)

#define SQ_MTBUF_0_OP_MASK__SI__CI 0x00070000
#define SQ_MTBUF_0_OP_MASK__VI 0x00078000
#define SQ_MTBUF_0_OP_SHIFT__SI__CI 16
#define SQ_MTBUF_0_OP_SHIFT__VI 15
#define SQ_MTBUF_0_OP_SIZE__SI__CI 3
#define SQ_MTBUF_0_OP_SIZE__VI 4
#define SQ_MTBUF_0_SET_DFMT__VI(sq_mtbuf_0_reg, dfmt)                                              \
  sq_mtbuf_0_reg = (sq_mtbuf_0_reg & ~SQ_MTBUF_0_DFMT_MASK) | (dfmt << SQ_MTBUF_0_DFMT_SHIFT)

#define SQ_MTBUF_0_SET_ENCODING__VI(sq_mtbuf_0_reg, encoding)                                      \
  sq_mtbuf_0_reg =                                                                                 \
      (sq_mtbuf_0_reg & ~SQ_MTBUF_0_ENCODING_MASK) | (encoding << SQ_MTBUF_0_ENCODING_SHIFT)

#define SQ_MTBUF_0_SET_GLC__VI(sq_mtbuf_0_reg, glc)                                                \
  sq_mtbuf_0_reg = (sq_mtbuf_0_reg & ~SQ_MTBUF_0_GLC_MASK) | (glc << SQ_MTBUF_0_GLC_SHIFT)

#define SQ_MTBUF_0_SET_IDXEN__VI(sq_mtbuf_0_reg, idxen)                                            \
  sq_mtbuf_0_reg = (sq_mtbuf_0_reg & ~SQ_MTBUF_0_IDXEN_MASK) | (idxen << SQ_MTBUF_0_IDXEN_SHIFT)

#define SQ_MTBUF_0_SET_NFMT__VI(sq_mtbuf_0_reg, nfmt)                                              \
  sq_mtbuf_0_reg = (sq_mtbuf_0_reg & ~SQ_MTBUF_0_NFMT_MASK) | (nfmt << SQ_MTBUF_0_NFMT_SHIFT)

#define SQ_MTBUF_0_SET_OFFEN__VI(sq_mtbuf_0_reg, offen)                                            \
  sq_mtbuf_0_reg = (sq_mtbuf_0_reg & ~SQ_MTBUF_0_OFFEN_MASK) | (offen << SQ_MTBUF_0_OFFEN_SHIFT)

#define SQ_MTBUF_0_SET_OFFSET__VI(sq_mtbuf_0_reg, offset)                                          \
  sq_mtbuf_0_reg = (sq_mtbuf_0_reg & ~SQ_MTBUF_0_OFFSET_MASK) | (offset << SQ_MTBUF_0_OFFSET_SHIFT)

#define SQ_MTBUF_0_SET_OP__VI(sq_mtbuf_0_reg, op)                                                  \
  sq_mtbuf_0_reg = (sq_mtbuf_0_reg & ~SQ_MTBUF_0_OP_MASK) | (op << SQ_MTBUF_0_OP_SHIFT)

#define SQ_MTBUF_1_GET_SLC__VI(sq_mtbuf_1)                                                         \
  ((sq_mtbuf_1 & SQ_MTBUF_1_SLC_MASK) >> SQ_MTBUF_1_SLC_SHIFT)

#define SQ_MTBUF_1_GET_SOFFSET__VI(sq_mtbuf_1)                                                     \
  ((sq_mtbuf_1 & SQ_MTBUF_1_SOFFSET_MASK) >> SQ_MTBUF_1_SOFFSET_SHIFT)

#define SQ_MTBUF_1_GET_SRSRC__VI(sq_mtbuf_1)                                                       \
  ((sq_mtbuf_1 & SQ_MTBUF_1_SRSRC_MASK) >> SQ_MTBUF_1_SRSRC_SHIFT)

#define SQ_MTBUF_1_GET_TFE__VI(sq_mtbuf_1)                                                         \
  ((sq_mtbuf_1 & SQ_MTBUF_1_TFE_MASK) >> SQ_MTBUF_1_TFE_SHIFT)

#define SQ_MTBUF_1_GET_VADDR__VI(sq_mtbuf_1)                                                       \
  ((sq_mtbuf_1 & SQ_MTBUF_1_VADDR_MASK) >> SQ_MTBUF_1_VADDR_SHIFT)

#define SQ_MTBUF_1_GET_VDATA__VI(sq_mtbuf_1)                                                       \
  ((sq_mtbuf_1 & SQ_MTBUF_1_VDATA_MASK) >> SQ_MTBUF_1_VDATA_SHIFT)

#define SQ_MTBUF_1_MASK__VI                                                                        \
  (SQ_MTBUF_1_VADDR_MASK | SQ_MTBUF_1_VDATA_MASK | SQ_MTBUF_1_SRSRC_MASK | SQ_MTBUF_1_SLC_MASK |   \
   SQ_MTBUF_1_TFE_MASK | SQ_MTBUF_1_SOFFSET_MASK)

#define SQ_MTBUF_1_SET_SLC__VI(sq_mtbuf_1_reg, slc)                                                \
  sq_mtbuf_1_reg = (sq_mtbuf_1_reg & ~SQ_MTBUF_1_SLC_MASK) | (slc << SQ_MTBUF_1_SLC_SHIFT)

#define SQ_MTBUF_1_SET_SOFFSET__VI(sq_mtbuf_1_reg, soffset)                                        \
  sq_mtbuf_1_reg =                                                                                 \
      (sq_mtbuf_1_reg & ~SQ_MTBUF_1_SOFFSET_MASK) | (soffset << SQ_MTBUF_1_SOFFSET_SHIFT)

#define SQ_MTBUF_1_SET_SRSRC__VI(sq_mtbuf_1_reg, srsrc)                                            \
  sq_mtbuf_1_reg = (sq_mtbuf_1_reg & ~SQ_MTBUF_1_SRSRC_MASK) | (srsrc << SQ_MTBUF_1_SRSRC_SHIFT)

#define SQ_MTBUF_1_SET_TFE__VI(sq_mtbuf_1_reg, tfe)                                                \
  sq_mtbuf_1_reg = (sq_mtbuf_1_reg & ~SQ_MTBUF_1_TFE_MASK) | (tfe << SQ_MTBUF_1_TFE_SHIFT)

#define SQ_MTBUF_1_SET_VADDR__VI(sq_mtbuf_1_reg, vaddr)                                            \
  sq_mtbuf_1_reg = (sq_mtbuf_1_reg & ~SQ_MTBUF_1_VADDR_MASK) | (vaddr << SQ_MTBUF_1_VADDR_SHIFT)

#define SQ_MTBUF_1_SET_VDATA__VI(sq_mtbuf_1_reg, vdata)                                            \
  sq_mtbuf_1_reg = (sq_mtbuf_1_reg & ~SQ_MTBUF_1_VDATA_MASK) | (vdata << SQ_MTBUF_1_VDATA_SHIFT)

#define SQ_MUBUF_0_DEFAULT__SI__CI 0xcdcdcdcd
#define SQ_MUBUF_0_DEFAULT__VI 0xcdcd4dcd
#define SQ_MUBUF_0_GET_ENCODING__VI(sq_mubuf_0)                                                    \
  ((sq_mubuf_0 & SQ_MUBUF_0_ENCODING_MASK) >> SQ_MUBUF_0_ENCODING_SHIFT)

#define SQ_MUBUF_0_GET_GLC__VI(sq_mubuf_0)                                                         \
  ((sq_mubuf_0 & SQ_MUBUF_0_GLC_MASK) >> SQ_MUBUF_0_GLC_SHIFT)

#define SQ_MUBUF_0_GET_IDXEN__VI(sq_mubuf_0)                                                       \
  ((sq_mubuf_0 & SQ_MUBUF_0_IDXEN_MASK) >> SQ_MUBUF_0_IDXEN_SHIFT)

#define SQ_MUBUF_0_GET_LDS__VI(sq_mubuf_0)                                                         \
  ((sq_mubuf_0 & SQ_MUBUF_0_LDS_MASK) >> SQ_MUBUF_0_LDS_SHIFT)

#define SQ_MUBUF_0_GET_OFFEN__VI(sq_mubuf_0)                                                       \
  ((sq_mubuf_0 & SQ_MUBUF_0_OFFEN_MASK) >> SQ_MUBUF_0_OFFEN_SHIFT)

#define SQ_MUBUF_0_GET_OFFSET__VI(sq_mubuf_0)                                                      \
  ((sq_mubuf_0 & SQ_MUBUF_0_OFFSET_MASK) >> SQ_MUBUF_0_OFFSET_SHIFT)

#define SQ_MUBUF_0_GET_OP__VI(sq_mubuf_0) ((sq_mubuf_0 & SQ_MUBUF_0_OP_MASK) >> SQ_MUBUF_0_OP_SHIFT)

#define SQ_MUBUF_0_GET_SLC__VI(sq_mubuf_0)                                                         \
  ((sq_mubuf_0 & SQ_MUBUF_0_SLC_MASK) >> SQ_MUBUF_0_SLC_SHIFT)

#define SQ_MUBUF_0_MASK__VI                                                                        \
  (SQ_MUBUF_0_OFFSET_MASK | SQ_MUBUF_0_OFFEN_MASK | SQ_MUBUF_0_IDXEN_MASK | SQ_MUBUF_0_GLC_MASK |  \
   SQ_MUBUF_0_LDS_MASK | SQ_MUBUF_0_SLC_MASK | SQ_MUBUF_0_OP_MASK | SQ_MUBUF_0_ENCODING_MASK)

#define SQ_MUBUF_0_SET_ENCODING__VI(sq_mubuf_0_reg, encoding)                                      \
  sq_mubuf_0_reg =                                                                                 \
      (sq_mubuf_0_reg & ~SQ_MUBUF_0_ENCODING_MASK) | (encoding << SQ_MUBUF_0_ENCODING_SHIFT)

#define SQ_MUBUF_0_SET_GLC__VI(sq_mubuf_0_reg, glc)                                                \
  sq_mubuf_0_reg = (sq_mubuf_0_reg & ~SQ_MUBUF_0_GLC_MASK) | (glc << SQ_MUBUF_0_GLC_SHIFT)

#define SQ_MUBUF_0_SET_IDXEN__VI(sq_mubuf_0_reg, idxen)                                            \
  sq_mubuf_0_reg = (sq_mubuf_0_reg & ~SQ_MUBUF_0_IDXEN_MASK) | (idxen << SQ_MUBUF_0_IDXEN_SHIFT)

#define SQ_MUBUF_0_SET_LDS__VI(sq_mubuf_0_reg, lds)                                                \
  sq_mubuf_0_reg = (sq_mubuf_0_reg & ~SQ_MUBUF_0_LDS_MASK) | (lds << SQ_MUBUF_0_LDS_SHIFT)

#define SQ_MUBUF_0_SET_OFFEN__VI(sq_mubuf_0_reg, offen)                                            \
  sq_mubuf_0_reg = (sq_mubuf_0_reg & ~SQ_MUBUF_0_OFFEN_MASK) | (offen << SQ_MUBUF_0_OFFEN_SHIFT)

#define SQ_MUBUF_0_SET_OFFSET__VI(sq_mubuf_0_reg, offset)                                          \
  sq_mubuf_0_reg = (sq_mubuf_0_reg & ~SQ_MUBUF_0_OFFSET_MASK) | (offset << SQ_MUBUF_0_OFFSET_SHIFT)

#define SQ_MUBUF_0_SET_OP__VI(sq_mubuf_0_reg, op)                                                  \
  sq_mubuf_0_reg = (sq_mubuf_0_reg & ~SQ_MUBUF_0_OP_MASK) | (op << SQ_MUBUF_0_OP_SHIFT)

#define SQ_MUBUF_0_SET_SLC__VI(sq_mubuf_0_reg, slc)                                                \
  sq_mubuf_0_reg = (sq_mubuf_0_reg & ~SQ_MUBUF_0_SLC_MASK) | (slc << SQ_MUBUF_0_SLC_SHIFT)

#define SQ_MUBUF_0_SLC_MASK__VI 0x00020000
#define SQ_MUBUF_0_SLC_SHIFT__VI 17
#define SQ_MUBUF_0_SLC_SIZE__VI 1
#define SQ_MUBUF_1_DEFAULT__SI__CI 0xcdcdcdcd
#define SQ_MUBUF_1_DEFAULT__VI 0xcd8dcdcd
#define SQ_MUBUF_1_GET_SOFFSET__VI(sq_mubuf_1)                                                     \
  ((sq_mubuf_1 & SQ_MUBUF_1_SOFFSET_MASK) >> SQ_MUBUF_1_SOFFSET_SHIFT)

#define SQ_MUBUF_1_GET_SRSRC__VI(sq_mubuf_1)                                                       \
  ((sq_mubuf_1 & SQ_MUBUF_1_SRSRC_MASK) >> SQ_MUBUF_1_SRSRC_SHIFT)

#define SQ_MUBUF_1_GET_TFE__VI(sq_mubuf_1)                                                         \
  ((sq_mubuf_1 & SQ_MUBUF_1_TFE_MASK) >> SQ_MUBUF_1_TFE_SHIFT)

#define SQ_MUBUF_1_GET_VADDR__VI(sq_mubuf_1)                                                       \
  ((sq_mubuf_1 & SQ_MUBUF_1_VADDR_MASK) >> SQ_MUBUF_1_VADDR_SHIFT)

#define SQ_MUBUF_1_GET_VDATA__VI(sq_mubuf_1)                                                       \
  ((sq_mubuf_1 & SQ_MUBUF_1_VDATA_MASK) >> SQ_MUBUF_1_VDATA_SHIFT)

#define SQ_MUBUF_1_MASK__VI                                                                        \
  (SQ_MUBUF_1_VADDR_MASK | SQ_MUBUF_1_VDATA_MASK | SQ_MUBUF_1_SRSRC_MASK | SQ_MUBUF_1_TFE_MASK |   \
   SQ_MUBUF_1_SOFFSET_MASK)

#define SQ_MUBUF_1_SET_SOFFSET__VI(sq_mubuf_1_reg, soffset)                                        \
  sq_mubuf_1_reg =                                                                                 \
      (sq_mubuf_1_reg & ~SQ_MUBUF_1_SOFFSET_MASK) | (soffset << SQ_MUBUF_1_SOFFSET_SHIFT)

#define SQ_MUBUF_1_SET_SRSRC__VI(sq_mubuf_1_reg, srsrc)                                            \
  sq_mubuf_1_reg = (sq_mubuf_1_reg & ~SQ_MUBUF_1_SRSRC_MASK) | (srsrc << SQ_MUBUF_1_SRSRC_SHIFT)

#define SQ_MUBUF_1_SET_TFE__VI(sq_mubuf_1_reg, tfe)                                                \
  sq_mubuf_1_reg = (sq_mubuf_1_reg & ~SQ_MUBUF_1_TFE_MASK) | (tfe << SQ_MUBUF_1_TFE_SHIFT)

#define SQ_MUBUF_1_SET_VADDR__VI(sq_mubuf_1_reg, vaddr)                                            \
  sq_mubuf_1_reg = (sq_mubuf_1_reg & ~SQ_MUBUF_1_VADDR_MASK) | (vaddr << SQ_MUBUF_1_VADDR_SHIFT)

#define SQ_MUBUF_1_SET_VDATA__VI(sq_mubuf_1_reg, vdata)                                            \
  sq_mubuf_1_reg = (sq_mubuf_1_reg & ~SQ_MUBUF_1_VDATA_MASK) | (vdata << SQ_MUBUF_1_VDATA_SHIFT)

#define SQ_NUM_SGPR__SI__CI 0x00000068
#define SQ_NUM_SGPR__VI 0x00000066
#define SQ_R1__VI 0x00000001
#define SQ_R10__VI 0x0000000a
#define SQ_R11__VI 0x0000000b
#define SQ_R12__VI 0x0000000c
#define SQ_R13__VI 0x0000000d
#define SQ_R14__VI 0x0000000e
#define SQ_R15__VI 0x0000000f
#define SQ_R2__VI 0x00000002
#define SQ_R3__VI 0x00000003
#define SQ_R4__VI 0x00000004
#define SQ_R5__VI 0x00000005
#define SQ_R6__VI 0x00000006
#define SQ_R7__VI 0x00000007
#define SQ_R8__VI 0x00000008
#define SQ_R9__VI 0x00000009
#define SQ_SDWA_BYTE_0__VI 0x00000000
#define SQ_SDWA_BYTE_1__VI 0x00000001
#define SQ_SDWA_BYTE_2__VI 0x00000002
#define SQ_SDWA_BYTE_3__VI 0x00000003
#define SQ_SDWA_DWORD__VI 0x00000006
#define SQ_SDWA_UNUSED_PAD__VI 0x00000000
#define SQ_SDWA_UNUSED_PRESERVE__VI 0x00000002
#define SQ_SDWA_UNUSED_SEXT__VI 0x00000001
#define SQ_SDWA_WORD_0__VI 0x00000004
#define SQ_SDWA_WORD_1__VI 0x00000005
#define SQ_SMEM_0_DEFAULT__VI 0xcdcd0dcd
#define SQ_SMEM_0_ENCODING_MASK__VI 0xfc000000
#define SQ_SMEM_0_ENCODING_SHIFT__VI 26
#define SQ_SMEM_0_ENCODING_SIZE__VI 6
#define SQ_SMEM_0_GET_ENCODING__VI(sq_smem_0)                                                      \
  ((sq_smem_0 & SQ_SMEM_0_ENCODING_MASK) >> SQ_SMEM_0_ENCODING_SHIFT)

#define SQ_SMEM_0_GET_GLC__VI(sq_smem_0) ((sq_smem_0 & SQ_SMEM_0_GLC_MASK) >> SQ_SMEM_0_GLC_SHIFT)

#define SQ_SMEM_0_GET_IMM__VI(sq_smem_0) ((sq_smem_0 & SQ_SMEM_0_IMM_MASK) >> SQ_SMEM_0_IMM_SHIFT)

#define SQ_SMEM_0_GET_OP__VI(sq_smem_0) ((sq_smem_0 & SQ_SMEM_0_OP_MASK) >> SQ_SMEM_0_OP_SHIFT)

#define SQ_SMEM_0_GET_SBASE__VI(sq_smem_0)                                                         \
  ((sq_smem_0 & SQ_SMEM_0_SBASE_MASK) >> SQ_SMEM_0_SBASE_SHIFT)

#define SQ_SMEM_0_GET_SDATA__VI(sq_smem_0)                                                         \
  ((sq_smem_0 & SQ_SMEM_0_SDATA_MASK) >> SQ_SMEM_0_SDATA_SHIFT)

#define SQ_SMEM_0_GLC_MASK__VI 0x00010000
#define SQ_SMEM_0_GLC_SHIFT__VI 16
#define SQ_SMEM_0_GLC_SIZE__VI 1
#define SQ_SMEM_0_IMM_MASK__VI 0x00020000
#define SQ_SMEM_0_IMM_SHIFT__VI 17
#define SQ_SMEM_0_IMM_SIZE__VI 1
#define SQ_SMEM_0_MASK__VI                                                                         \
  (SQ_SMEM_0_SBASE_MASK | SQ_SMEM_0_SDATA_MASK | SQ_SMEM_0_GLC_MASK | SQ_SMEM_0_IMM_MASK |         \
   SQ_SMEM_0_OP_MASK | SQ_SMEM_0_ENCODING_MASK)

#define SQ_SMEM_0_OP_MASK__VI 0x03fc0000
#define SQ_SMEM_0_OP_SHIFT__VI 18
#define SQ_SMEM_0_OP_SIZE__VI 8
#define SQ_SMEM_0_REG_SIZE__VI 32
#define SQ_SMEM_0_SBASE_MASK__VI 0x0000003f
#define SQ_SMEM_0_SBASE_SHIFT__VI 0x00000000
#define SQ_SMEM_0_SBASE_SIZE__VI 6
#define SQ_SMEM_0_SDATA_MASK__VI 0x00001fc0
#define SQ_SMEM_0_SDATA_SHIFT__VI 6
#define SQ_SMEM_0_SDATA_SIZE__VI 7
#define SQ_SMEM_0_SET_ENCODING__VI(sq_smem_0_reg, encoding)                                        \
  sq_smem_0_reg =                                                                                  \
      (sq_smem_0_reg & ~SQ_SMEM_0_ENCODING_MASK) | (encoding << SQ_SMEM_0_ENCODING_SHIFT)

#define SQ_SMEM_0_SET_GLC__VI(sq_smem_0_reg, glc)                                                  \
  sq_smem_0_reg = (sq_smem_0_reg & ~SQ_SMEM_0_GLC_MASK) | (glc << SQ_SMEM_0_GLC_SHIFT)

#define SQ_SMEM_0_SET_IMM__VI(sq_smem_0_reg, imm)                                                  \
  sq_smem_0_reg = (sq_smem_0_reg & ~SQ_SMEM_0_IMM_MASK) | (imm << SQ_SMEM_0_IMM_SHIFT)

#define SQ_SMEM_0_SET_OP__VI(sq_smem_0_reg, op)                                                    \
  sq_smem_0_reg = (sq_smem_0_reg & ~SQ_SMEM_0_OP_MASK) | (op << SQ_SMEM_0_OP_SHIFT)

#define SQ_SMEM_0_SET_SBASE__VI(sq_smem_0_reg, sbase)                                              \
  sq_smem_0_reg = (sq_smem_0_reg & ~SQ_SMEM_0_SBASE_MASK) | (sbase << SQ_SMEM_0_SBASE_SHIFT)

#define SQ_SMEM_0_SET_SDATA__VI(sq_smem_0_reg, sdata)                                              \
  sq_smem_0_reg = (sq_smem_0_reg & ~SQ_SMEM_0_SDATA_MASK) | (sdata << SQ_SMEM_0_SDATA_SHIFT)

#define SQ_SMEM_1_DEFAULT__VI 0x000dcdcd
#define SQ_SMEM_1_GET_OFFSET__VI(sq_smem_1)                                                        \
  ((sq_smem_1 & SQ_SMEM_1_OFFSET_MASK) >> SQ_SMEM_1_OFFSET_SHIFT)

#define SQ_SMEM_1_MASK__VI (SQ_SMEM_1_OFFSET_MASK)

#define SQ_SMEM_1_OFFSET_MASK__VI 0x000fffff
#define SQ_SMEM_1_OFFSET_SHIFT__VI 0x00000000
#define SQ_SMEM_1_OFFSET_SIZE__VI 20
#define SQ_SMEM_1_REG_SIZE__VI 32
#define SQ_SMEM_1_SET_OFFSET__VI(sq_smem_1_reg, offset)                                            \
  sq_smem_1_reg = (sq_smem_1_reg & ~SQ_SMEM_1_OFFSET_MASK) | (offset << SQ_SMEM_1_OFFSET_SHIFT)

#define SQ_SOP1_GET_ENCODING__VI(sq_sop1)                                                          \
  ((sq_sop1 & SQ_SOP1_ENCODING_MASK) >> SQ_SOP1_ENCODING_SHIFT)

#define SQ_SOP1_GET_OP__VI(sq_sop1) ((sq_sop1 & SQ_SOP1_OP_MASK) >> SQ_SOP1_OP_SHIFT)

#define SQ_SOP1_GET_SDST__VI(sq_sop1) ((sq_sop1 & SQ_SOP1_SDST_MASK) >> SQ_SOP1_SDST_SHIFT)

#define SQ_SOP1_GET_SSRC0__VI(sq_sop1) ((sq_sop1 & SQ_SOP1_SSRC0_MASK) >> SQ_SOP1_SSRC0_SHIFT)

#define SQ_SOP1_MASK__VI                                                                           \
  (SQ_SOP1_SSRC0_MASK | SQ_SOP1_OP_MASK | SQ_SOP1_SDST_MASK | SQ_SOP1_ENCODING_MASK)

#define SQ_SOP1_SET_ENCODING__VI(sq_sop1_reg, encoding)                                            \
  sq_sop1_reg = (sq_sop1_reg & ~SQ_SOP1_ENCODING_MASK) | (encoding << SQ_SOP1_ENCODING_SHIFT)

#define SQ_SOP1_SET_OP__VI(sq_sop1_reg, op)                                                        \
  sq_sop1_reg = (sq_sop1_reg & ~SQ_SOP1_OP_MASK) | (op << SQ_SOP1_OP_SHIFT)

#define SQ_SOP1_SET_SDST__VI(sq_sop1_reg, sdst)                                                    \
  sq_sop1_reg = (sq_sop1_reg & ~SQ_SOP1_SDST_MASK) | (sdst << SQ_SOP1_SDST_SHIFT)

#define SQ_SOP1_SET_SSRC0__VI(sq_sop1_reg, ssrc0)                                                  \
  sq_sop1_reg = (sq_sop1_reg & ~SQ_SOP1_SSRC0_MASK) | (ssrc0 << SQ_SOP1_SSRC0_SHIFT)

#define SQ_SOP2_GET_ENCODING__VI(sq_sop2)                                                          \
  ((sq_sop2 & SQ_SOP2_ENCODING_MASK) >> SQ_SOP2_ENCODING_SHIFT)

#define SQ_SOP2_GET_OP__VI(sq_sop2) ((sq_sop2 & SQ_SOP2_OP_MASK) >> SQ_SOP2_OP_SHIFT)

#define SQ_SOP2_GET_SDST__VI(sq_sop2) ((sq_sop2 & SQ_SOP2_SDST_MASK) >> SQ_SOP2_SDST_SHIFT)

#define SQ_SOP2_GET_SSRC0__VI(sq_sop2) ((sq_sop2 & SQ_SOP2_SSRC0_MASK) >> SQ_SOP2_SSRC0_SHIFT)

#define SQ_SOP2_GET_SSRC1__VI(sq_sop2) ((sq_sop2 & SQ_SOP2_SSRC1_MASK) >> SQ_SOP2_SSRC1_SHIFT)

#define SQ_SOP2_MASK__VI                                                                           \
  (SQ_SOP2_SSRC0_MASK | SQ_SOP2_SSRC1_MASK | SQ_SOP2_SDST_MASK | SQ_SOP2_OP_MASK |                 \
   SQ_SOP2_ENCODING_MASK)

#define SQ_SOP2_SET_ENCODING__VI(sq_sop2_reg, encoding)                                            \
  sq_sop2_reg = (sq_sop2_reg & ~SQ_SOP2_ENCODING_MASK) | (encoding << SQ_SOP2_ENCODING_SHIFT)

#define SQ_SOP2_SET_OP__VI(sq_sop2_reg, op)                                                        \
  sq_sop2_reg = (sq_sop2_reg & ~SQ_SOP2_OP_MASK) | (op << SQ_SOP2_OP_SHIFT)

#define SQ_SOP2_SET_SDST__VI(sq_sop2_reg, sdst)                                                    \
  sq_sop2_reg = (sq_sop2_reg & ~SQ_SOP2_SDST_MASK) | (sdst << SQ_SOP2_SDST_SHIFT)

#define SQ_SOP2_SET_SSRC0__VI(sq_sop2_reg, ssrc0)                                                  \
  sq_sop2_reg = (sq_sop2_reg & ~SQ_SOP2_SSRC0_MASK) | (ssrc0 << SQ_SOP2_SSRC0_SHIFT)

#define SQ_SOP2_SET_SSRC1__VI(sq_sop2_reg, ssrc1)                                                  \
  sq_sop2_reg = (sq_sop2_reg & ~SQ_SOP2_SSRC1_MASK) | (ssrc1 << SQ_SOP2_SSRC1_SHIFT)

#define SQ_SOPC_GET_ENCODING__VI(sq_sopc)                                                          \
  ((sq_sopc & SQ_SOPC_ENCODING_MASK) >> SQ_SOPC_ENCODING_SHIFT)

#define SQ_SOPC_GET_OP__VI(sq_sopc) ((sq_sopc & SQ_SOPC_OP_MASK) >> SQ_SOPC_OP_SHIFT)

#define SQ_SOPC_GET_SSRC0__VI(sq_sopc) ((sq_sopc & SQ_SOPC_SSRC0_MASK) >> SQ_SOPC_SSRC0_SHIFT)

#define SQ_SOPC_GET_SSRC1__VI(sq_sopc) ((sq_sopc & SQ_SOPC_SSRC1_MASK) >> SQ_SOPC_SSRC1_SHIFT)

#define SQ_SOPC_MASK__VI                                                                           \
  (SQ_SOPC_SSRC0_MASK | SQ_SOPC_SSRC1_MASK | SQ_SOPC_OP_MASK | SQ_SOPC_ENCODING_MASK)

#define SQ_SOPC_SET_ENCODING__VI(sq_sopc_reg, encoding)                                            \
  sq_sopc_reg = (sq_sopc_reg & ~SQ_SOPC_ENCODING_MASK) | (encoding << SQ_SOPC_ENCODING_SHIFT)

#define SQ_SOPC_SET_OP__VI(sq_sopc_reg, op)                                                        \
  sq_sopc_reg = (sq_sopc_reg & ~SQ_SOPC_OP_MASK) | (op << SQ_SOPC_OP_SHIFT)

#define SQ_SOPC_SET_SSRC0__VI(sq_sopc_reg, ssrc0)                                                  \
  sq_sopc_reg = (sq_sopc_reg & ~SQ_SOPC_SSRC0_MASK) | (ssrc0 << SQ_SOPC_SSRC0_SHIFT)

#define SQ_SOPC_SET_SSRC1__VI(sq_sopc_reg, ssrc1)                                                  \
  sq_sopc_reg = (sq_sopc_reg & ~SQ_SOPC_SSRC1_MASK) | (ssrc1 << SQ_SOPC_SSRC1_SHIFT)

#define SQ_SOPK_GET_ENCODING__VI(sq_sopk)                                                          \
  ((sq_sopk & SQ_SOPK_ENCODING_MASK) >> SQ_SOPK_ENCODING_SHIFT)

#define SQ_SOPK_GET_OP__VI(sq_sopk) ((sq_sopk & SQ_SOPK_OP_MASK) >> SQ_SOPK_OP_SHIFT)

#define SQ_SOPK_GET_SDST__VI(sq_sopk) ((sq_sopk & SQ_SOPK_SDST_MASK) >> SQ_SOPK_SDST_SHIFT)

#define SQ_SOPK_GET_SIMM16__VI(sq_sopk) ((sq_sopk & SQ_SOPK_SIMM16_MASK) >> SQ_SOPK_SIMM16_SHIFT)

#define SQ_SOPK_MASK__VI                                                                           \
  (SQ_SOPK_SIMM16_MASK | SQ_SOPK_SDST_MASK | SQ_SOPK_OP_MASK | SQ_SOPK_ENCODING_MASK)

#define SQ_SOPK_SET_ENCODING__VI(sq_sopk_reg, encoding)                                            \
  sq_sopk_reg = (sq_sopk_reg & ~SQ_SOPK_ENCODING_MASK) | (encoding << SQ_SOPK_ENCODING_SHIFT)

#define SQ_SOPK_SET_OP__VI(sq_sopk_reg, op)                                                        \
  sq_sopk_reg = (sq_sopk_reg & ~SQ_SOPK_OP_MASK) | (op << SQ_SOPK_OP_SHIFT)

#define SQ_SOPK_SET_SDST__VI(sq_sopk_reg, sdst)                                                    \
  sq_sopk_reg = (sq_sopk_reg & ~SQ_SOPK_SDST_MASK) | (sdst << SQ_SOPK_SDST_SHIFT)

#define SQ_SOPK_SET_SIMM16__VI(sq_sopk_reg, simm16)                                                \
  sq_sopk_reg = (sq_sopk_reg & ~SQ_SOPK_SIMM16_MASK) | (simm16 << SQ_SOPK_SIMM16_SHIFT)

#define SQ_SOPP_GET_ENCODING__VI(sq_sopp)                                                          \
  ((sq_sopp & SQ_SOPP_ENCODING_MASK) >> SQ_SOPP_ENCODING_SHIFT)

#define SQ_SOPP_GET_OP__VI(sq_sopp) ((sq_sopp & SQ_SOPP_OP_MASK) >> SQ_SOPP_OP_SHIFT)

#define SQ_SOPP_GET_SIMM16__VI(sq_sopp) ((sq_sopp & SQ_SOPP_SIMM16_MASK) >> SQ_SOPP_SIMM16_SHIFT)

#define SQ_SOPP_MASK__VI (SQ_SOPP_SIMM16_MASK | SQ_SOPP_OP_MASK | SQ_SOPP_ENCODING_MASK)

#define SQ_SOPP_SET_ENCODING__VI(sq_sopp_reg, encoding)                                            \
  sq_sopp_reg = (sq_sopp_reg & ~SQ_SOPP_ENCODING_MASK) | (encoding << SQ_SOPP_ENCODING_SHIFT)

#define SQ_SOPP_SET_OP__VI(sq_sopp_reg, op)                                                        \
  sq_sopp_reg = (sq_sopp_reg & ~SQ_SOPP_OP_MASK) | (op << SQ_SOPP_OP_SHIFT)

#define SQ_SOPP_SET_SIMM16__VI(sq_sopp_reg, simm16)                                                \
  sq_sopp_reg = (sq_sopp_reg & ~SQ_SOPP_SIMM16_MASK) | (simm16 << SQ_SOPP_SIMM16_SHIFT)

#define SQ_SRC_DPP__VI 0x000000fa
#define SQ_SRC_INV_2PI__VI 0x000000f8
#define SQ_SRC_SDWA__VI 0x000000f9
#define SQ_S_ABSDIFF_I32__SI__CI 0x0000002c
#define SQ_S_ABSDIFF_I32__VI 0x0000002a
#define SQ_S_ABS_I32__SI__CI 0x00000034
#define SQ_S_ABS_I32__VI 0x00000030
#define SQ_S_ADDK_I32__SI__CI 0x0000000f
#define SQ_S_ADDK_I32__VI 0x0000000e
#define SQ_S_ANDN2_B32__SI__CI 0x00000014
#define SQ_S_ANDN2_B32__VI 0x00000012
#define SQ_S_ANDN2_B64__SI__CI 0x00000015
#define SQ_S_ANDN2_B64__VI 0x00000013
#define SQ_S_ANDN2_SAVEEXEC_B64__SI__CI 0x00000027
#define SQ_S_ANDN2_SAVEEXEC_B64__VI 0x00000023
#define SQ_S_AND_B32__SI__CI 0x0000000e
#define SQ_S_AND_B32__VI 0x0000000c
#define SQ_S_AND_B64__SI__CI 0x0000000f
#define SQ_S_AND_B64__VI 0x0000000d
#define SQ_S_AND_SAVEEXEC_B64__SI__CI 0x00000024
#define SQ_S_AND_SAVEEXEC_B64__VI 0x00000020
#define SQ_S_ASHR_I32__SI__CI 0x00000022
#define SQ_S_ASHR_I32__VI 0x00000020
#define SQ_S_ASHR_I64__SI__CI 0x00000023
#define SQ_S_ASHR_I64__VI 0x00000021
#define SQ_S_ATC_PROBE__VI 0x00000026
#define SQ_S_ATC_PROBE_BUFFER__VI 0x00000027
#define SQ_S_BCNT0_I32_B32__SI__CI 0x0000000d
#define SQ_S_BCNT0_I32_B32__VI 0x0000000a
#define SQ_S_BCNT0_I32_B64__SI__CI 0x0000000e
#define SQ_S_BCNT0_I32_B64__VI 0x0000000b
#define SQ_S_BCNT1_I32_B32__SI__CI 0x0000000f
#define SQ_S_BCNT1_I32_B32__VI 0x0000000c
#define SQ_S_BCNT1_I32_B64__SI__CI 0x00000010
#define SQ_S_BCNT1_I32_B64__VI 0x0000000d
#define SQ_S_BFE_I32__SI__CI 0x00000028
#define SQ_S_BFE_I32__VI 0x00000026
#define SQ_S_BFE_I64__SI__CI 0x0000002a
#define SQ_S_BFE_I64__VI 0x00000028
#define SQ_S_BFE_U32__SI__CI 0x00000027
#define SQ_S_BFE_U32__VI 0x00000025
#define SQ_S_BFE_U64__SI__CI 0x00000029
#define SQ_S_BFE_U64__VI 0x00000027
#define SQ_S_BFM_B32__SI__CI 0x00000024
#define SQ_S_BFM_B32__VI 0x00000022
#define SQ_S_BFM_B64__SI__CI 0x00000025
#define SQ_S_BFM_B64__VI 0x00000023
#define SQ_S_BITSET0_B32__SI__CI 0x0000001b
#define SQ_S_BITSET0_B32__VI 0x00000018
#define SQ_S_BITSET0_B64__SI__CI 0x0000001c
#define SQ_S_BITSET0_B64__VI 0x00000019
#define SQ_S_BITSET1_B32__SI__CI 0x0000001d
#define SQ_S_BITSET1_B32__VI 0x0000001a
#define SQ_S_BITSET1_B64__SI__CI 0x0000001e
#define SQ_S_BITSET1_B64__VI 0x0000001b
#define SQ_S_BREV_B32__SI__CI 0x0000000b
#define SQ_S_BREV_B32__VI 0x00000008
#define SQ_S_BREV_B64__SI__CI 0x0000000c
#define SQ_S_BREV_B64__VI 0x00000009
#define SQ_S_BUFFER_ATOMIC_ADD__VI 0x00000042
#define SQ_S_BUFFER_ATOMIC_ADD_X2__VI 0x00000062
#define SQ_S_BUFFER_ATOMIC_AND__VI 0x00000048
#define SQ_S_BUFFER_ATOMIC_AND_X2__VI 0x00000068
#define SQ_S_BUFFER_ATOMIC_CMPSWAP__VI 0x00000041
#define SQ_S_BUFFER_ATOMIC_CMPSWAP_X2__VI 0x00000061
#define SQ_S_BUFFER_ATOMIC_DEC__VI 0x0000004c
#define SQ_S_BUFFER_ATOMIC_DEC_X2__VI 0x0000006c
#define SQ_S_BUFFER_ATOMIC_INC__VI 0x0000004b
#define SQ_S_BUFFER_ATOMIC_INC_X2__VI 0x0000006b
#define SQ_S_BUFFER_ATOMIC_OR__VI 0x00000049
#define SQ_S_BUFFER_ATOMIC_OR_X2__VI 0x00000069
#define SQ_S_BUFFER_ATOMIC_SMAX__VI 0x00000046
#define SQ_S_BUFFER_ATOMIC_SMAX_X2__VI 0x00000066
#define SQ_S_BUFFER_ATOMIC_SMIN__VI 0x00000044
#define SQ_S_BUFFER_ATOMIC_SMIN_X2__VI 0x00000064
#define SQ_S_BUFFER_ATOMIC_SUB__VI 0x00000043
#define SQ_S_BUFFER_ATOMIC_SUB_X2__VI 0x00000063
#define SQ_S_BUFFER_ATOMIC_SWAP__VI 0x00000040
#define SQ_S_BUFFER_ATOMIC_SWAP_X2__VI 0x00000060
#define SQ_S_BUFFER_ATOMIC_UMAX__VI 0x00000047
#define SQ_S_BUFFER_ATOMIC_UMAX_X2__VI 0x00000067
#define SQ_S_BUFFER_ATOMIC_UMIN__VI 0x00000045
#define SQ_S_BUFFER_ATOMIC_UMIN_X2__VI 0x00000065
#define SQ_S_BUFFER_ATOMIC_XOR__VI 0x0000004a
#define SQ_S_BUFFER_ATOMIC_XOR_X2__VI 0x0000006a
#define SQ_S_BUFFER_STORE_DWORD__VI 0x00000018
#define SQ_S_BUFFER_STORE_DWORDX2__VI 0x00000019
#define SQ_S_BUFFER_STORE_DWORDX4__VI 0x0000001a
#define SQ_S_CBRANCH_G_FORK__SI__CI 0x0000002b
#define SQ_S_CBRANCH_G_FORK__VI 0x00000029
#define SQ_S_CBRANCH_I_FORK__SI__CI 0x00000011
#define SQ_S_CBRANCH_I_FORK__VI 0x00000010
#define SQ_S_CBRANCH_JOIN__SI__CI 0x00000032
#define SQ_S_CBRANCH_JOIN__VI 0x0000002e
#define SQ_S_CMOVK_I32__SI__CI 0x00000002
#define SQ_S_CMOVK_I32__VI 0x00000001
#define SQ_S_CMOV_B32__SI__CI 0x00000005
#define SQ_S_CMOV_B32__VI 0x00000002
#define SQ_S_CMOV_B64__SI__CI 0x00000006
#define SQ_S_CMOV_B64__VI 0x00000003
#define SQ_S_CMPK_EQ_I32__SI__CI 0x00000003
#define SQ_S_CMPK_EQ_I32__VI 0x00000002
#define SQ_S_CMPK_EQ_U32__SI__CI 0x00000009
#define SQ_S_CMPK_EQ_U32__VI 0x00000008
#define SQ_S_CMPK_GE_I32__SI__CI 0x00000006
#define SQ_S_CMPK_GE_I32__VI 0x00000005
#define SQ_S_CMPK_GE_U32__SI__CI 0x0000000c
#define SQ_S_CMPK_GE_U32__VI 0x0000000b
#define SQ_S_CMPK_GT_I32__SI__CI 0x00000005
#define SQ_S_CMPK_GT_I32__VI 0x00000004
#define SQ_S_CMPK_GT_U32__SI__CI 0x0000000b
#define SQ_S_CMPK_GT_U32__VI 0x0000000a
#define SQ_S_CMPK_LE_I32__SI__CI 0x00000008
#define SQ_S_CMPK_LE_I32__VI 0x00000007
#define SQ_S_CMPK_LE_U32__SI__CI 0x0000000e
#define SQ_S_CMPK_LE_U32__VI 0x0000000d
#define SQ_S_CMPK_LG_I32__SI__CI 0x00000004
#define SQ_S_CMPK_LG_I32__VI 0x00000003
#define SQ_S_CMPK_LG_U32__SI__CI 0x0000000a
#define SQ_S_CMPK_LG_U32__VI 0x00000009
#define SQ_S_CMPK_LT_I32__SI__CI 0x00000007
#define SQ_S_CMPK_LT_I32__VI 0x00000006
#define SQ_S_CMPK_LT_U32__SI__CI 0x0000000d
#define SQ_S_CMPK_LT_U32__VI 0x0000000c
#define SQ_S_CMP_EQ_U64__VI 0x00000012
#define SQ_S_CMP_LG_U64__VI 0x00000013
#define SQ_S_DCACHE_INV__SI__CI 0x0000001f
#define SQ_S_DCACHE_INV__VI 0x00000020
#define SQ_S_DCACHE_INV_VOL__VI 0x00000022
#define SQ_S_DCACHE_WB__VI 0x00000021
#define SQ_S_DCACHE_WB_VOL__VI 0x00000023
#define SQ_S_ENDPGM_SAVED__VI 0x0000001b
#define SQ_S_FF0_I32_B32__SI__CI 0x00000011
#define SQ_S_FF0_I32_B32__VI 0x0000000e
#define SQ_S_FF0_I32_B64__SI__CI 0x00000012
#define SQ_S_FF0_I32_B64__VI 0x0000000f
#define SQ_S_FF1_I32_B32__SI__CI 0x00000013
#define SQ_S_FF1_I32_B32__VI 0x00000010
#define SQ_S_FF1_I32_B64__SI__CI 0x00000014
#define SQ_S_FF1_I32_B64__VI 0x00000011
#define SQ_S_FLBIT_I32__SI__CI 0x00000017
#define SQ_S_FLBIT_I32__VI 0x00000014
#define SQ_S_FLBIT_I32_B32__SI__CI 0x00000015
#define SQ_S_FLBIT_I32_B32__VI 0x00000012
#define SQ_S_FLBIT_I32_B64__SI__CI 0x00000016
#define SQ_S_FLBIT_I32_B64__VI 0x00000013
#define SQ_S_FLBIT_I32_I64__SI__CI 0x00000018
#define SQ_S_FLBIT_I32_I64__VI 0x00000015
#define SQ_S_GETPC_B64__SI__CI 0x0000001f
#define SQ_S_GETPC_B64__VI 0x0000001c
#define SQ_S_GETREG_B32__SI__CI 0x00000012
#define SQ_S_GETREG_B32__VI 0x00000011
#define SQ_S_GETREG_REGRD_B32__SI__CI 0x00000014
#define SQ_S_GETREG_REGRD_B32__VI 0x00000013
#define SQ_S_LSHL_B32__SI__CI 0x0000001e
#define SQ_S_LSHL_B32__VI 0x0000001c
#define SQ_S_LSHL_B64__SI__CI 0x0000001f
#define SQ_S_LSHL_B64__VI 0x0000001d
#define SQ_S_LSHR_B32__SI__CI 0x00000020
#define SQ_S_LSHR_B32__VI 0x0000001e
#define SQ_S_LSHR_B64__SI__CI 0x00000021
#define SQ_S_LSHR_B64__VI 0x0000001f
#define SQ_S_MEMREALTIME__VI 0x00000025
#define SQ_S_MEMTIME__SI__CI 0x0000001e
#define SQ_S_MEMTIME__VI 0x00000024
#define SQ_S_MOVRELD_B32__SI__CI 0x00000030
#define SQ_S_MOVRELD_B32__VI 0x0000002c
#define SQ_S_MOVRELD_B64__SI__CI 0x00000031
#define SQ_S_MOVRELD_B64__VI 0x0000002d
#define SQ_S_MOVRELS_B32__SI__CI 0x0000002e
#define SQ_S_MOVRELS_B32__VI 0x0000002a
#define SQ_S_MOVRELS_B64__SI__CI 0x0000002f
#define SQ_S_MOVRELS_B64__VI 0x0000002b
#define SQ_S_MOV_B32__SI__CI 0x00000003
#define SQ_S_MOV_B32__VI 0x00000000
#define SQ_S_MOV_B64__SI__CI 0x00000004
#define SQ_S_MOV_B64__VI 0x00000001
#define SQ_S_MOV_FED_B32__SI__CI 0x00000035
#define SQ_S_MOV_FED_B32__VI 0x00000031
#define SQ_S_MOV_REGRD_B32__SI__CI 0x00000033
#define SQ_S_MOV_REGRD_B32__VI 0x0000002f
#define SQ_S_MULK_I32__SI__CI 0x00000010
#define SQ_S_MULK_I32__VI 0x0000000f
#define SQ_S_MUL_I32__SI__CI 0x00000026
#define SQ_S_MUL_I32__VI 0x00000024
#define SQ_S_NAND_B32__SI__CI 0x00000018
#define SQ_S_NAND_B32__VI 0x00000016
#define SQ_S_NAND_B64__SI__CI 0x00000019
#define SQ_S_NAND_B64__VI 0x00000017
#define SQ_S_NAND_SAVEEXEC_B64__SI__CI 0x00000029
#define SQ_S_NAND_SAVEEXEC_B64__VI 0x00000025
#define SQ_S_NOR_B32__SI__CI 0x0000001a
#define SQ_S_NOR_B32__VI 0x00000018
#define SQ_S_NOR_B64__SI__CI 0x0000001b
#define SQ_S_NOR_B64__VI 0x00000019
#define SQ_S_NOR_SAVEEXEC_B64__SI__CI 0x0000002a
#define SQ_S_NOR_SAVEEXEC_B64__VI 0x00000026
#define SQ_S_NOT_B32__SI__CI 0x00000007
#define SQ_S_NOT_B32__VI 0x00000004
#define SQ_S_NOT_B64__SI__CI 0x00000008
#define SQ_S_NOT_B64__VI 0x00000005
#define SQ_S_ORN2_B32__SI__CI 0x00000016
#define SQ_S_ORN2_B32__VI 0x00000014
#define SQ_S_ORN2_B64__SI__CI 0x00000017
#define SQ_S_ORN2_B64__VI 0x00000015
#define SQ_S_ORN2_SAVEEXEC_B64__SI__CI 0x00000028
#define SQ_S_ORN2_SAVEEXEC_B64__VI 0x00000024
#define SQ_S_OR_B32__SI__CI 0x00000010
#define SQ_S_OR_B32__VI 0x0000000e
#define SQ_S_OR_B64__SI__CI 0x00000011
#define SQ_S_OR_B64__VI 0x0000000f
#define SQ_S_OR_SAVEEXEC_B64__SI__CI 0x00000025
#define SQ_S_OR_SAVEEXEC_B64__VI 0x00000021
#define SQ_S_QUADMASK_B32__SI__CI 0x0000002c
#define SQ_S_QUADMASK_B32__VI 0x00000028
#define SQ_S_QUADMASK_B64__SI__CI 0x0000002d
#define SQ_S_QUADMASK_B64__VI 0x00000029
#define SQ_S_RFE_B64__SI__CI 0x00000022
#define SQ_S_RFE_B64__VI 0x0000001f
#define SQ_S_RFE_RESTORE_B64__VI 0x0000002b
#define SQ_S_SETPC_B64__SI__CI 0x00000020
#define SQ_S_SETPC_B64__VI 0x0000001d
#define SQ_S_SETREG_B32__SI__CI 0x00000013
#define SQ_S_SETREG_B32__VI 0x00000012
#define SQ_S_SETREG_IMM32_B32__SI__CI 0x00000015
#define SQ_S_SETREG_IMM32_B32__VI 0x00000014
#define SQ_S_SET_GPR_IDX_IDX__VI 0x00000032
#define SQ_S_SET_GPR_IDX_MODE__VI 0x0000001d
#define SQ_S_SET_GPR_IDX_OFF__VI 0x0000001c
#define SQ_S_SET_GPR_IDX_ON__VI 0x00000011
#define SQ_S_SEXT_I32_I16__SI__CI 0x0000001a
#define SQ_S_SEXT_I32_I16__VI 0x00000017
#define SQ_S_SEXT_I32_I8__SI__CI 0x00000019
#define SQ_S_SEXT_I32_I8__VI 0x00000016
#define SQ_S_STORE_DWORD__VI 0x00000010
#define SQ_S_STORE_DWORDX2__VI 0x00000011
#define SQ_S_STORE_DWORDX4__VI 0x00000012
#define SQ_S_SWAPPC_B64__SI__CI 0x00000021
#define SQ_S_SWAPPC_B64__VI 0x0000001e
#define SQ_S_WAKEUP__VI 0x00000003
#define SQ_S_WQM_B32__SI__CI 0x00000009
#define SQ_S_WQM_B32__VI 0x00000006
#define SQ_S_WQM_B64__SI__CI 0x0000000a
#define SQ_S_WQM_B64__VI 0x00000007
#define SQ_S_XNOR_B32__SI__CI 0x0000001c
#define SQ_S_XNOR_B32__VI 0x0000001a
#define SQ_S_XNOR_B64__SI__CI 0x0000001d
#define SQ_S_XNOR_B64__VI 0x0000001b
#define SQ_S_XNOR_SAVEEXEC_B64__SI__CI 0x0000002b
#define SQ_S_XNOR_SAVEEXEC_B64__VI 0x00000027
#define SQ_S_XOR_B32__SI__CI 0x00000012
#define SQ_S_XOR_B32__VI 0x00000010
#define SQ_S_XOR_B64__SI__CI 0x00000013
#define SQ_S_XOR_B64__VI 0x00000011
#define SQ_S_XOR_SAVEEXEC_B64__SI__CI 0x00000026
#define SQ_S_XOR_SAVEEXEC_B64__VI 0x00000022
#define SQ_TBUFFER_LOAD_FORMAT_D16_X__VI 0x00000008
#define SQ_TBUFFER_LOAD_FORMAT_D16_XY__VI 0x00000009
#define SQ_TBUFFER_LOAD_FORMAT_D16_XYZ__VI 0x0000000a
#define SQ_TBUFFER_LOAD_FORMAT_D16_XYZW__VI 0x0000000b
#define SQ_TBUFFER_STORE_FORMAT_D16_X__VI 0x0000000c
#define SQ_TBUFFER_STORE_FORMAT_D16_XY__VI 0x0000000d
#define SQ_TBUFFER_STORE_FORMAT_D16_XYZ__VI 0x0000000e
#define SQ_TBUFFER_STORE_FORMAT_D16_XYZW__VI 0x0000000f
#define SQ_VINTRP_GET_ATTR__VI(sq_vintrp)                                                          \
  ((sq_vintrp & SQ_VINTRP_ATTR_MASK) >> SQ_VINTRP_ATTR_SHIFT)

#define SQ_VINTRP_GET_ATTRCHAN__VI(sq_vintrp)                                                      \
  ((sq_vintrp & SQ_VINTRP_ATTRCHAN_MASK) >> SQ_VINTRP_ATTRCHAN_SHIFT)

#define SQ_VINTRP_GET_ENCODING__VI(sq_vintrp)                                                      \
  ((sq_vintrp & SQ_VINTRP_ENCODING_MASK) >> SQ_VINTRP_ENCODING_SHIFT)

#define SQ_VINTRP_GET_OP__VI(sq_vintrp) ((sq_vintrp & SQ_VINTRP_OP_MASK) >> SQ_VINTRP_OP_SHIFT)

#define SQ_VINTRP_GET_VDST__VI(sq_vintrp)                                                          \
  ((sq_vintrp & SQ_VINTRP_VDST_MASK) >> SQ_VINTRP_VDST_SHIFT)

#define SQ_VINTRP_GET_VSRC__VI(sq_vintrp)                                                          \
  ((sq_vintrp & SQ_VINTRP_VSRC_MASK) >> SQ_VINTRP_VSRC_SHIFT)

#define SQ_VINTRP_MASK__VI                                                                         \
  (SQ_VINTRP_VSRC_MASK | SQ_VINTRP_ATTRCHAN_MASK | SQ_VINTRP_ATTR_MASK | SQ_VINTRP_OP_MASK |       \
   SQ_VINTRP_VDST_MASK | SQ_VINTRP_ENCODING_MASK)

#define SQ_VINTRP_SET_ATTR__VI(sq_vintrp_reg, attr)                                                \
  sq_vintrp_reg = (sq_vintrp_reg & ~SQ_VINTRP_ATTR_MASK) | (attr << SQ_VINTRP_ATTR_SHIFT)

#define SQ_VINTRP_SET_ATTRCHAN__VI(sq_vintrp_reg, attrchan)                                        \
  sq_vintrp_reg =                                                                                  \
      (sq_vintrp_reg & ~SQ_VINTRP_ATTRCHAN_MASK) | (attrchan << SQ_VINTRP_ATTRCHAN_SHIFT)

#define SQ_VINTRP_SET_ENCODING__VI(sq_vintrp_reg, encoding)                                        \
  sq_vintrp_reg =                                                                                  \
      (sq_vintrp_reg & ~SQ_VINTRP_ENCODING_MASK) | (encoding << SQ_VINTRP_ENCODING_SHIFT)

#define SQ_VINTRP_SET_OP__VI(sq_vintrp_reg, op)                                                    \
  sq_vintrp_reg = (sq_vintrp_reg & ~SQ_VINTRP_OP_MASK) | (op << SQ_VINTRP_OP_SHIFT)

#define SQ_VINTRP_SET_VDST__VI(sq_vintrp_reg, vdst)                                                \
  sq_vintrp_reg = (sq_vintrp_reg & ~SQ_VINTRP_VDST_MASK) | (vdst << SQ_VINTRP_VDST_SHIFT)

#define SQ_VINTRP_SET_VSRC__VI(sq_vintrp_reg, vsrc)                                                \
  sq_vintrp_reg = (sq_vintrp_reg & ~SQ_VINTRP_VSRC_MASK) | (vsrc << SQ_VINTRP_VSRC_SHIFT)

#define SQ_VOP1_GET_ENCODING__VI(sq_vop1)                                                          \
  ((sq_vop1 & SQ_VOP1_ENCODING_MASK) >> SQ_VOP1_ENCODING_SHIFT)

#define SQ_VOP1_GET_OP__VI(sq_vop1) ((sq_vop1 & SQ_VOP1_OP_MASK) >> SQ_VOP1_OP_SHIFT)

#define SQ_VOP1_GET_SRC0__VI(sq_vop1) ((sq_vop1 & SQ_VOP1_SRC0_MASK) >> SQ_VOP1_SRC0_SHIFT)

#define SQ_VOP1_GET_VDST__VI(sq_vop1) ((sq_vop1 & SQ_VOP1_VDST_MASK) >> SQ_VOP1_VDST_SHIFT)

#define SQ_VOP1_MASK__VI                                                                           \
  (SQ_VOP1_SRC0_MASK | SQ_VOP1_OP_MASK | SQ_VOP1_VDST_MASK | SQ_VOP1_ENCODING_MASK)

#define SQ_VOP1_SET_ENCODING__VI(sq_vop1_reg, encoding)                                            \
  sq_vop1_reg = (sq_vop1_reg & ~SQ_VOP1_ENCODING_MASK) | (encoding << SQ_VOP1_ENCODING_SHIFT)

#define SQ_VOP1_SET_OP__VI(sq_vop1_reg, op)                                                        \
  sq_vop1_reg = (sq_vop1_reg & ~SQ_VOP1_OP_MASK) | (op << SQ_VOP1_OP_SHIFT)

#define SQ_VOP1_SET_SRC0__VI(sq_vop1_reg, src0)                                                    \
  sq_vop1_reg = (sq_vop1_reg & ~SQ_VOP1_SRC0_MASK) | (src0 << SQ_VOP1_SRC0_SHIFT)

#define SQ_VOP1_SET_VDST__VI(sq_vop1_reg, vdst)                                                    \
  sq_vop1_reg = (sq_vop1_reg & ~SQ_VOP1_VDST_MASK) | (vdst << SQ_VOP1_VDST_SHIFT)

#define SQ_VOP2_GET_ENCODING__VI(sq_vop2)                                                          \
  ((sq_vop2 & SQ_VOP2_ENCODING_MASK) >> SQ_VOP2_ENCODING_SHIFT)

#define SQ_VOP2_GET_OP__VI(sq_vop2) ((sq_vop2 & SQ_VOP2_OP_MASK) >> SQ_VOP2_OP_SHIFT)

#define SQ_VOP2_GET_SRC0__VI(sq_vop2) ((sq_vop2 & SQ_VOP2_SRC0_MASK) >> SQ_VOP2_SRC0_SHIFT)

#define SQ_VOP2_GET_VDST__VI(sq_vop2) ((sq_vop2 & SQ_VOP2_VDST_MASK) >> SQ_VOP2_VDST_SHIFT)

#define SQ_VOP2_GET_VSRC1__VI(sq_vop2) ((sq_vop2 & SQ_VOP2_VSRC1_MASK) >> SQ_VOP2_VSRC1_SHIFT)

#define SQ_VOP2_MASK__VI                                                                           \
  (SQ_VOP2_SRC0_MASK | SQ_VOP2_VSRC1_MASK | SQ_VOP2_VDST_MASK | SQ_VOP2_OP_MASK |                  \
   SQ_VOP2_ENCODING_MASK)

#define SQ_VOP2_SET_ENCODING__VI(sq_vop2_reg, encoding)                                            \
  sq_vop2_reg = (sq_vop2_reg & ~SQ_VOP2_ENCODING_MASK) | (encoding << SQ_VOP2_ENCODING_SHIFT)

#define SQ_VOP2_SET_OP__VI(sq_vop2_reg, op)                                                        \
  sq_vop2_reg = (sq_vop2_reg & ~SQ_VOP2_OP_MASK) | (op << SQ_VOP2_OP_SHIFT)

#define SQ_VOP2_SET_SRC0__VI(sq_vop2_reg, src0)                                                    \
  sq_vop2_reg = (sq_vop2_reg & ~SQ_VOP2_SRC0_MASK) | (src0 << SQ_VOP2_SRC0_SHIFT)

#define SQ_VOP2_SET_VDST__VI(sq_vop2_reg, vdst)                                                    \
  sq_vop2_reg = (sq_vop2_reg & ~SQ_VOP2_VDST_MASK) | (vdst << SQ_VOP2_VDST_SHIFT)

#define SQ_VOP2_SET_VSRC1__VI(sq_vop2_reg, vsrc1)                                                  \
  sq_vop2_reg = (sq_vop2_reg & ~SQ_VOP2_VSRC1_MASK) | (vsrc1 << SQ_VOP2_VSRC1_SHIFT)

#define SQ_VOP3_0_CLAMP_MASK__SI__CI 0x00000800
#define SQ_VOP3_0_CLAMP_MASK__VI 0x00008000
#define SQ_VOP3_0_CLAMP_SHIFT__SI__CI 11
#define SQ_VOP3_0_CLAMP_SHIFT__VI 15
#define SQ_VOP3_0_DEFAULT__SI__CI 0xcdcc0dcd
#define SQ_VOP3_0_DEFAULT__VI 0xcdcd85cd
#define SQ_VOP3_0_GET_ABS__VI(sq_vop3_0) ((sq_vop3_0 & SQ_VOP3_0_ABS_MASK) >> SQ_VOP3_0_ABS_SHIFT)

#define SQ_VOP3_0_GET_CLAMP__VI(sq_vop3_0)                                                         \
  ((sq_vop3_0 & SQ_VOP3_0_CLAMP_MASK) >> SQ_VOP3_0_CLAMP_SHIFT)

#define SQ_VOP3_0_GET_ENCODING__VI(sq_vop3_0)                                                      \
  ((sq_vop3_0 & SQ_VOP3_0_ENCODING_MASK) >> SQ_VOP3_0_ENCODING_SHIFT)

#define SQ_VOP3_0_GET_OP__VI(sq_vop3_0) ((sq_vop3_0 & SQ_VOP3_0_OP_MASK) >> SQ_VOP3_0_OP_SHIFT)

#define SQ_VOP3_0_GET_VDST__VI(sq_vop3_0)                                                          \
  ((sq_vop3_0 & SQ_VOP3_0_VDST_MASK) >> SQ_VOP3_0_VDST_SHIFT)

#define SQ_VOP3_0_MASK__VI                                                                         \
  (SQ_VOP3_0_VDST_MASK | SQ_VOP3_0_ABS_MASK | SQ_VOP3_0_CLAMP_MASK | SQ_VOP3_0_OP_MASK |           \
   SQ_VOP3_0_ENCODING_MASK)

#define SQ_VOP3_0_OP_MASK__SI__CI 0x03fe0000
#define SQ_VOP3_0_OP_MASK__VI 0x03ff0000
#define SQ_VOP3_0_OP_SHIFT__SI__CI 17
#define SQ_VOP3_0_OP_SHIFT__VI 16
#define SQ_VOP3_0_OP_SIZE__SI__CI 9
#define SQ_VOP3_0_OP_SIZE__VI 10
#define SQ_VOP3_0_SDST_ENC_CLAMP_MASK__VI 0x00008000
#define SQ_VOP3_0_SDST_ENC_CLAMP_SHIFT__VI 15
#define SQ_VOP3_0_SDST_ENC_CLAMP_SIZE__VI 1
#define SQ_VOP3_0_SDST_ENC_DEFAULT__SI__CI 0xcdcc4dcd
#define SQ_VOP3_0_SDST_ENC_DEFAULT__VI 0xcdcdcdcd
#define SQ_VOP3_0_SDST_ENC_GET_CLAMP__VI(sq_vop3_0_sdst_enc)                                       \
  ((sq_vop3_0_sdst_enc & SQ_VOP3_0_SDST_ENC_CLAMP_MASK) >> SQ_VOP3_0_SDST_ENC_CLAMP_SHIFT)

#define SQ_VOP3_0_SDST_ENC_GET_ENCODING__VI(sq_vop3_0_sdst_enc)                                    \
  ((sq_vop3_0_sdst_enc & SQ_VOP3_0_SDST_ENC_ENCODING_MASK) >> SQ_VOP3_0_SDST_ENC_ENCODING_SHIFT)

#define SQ_VOP3_0_SDST_ENC_GET_OP__VI(sq_vop3_0_sdst_enc)                                          \
  ((sq_vop3_0_sdst_enc & SQ_VOP3_0_SDST_ENC_OP_MASK) >> SQ_VOP3_0_SDST_ENC_OP_SHIFT)

#define SQ_VOP3_0_SDST_ENC_GET_SDST__VI(sq_vop3_0_sdst_enc)                                        \
  ((sq_vop3_0_sdst_enc & SQ_VOP3_0_SDST_ENC_SDST_MASK) >> SQ_VOP3_0_SDST_ENC_SDST_SHIFT)

#define SQ_VOP3_0_SDST_ENC_GET_VDST__VI(sq_vop3_0_sdst_enc)                                        \
  ((sq_vop3_0_sdst_enc & SQ_VOP3_0_SDST_ENC_VDST_MASK) >> SQ_VOP3_0_SDST_ENC_VDST_SHIFT)

#define SQ_VOP3_0_SDST_ENC_MASK__VI                                                                \
  (SQ_VOP3_0_SDST_ENC_VDST_MASK | SQ_VOP3_0_SDST_ENC_SDST_MASK | SQ_VOP3_0_SDST_ENC_CLAMP_MASK |   \
   SQ_VOP3_0_SDST_ENC_OP_MASK | SQ_VOP3_0_SDST_ENC_ENCODING_MASK)

#define SQ_VOP3_0_SDST_ENC_OP_MASK__SI__CI 0x03fe0000
#define SQ_VOP3_0_SDST_ENC_OP_MASK__VI 0x03ff0000
#define SQ_VOP3_0_SDST_ENC_OP_SHIFT__SI__CI 17
#define SQ_VOP3_0_SDST_ENC_OP_SHIFT__VI 16
#define SQ_VOP3_0_SDST_ENC_OP_SIZE__SI__CI 9
#define SQ_VOP3_0_SDST_ENC_OP_SIZE__VI 10
#define SQ_VOP3_0_SDST_ENC_SET_CLAMP__VI(sq_vop3_0_sdst_enc_reg, clamp)                            \
  sq_vop3_0_sdst_enc_reg = (sq_vop3_0_sdst_enc_reg & ~SQ_VOP3_0_SDST_ENC_CLAMP_MASK) |             \
      (clamp << SQ_VOP3_0_SDST_ENC_CLAMP_SHIFT)

#define SQ_VOP3_0_SDST_ENC_SET_ENCODING__VI(sq_vop3_0_sdst_enc_reg, encoding)                      \
  sq_vop3_0_sdst_enc_reg = (sq_vop3_0_sdst_enc_reg & ~SQ_VOP3_0_SDST_ENC_ENCODING_MASK) |          \
      (encoding << SQ_VOP3_0_SDST_ENC_ENCODING_SHIFT)

#define SQ_VOP3_0_SDST_ENC_SET_OP__VI(sq_vop3_0_sdst_enc_reg, op)                                  \
  sq_vop3_0_sdst_enc_reg =                                                                         \
      (sq_vop3_0_sdst_enc_reg & ~SQ_VOP3_0_SDST_ENC_OP_MASK) | (op << SQ_VOP3_0_SDST_ENC_OP_SHIFT)

#define SQ_VOP3_0_SDST_ENC_SET_SDST__VI(sq_vop3_0_sdst_enc_reg, sdst)                              \
  sq_vop3_0_sdst_enc_reg = (sq_vop3_0_sdst_enc_reg & ~SQ_VOP3_0_SDST_ENC_SDST_MASK) |              \
      (sdst << SQ_VOP3_0_SDST_ENC_SDST_SHIFT)

#define SQ_VOP3_0_SDST_ENC_SET_VDST__VI(sq_vop3_0_sdst_enc_reg, vdst)                              \
  sq_vop3_0_sdst_enc_reg = (sq_vop3_0_sdst_enc_reg & ~SQ_VOP3_0_SDST_ENC_VDST_MASK) |              \
      (vdst << SQ_VOP3_0_SDST_ENC_VDST_SHIFT)

#define SQ_VOP3_0_SET_ABS__VI(sq_vop3_0_reg, abs)                                                  \
  sq_vop3_0_reg = (sq_vop3_0_reg & ~SQ_VOP3_0_ABS_MASK) | (abs << SQ_VOP3_0_ABS_SHIFT)

#define SQ_VOP3_0_SET_CLAMP__VI(sq_vop3_0_reg, clamp)                                              \
  sq_vop3_0_reg = (sq_vop3_0_reg & ~SQ_VOP3_0_CLAMP_MASK) | (clamp << SQ_VOP3_0_CLAMP_SHIFT)

#define SQ_VOP3_0_SET_ENCODING__VI(sq_vop3_0_reg, encoding)                                        \
  sq_vop3_0_reg =                                                                                  \
      (sq_vop3_0_reg & ~SQ_VOP3_0_ENCODING_MASK) | (encoding << SQ_VOP3_0_ENCODING_SHIFT)

#define SQ_VOP3_0_SET_OP__VI(sq_vop3_0_reg, op)                                                    \
  sq_vop3_0_reg = (sq_vop3_0_reg & ~SQ_VOP3_0_OP_MASK) | (op << SQ_VOP3_0_OP_SHIFT)

#define SQ_VOP3_0_SET_VDST__VI(sq_vop3_0_reg, vdst)                                                \
  sq_vop3_0_reg = (sq_vop3_0_reg & ~SQ_VOP3_0_VDST_MASK) | (vdst << SQ_VOP3_0_VDST_SHIFT)

#define SQ_VOP3_1_GET_NEG__VI(sq_vop3_1) ((sq_vop3_1 & SQ_VOP3_1_NEG_MASK) >> SQ_VOP3_1_NEG_SHIFT)

#define SQ_VOP3_1_GET_OMOD__VI(sq_vop3_1)                                                          \
  ((sq_vop3_1 & SQ_VOP3_1_OMOD_MASK) >> SQ_VOP3_1_OMOD_SHIFT)

#define SQ_VOP3_1_GET_SRC0__VI(sq_vop3_1)                                                          \
  ((sq_vop3_1 & SQ_VOP3_1_SRC0_MASK) >> SQ_VOP3_1_SRC0_SHIFT)

#define SQ_VOP3_1_GET_SRC1__VI(sq_vop3_1)                                                          \
  ((sq_vop3_1 & SQ_VOP3_1_SRC1_MASK) >> SQ_VOP3_1_SRC1_SHIFT)

#define SQ_VOP3_1_GET_SRC2__VI(sq_vop3_1)                                                          \
  ((sq_vop3_1 & SQ_VOP3_1_SRC2_MASK) >> SQ_VOP3_1_SRC2_SHIFT)

#define SQ_VOP3_1_MASK__VI                                                                         \
  (SQ_VOP3_1_SRC0_MASK | SQ_VOP3_1_SRC1_MASK | SQ_VOP3_1_SRC2_MASK | SQ_VOP3_1_OMOD_MASK |         \
   SQ_VOP3_1_NEG_MASK)

#define SQ_VOP3_1_SET_NEG__VI(sq_vop3_1_reg, neg)                                                  \
  sq_vop3_1_reg = (sq_vop3_1_reg & ~SQ_VOP3_1_NEG_MASK) | (neg << SQ_VOP3_1_NEG_SHIFT)

#define SQ_VOP3_1_SET_OMOD__VI(sq_vop3_1_reg, omod)                                                \
  sq_vop3_1_reg = (sq_vop3_1_reg & ~SQ_VOP3_1_OMOD_MASK) | (omod << SQ_VOP3_1_OMOD_SHIFT)

#define SQ_VOP3_1_SET_SRC0__VI(sq_vop3_1_reg, src0)                                                \
  sq_vop3_1_reg = (sq_vop3_1_reg & ~SQ_VOP3_1_SRC0_MASK) | (src0 << SQ_VOP3_1_SRC0_SHIFT)

#define SQ_VOP3_1_SET_SRC1__VI(sq_vop3_1_reg, src1)                                                \
  sq_vop3_1_reg = (sq_vop3_1_reg & ~SQ_VOP3_1_SRC1_MASK) | (src1 << SQ_VOP3_1_SRC1_SHIFT)

#define SQ_VOP3_1_SET_SRC2__VI(sq_vop3_1_reg, src2)                                                \
  sq_vop3_1_reg = (sq_vop3_1_reg & ~SQ_VOP3_1_SRC2_MASK) | (src2 << SQ_VOP3_1_SRC2_SHIFT)

#define SQ_VOPC_GET_ENCODING__VI(sq_vopc)                                                          \
  ((sq_vopc & SQ_VOPC_ENCODING_MASK) >> SQ_VOPC_ENCODING_SHIFT)

#define SQ_VOPC_GET_OP__VI(sq_vopc) ((sq_vopc & SQ_VOPC_OP_MASK) >> SQ_VOPC_OP_SHIFT)

#define SQ_VOPC_GET_SRC0__VI(sq_vopc) ((sq_vopc & SQ_VOPC_SRC0_MASK) >> SQ_VOPC_SRC0_SHIFT)

#define SQ_VOPC_GET_VSRC1__VI(sq_vopc) ((sq_vopc & SQ_VOPC_VSRC1_MASK) >> SQ_VOPC_VSRC1_SHIFT)

#define SQ_VOPC_MASK__VI                                                                           \
  (SQ_VOPC_SRC0_MASK | SQ_VOPC_VSRC1_MASK | SQ_VOPC_OP_MASK | SQ_VOPC_ENCODING_MASK)

#define SQ_VOPC_SET_ENCODING__VI(sq_vopc_reg, encoding)                                            \
  sq_vopc_reg = (sq_vopc_reg & ~SQ_VOPC_ENCODING_MASK) | (encoding << SQ_VOPC_ENCODING_SHIFT)

#define SQ_VOPC_SET_OP__VI(sq_vopc_reg, op)                                                        \
  sq_vopc_reg = (sq_vopc_reg & ~SQ_VOPC_OP_MASK) | (op << SQ_VOPC_OP_SHIFT)

#define SQ_VOPC_SET_SRC0__VI(sq_vopc_reg, src0)                                                    \
  sq_vopc_reg = (sq_vopc_reg & ~SQ_VOPC_SRC0_MASK) | (src0 << SQ_VOPC_SRC0_SHIFT)

#define SQ_VOPC_SET_VSRC1__VI(sq_vopc_reg, vsrc1)                                                  \
  sq_vopc_reg = (sq_vopc_reg & ~SQ_VOPC_VSRC1_MASK) | (vsrc1 << SQ_VOPC_VSRC1_SHIFT)

#define SQ_VOP_DPP_BANK_MASK_MASK__VI 0x0f000000
#define SQ_VOP_DPP_BANK_MASK_SHIFT__VI 24
#define SQ_VOP_DPP_BANK_MASK_SIZE__VI 4
#define SQ_VOP_DPP_BOUND_CTRL_MASK__VI 0x00080000
#define SQ_VOP_DPP_BOUND_CTRL_SHIFT__VI 19
#define SQ_VOP_DPP_BOUND_CTRL_SIZE__VI 1
#define SQ_VOP_DPP_DEFAULT__VI 0xcdc9cdcd
#define SQ_VOP_DPP_DPP_CTRL_MASK__VI 0x0001ff00
#define SQ_VOP_DPP_DPP_CTRL_SHIFT__VI 8
#define SQ_VOP_DPP_DPP_CTRL_SIZE__VI 9
#define SQ_VOP_DPP_GET_BANK_MASK__VI(sq_vop_dpp)                                                   \
  ((sq_vop_dpp & SQ_VOP_DPP_BANK_MASK_MASK) >> SQ_VOP_DPP_BANK_MASK_SHIFT)

#define SQ_VOP_DPP_GET_BOUND_CTRL__VI(sq_vop_dpp)                                                  \
  ((sq_vop_dpp & SQ_VOP_DPP_BOUND_CTRL_MASK) >> SQ_VOP_DPP_BOUND_CTRL_SHIFT)

#define SQ_VOP_DPP_GET_DPP_CTRL__VI(sq_vop_dpp)                                                    \
  ((sq_vop_dpp & SQ_VOP_DPP_DPP_CTRL_MASK) >> SQ_VOP_DPP_DPP_CTRL_SHIFT)

#define SQ_VOP_DPP_GET_ROW_MASK__VI(sq_vop_dpp)                                                    \
  ((sq_vop_dpp & SQ_VOP_DPP_ROW_MASK_MASK) >> SQ_VOP_DPP_ROW_MASK_SHIFT)

#define SQ_VOP_DPP_GET_SRC0__VI(sq_vop_dpp)                                                        \
  ((sq_vop_dpp & SQ_VOP_DPP_SRC0_MASK) >> SQ_VOP_DPP_SRC0_SHIFT)

#define SQ_VOP_DPP_GET_SRC0_ABS__VI(sq_vop_dpp)                                                    \
  ((sq_vop_dpp & SQ_VOP_DPP_SRC0_ABS_MASK) >> SQ_VOP_DPP_SRC0_ABS_SHIFT)

#define SQ_VOP_DPP_GET_SRC0_NEG__VI(sq_vop_dpp)                                                    \
  ((sq_vop_dpp & SQ_VOP_DPP_SRC0_NEG_MASK) >> SQ_VOP_DPP_SRC0_NEG_SHIFT)

#define SQ_VOP_DPP_GET_SRC1_ABS__VI(sq_vop_dpp)                                                    \
  ((sq_vop_dpp & SQ_VOP_DPP_SRC1_ABS_MASK) >> SQ_VOP_DPP_SRC1_ABS_SHIFT)

#define SQ_VOP_DPP_GET_SRC1_NEG__VI(sq_vop_dpp)                                                    \
  ((sq_vop_dpp & SQ_VOP_DPP_SRC1_NEG_MASK) >> SQ_VOP_DPP_SRC1_NEG_SHIFT)

#define SQ_VOP_DPP_MASK__VI                                                                        \
  (SQ_VOP_DPP_SRC0_MASK | SQ_VOP_DPP_DPP_CTRL_MASK | SQ_VOP_DPP_BOUND_CTRL_MASK |                  \
   SQ_VOP_DPP_SRC0_NEG_MASK | SQ_VOP_DPP_SRC0_ABS_MASK | SQ_VOP_DPP_SRC1_NEG_MASK |                \
   SQ_VOP_DPP_SRC1_ABS_MASK | SQ_VOP_DPP_BANK_MASK_MASK | SQ_VOP_DPP_ROW_MASK_MASK)

#define SQ_VOP_DPP_REG_SIZE__VI 32
#define SQ_VOP_DPP_ROW_MASK_MASK__VI 0xf0000000
#define SQ_VOP_DPP_ROW_MASK_SHIFT__VI 28
#define SQ_VOP_DPP_ROW_MASK_SIZE__VI 4
#define SQ_VOP_DPP_SET_BANK_MASK__VI(sq_vop_dpp_reg, bank_mask)                                    \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_BANK_MASK_MASK) | (bank_mask << SQ_VOP_DPP_BANK_MASK_SHIFT)

#define SQ_VOP_DPP_SET_BOUND_CTRL__VI(sq_vop_dpp_reg, bound_ctrl)                                  \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_BOUND_CTRL_MASK) | (bound_ctrl << SQ_VOP_DPP_BOUND_CTRL_SHIFT)

#define SQ_VOP_DPP_SET_DPP_CTRL__VI(sq_vop_dpp_reg, dpp_ctrl)                                      \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_DPP_CTRL_MASK) | (dpp_ctrl << SQ_VOP_DPP_DPP_CTRL_SHIFT)

#define SQ_VOP_DPP_SET_ROW_MASK__VI(sq_vop_dpp_reg, row_mask)                                      \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_ROW_MASK_MASK) | (row_mask << SQ_VOP_DPP_ROW_MASK_SHIFT)

#define SQ_VOP_DPP_SET_SRC0__VI(sq_vop_dpp_reg, src0)                                              \
  sq_vop_dpp_reg = (sq_vop_dpp_reg & ~SQ_VOP_DPP_SRC0_MASK) | (src0 << SQ_VOP_DPP_SRC0_SHIFT)

#define SQ_VOP_DPP_SET_SRC0_ABS__VI(sq_vop_dpp_reg, src0_abs)                                      \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_SRC0_ABS_MASK) | (src0_abs << SQ_VOP_DPP_SRC0_ABS_SHIFT)

#define SQ_VOP_DPP_SET_SRC0_NEG__VI(sq_vop_dpp_reg, src0_neg)                                      \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_SRC0_NEG_MASK) | (src0_neg << SQ_VOP_DPP_SRC0_NEG_SHIFT)

#define SQ_VOP_DPP_SET_SRC1_ABS__VI(sq_vop_dpp_reg, src1_abs)                                      \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_SRC1_ABS_MASK) | (src1_abs << SQ_VOP_DPP_SRC1_ABS_SHIFT)

#define SQ_VOP_DPP_SET_SRC1_NEG__VI(sq_vop_dpp_reg, src1_neg)                                      \
  sq_vop_dpp_reg =                                                                                 \
      (sq_vop_dpp_reg & ~SQ_VOP_DPP_SRC1_NEG_MASK) | (src1_neg << SQ_VOP_DPP_SRC1_NEG_SHIFT)

#define SQ_VOP_DPP_SRC0_ABS_MASK__VI 0x00200000
#define SQ_VOP_DPP_SRC0_ABS_SHIFT__VI 21
#define SQ_VOP_DPP_SRC0_ABS_SIZE__VI 1
#define SQ_VOP_DPP_SRC0_MASK__VI 0x000000ff
#define SQ_VOP_DPP_SRC0_NEG_MASK__VI 0x00100000
#define SQ_VOP_DPP_SRC0_NEG_SHIFT__VI 20
#define SQ_VOP_DPP_SRC0_NEG_SIZE__VI 1
#define SQ_VOP_DPP_SRC0_SHIFT__VI 0x00000000
#define SQ_VOP_DPP_SRC0_SIZE__VI 8
#define SQ_VOP_DPP_SRC1_ABS_MASK__VI 0x00800000
#define SQ_VOP_DPP_SRC1_ABS_SHIFT__VI 23
#define SQ_VOP_DPP_SRC1_ABS_SIZE__VI 1
#define SQ_VOP_DPP_SRC1_NEG_MASK__VI 0x00400000
#define SQ_VOP_DPP_SRC1_NEG_SHIFT__VI 22
#define SQ_VOP_DPP_SRC1_NEG_SIZE__VI 1
#define SQ_VOP_SDWA_CLAMP_MASK__VI 0x00002000
#define SQ_VOP_SDWA_CLAMP_SHIFT__VI 13
#define SQ_VOP_SDWA_CLAMP_SIZE__VI 1
#define SQ_VOP_SDWA_DEFAULT__VI 0x0d0d0dcd
#define SQ_VOP_SDWA_DST_SEL_MASK__VI 0x00000700
#define SQ_VOP_SDWA_DST_SEL_SHIFT__VI 8
#define SQ_VOP_SDWA_DST_SEL_SIZE__VI 3
#define SQ_VOP_SDWA_DST_UNUSED_MASK__VI 0x00001800
#define SQ_VOP_SDWA_DST_UNUSED_SHIFT__VI 11
#define SQ_VOP_SDWA_DST_UNUSED_SIZE__VI 2
#define SQ_VOP_SDWA_GET_CLAMP__VI(sq_vop_sdwa)                                                     \
  ((sq_vop_sdwa & SQ_VOP_SDWA_CLAMP_MASK) >> SQ_VOP_SDWA_CLAMP_SHIFT)

#define SQ_VOP_SDWA_GET_DST_SEL__VI(sq_vop_sdwa)                                                   \
  ((sq_vop_sdwa & SQ_VOP_SDWA_DST_SEL_MASK) >> SQ_VOP_SDWA_DST_SEL_SHIFT)

#define SQ_VOP_SDWA_GET_DST_UNUSED__VI(sq_vop_sdwa)                                                \
  ((sq_vop_sdwa & SQ_VOP_SDWA_DST_UNUSED_MASK) >> SQ_VOP_SDWA_DST_UNUSED_SHIFT)

#define SQ_VOP_SDWA_GET_SRC0__VI(sq_vop_sdwa)                                                      \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC0_MASK) >> SQ_VOP_SDWA_SRC0_SHIFT)

#define SQ_VOP_SDWA_GET_SRC0_ABS__VI(sq_vop_sdwa)                                                  \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC0_ABS_MASK) >> SQ_VOP_SDWA_SRC0_ABS_SHIFT)

#define SQ_VOP_SDWA_GET_SRC0_NEG__VI(sq_vop_sdwa)                                                  \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC0_NEG_MASK) >> SQ_VOP_SDWA_SRC0_NEG_SHIFT)

#define SQ_VOP_SDWA_GET_SRC0_SEL__VI(sq_vop_sdwa)                                                  \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC0_SEL_MASK) >> SQ_VOP_SDWA_SRC0_SEL_SHIFT)

#define SQ_VOP_SDWA_GET_SRC0_SEXT__VI(sq_vop_sdwa)                                                 \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC0_SEXT_MASK) >> SQ_VOP_SDWA_SRC0_SEXT_SHIFT)

#define SQ_VOP_SDWA_GET_SRC1_ABS__VI(sq_vop_sdwa)                                                  \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC1_ABS_MASK) >> SQ_VOP_SDWA_SRC1_ABS_SHIFT)

#define SQ_VOP_SDWA_GET_SRC1_NEG__VI(sq_vop_sdwa)                                                  \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC1_NEG_MASK) >> SQ_VOP_SDWA_SRC1_NEG_SHIFT)

#define SQ_VOP_SDWA_GET_SRC1_SEL__VI(sq_vop_sdwa)                                                  \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC1_SEL_MASK) >> SQ_VOP_SDWA_SRC1_SEL_SHIFT)

#define SQ_VOP_SDWA_GET_SRC1_SEXT__VI(sq_vop_sdwa)                                                 \
  ((sq_vop_sdwa & SQ_VOP_SDWA_SRC1_SEXT_MASK) >> SQ_VOP_SDWA_SRC1_SEXT_SHIFT)

#define SQ_VOP_SDWA_MASK__VI                                                                       \
  (SQ_VOP_SDWA_SRC0_MASK | SQ_VOP_SDWA_DST_SEL_MASK | SQ_VOP_SDWA_DST_UNUSED_MASK |                \
   SQ_VOP_SDWA_CLAMP_MASK | SQ_VOP_SDWA_SRC0_SEL_MASK | SQ_VOP_SDWA_SRC0_SEXT_MASK |               \
   SQ_VOP_SDWA_SRC0_NEG_MASK | SQ_VOP_SDWA_SRC0_ABS_MASK | SQ_VOP_SDWA_SRC1_SEL_MASK |             \
   SQ_VOP_SDWA_SRC1_SEXT_MASK | SQ_VOP_SDWA_SRC1_NEG_MASK | SQ_VOP_SDWA_SRC1_ABS_MASK)

#define SQ_VOP_SDWA_REG_SIZE__VI 32
#define SQ_VOP_SDWA_SET_CLAMP__VI(sq_vop_sdwa_reg, clamp)                                          \
  sq_vop_sdwa_reg = (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_CLAMP_MASK) | (clamp << SQ_VOP_SDWA_CLAMP_SHIFT)

#define SQ_VOP_SDWA_SET_DST_SEL__VI(sq_vop_sdwa_reg, dst_sel)                                      \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_DST_SEL_MASK) | (dst_sel << SQ_VOP_SDWA_DST_SEL_SHIFT)

#define SQ_VOP_SDWA_SET_DST_UNUSED__VI(sq_vop_sdwa_reg, dst_unused)                                \
  sq_vop_sdwa_reg = (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_DST_UNUSED_MASK) |                             \
      (dst_unused << SQ_VOP_SDWA_DST_UNUSED_SHIFT)

#define SQ_VOP_SDWA_SET_SRC0__VI(sq_vop_sdwa_reg, src0)                                            \
  sq_vop_sdwa_reg = (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC0_MASK) | (src0 << SQ_VOP_SDWA_SRC0_SHIFT)

#define SQ_VOP_SDWA_SET_SRC0_ABS__VI(sq_vop_sdwa_reg, src0_abs)                                    \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC0_ABS_MASK) | (src0_abs << SQ_VOP_SDWA_SRC0_ABS_SHIFT)

#define SQ_VOP_SDWA_SET_SRC0_NEG__VI(sq_vop_sdwa_reg, src0_neg)                                    \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC0_NEG_MASK) | (src0_neg << SQ_VOP_SDWA_SRC0_NEG_SHIFT)

#define SQ_VOP_SDWA_SET_SRC0_SEL__VI(sq_vop_sdwa_reg, src0_sel)                                    \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC0_SEL_MASK) | (src0_sel << SQ_VOP_SDWA_SRC0_SEL_SHIFT)

#define SQ_VOP_SDWA_SET_SRC0_SEXT__VI(sq_vop_sdwa_reg, src0_sext)                                  \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC0_SEXT_MASK) | (src0_sext << SQ_VOP_SDWA_SRC0_SEXT_SHIFT)

#define SQ_VOP_SDWA_SET_SRC1_ABS__VI(sq_vop_sdwa_reg, src1_abs)                                    \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC1_ABS_MASK) | (src1_abs << SQ_VOP_SDWA_SRC1_ABS_SHIFT)

#define SQ_VOP_SDWA_SET_SRC1_NEG__VI(sq_vop_sdwa_reg, src1_neg)                                    \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC1_NEG_MASK) | (src1_neg << SQ_VOP_SDWA_SRC1_NEG_SHIFT)

#define SQ_VOP_SDWA_SET_SRC1_SEL__VI(sq_vop_sdwa_reg, src1_sel)                                    \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC1_SEL_MASK) | (src1_sel << SQ_VOP_SDWA_SRC1_SEL_SHIFT)

#define SQ_VOP_SDWA_SET_SRC1_SEXT__VI(sq_vop_sdwa_reg, src1_sext)                                  \
  sq_vop_sdwa_reg =                                                                                \
      (sq_vop_sdwa_reg & ~SQ_VOP_SDWA_SRC1_SEXT_MASK) | (src1_sext << SQ_VOP_SDWA_SRC1_SEXT_SHIFT)

#define SQ_VOP_SDWA_SRC0_ABS_MASK__VI 0x00200000
#define SQ_VOP_SDWA_SRC0_ABS_SHIFT__VI 21
#define SQ_VOP_SDWA_SRC0_ABS_SIZE__VI 1
#define SQ_VOP_SDWA_SRC0_MASK__VI 0x000000ff
#define SQ_VOP_SDWA_SRC0_NEG_MASK__VI 0x00100000
#define SQ_VOP_SDWA_SRC0_NEG_SHIFT__VI 20
#define SQ_VOP_SDWA_SRC0_NEG_SIZE__VI 1
#define SQ_VOP_SDWA_SRC0_SEL_MASK__VI 0x00070000
#define SQ_VOP_SDWA_SRC0_SEL_SHIFT__VI 16
#define SQ_VOP_SDWA_SRC0_SEL_SIZE__VI 3
#define SQ_VOP_SDWA_SRC0_SEXT_MASK__VI 0x00080000
#define SQ_VOP_SDWA_SRC0_SEXT_SHIFT__VI 19
#define SQ_VOP_SDWA_SRC0_SEXT_SIZE__VI 1
#define SQ_VOP_SDWA_SRC0_SHIFT__VI 0x00000000
#define SQ_VOP_SDWA_SRC0_SIZE__VI 8
#define SQ_VOP_SDWA_SRC1_ABS_MASK__VI 0x20000000
#define SQ_VOP_SDWA_SRC1_ABS_SHIFT__VI 29
#define SQ_VOP_SDWA_SRC1_ABS_SIZE__VI 1
#define SQ_VOP_SDWA_SRC1_NEG_MASK__VI 0x10000000
#define SQ_VOP_SDWA_SRC1_NEG_SHIFT__VI 28
#define SQ_VOP_SDWA_SRC1_NEG_SIZE__VI 1
#define SQ_VOP_SDWA_SRC1_SEL_MASK__VI 0x07000000
#define SQ_VOP_SDWA_SRC1_SEL_SHIFT__VI 24
#define SQ_VOP_SDWA_SRC1_SEL_SIZE__VI 3
#define SQ_VOP_SDWA_SRC1_SEXT_MASK__VI 0x08000000
#define SQ_VOP_SDWA_SRC1_SEXT_SHIFT__VI 27
#define SQ_VOP_SDWA_SRC1_SEXT_SIZE__VI 1
#define SQ_V_ADDC_U32__SI__CI 0x00000028
#define SQ_V_ADDC_U32__VI 0x0000001c
#define SQ_V_ADD_F16__VI 0x0000001f
#define SQ_V_ADD_F32__SI__CI 0x00000003
#define SQ_V_ADD_F32__VI 0x00000001
#define SQ_V_ADD_F64__SI__CI 0x00000164
#define SQ_V_ADD_F64__VI 0x00000280
#define SQ_V_ADD_U16__VI 0x00000026
#define SQ_V_ADD_U32__VI 0x00000019
#define SQ_V_ALIGNBIT_B32__SI__CI 0x0000014e
#define SQ_V_ALIGNBIT_B32__VI 0x000001ce
#define SQ_V_ALIGNBYTE_B32__SI__CI 0x0000014f
#define SQ_V_ALIGNBYTE_B32__VI 0x000001cf
#define SQ_V_AND_B32__SI__CI 0x0000001b
#define SQ_V_AND_B32__VI 0x00000013
#define SQ_V_ASHRREV_I16__VI 0x0000002c
#define SQ_V_ASHRREV_I32__SI__CI 0x00000018
#define SQ_V_ASHRREV_I32__VI 0x00000011
#define SQ_V_ASHRREV_I64__VI 0x00000291
#define SQ_V_BCNT_U32_B32__SI__CI 0x00000022
#define SQ_V_BCNT_U32_B32__VI 0x0000028b
#define SQ_V_BFE_I32__SI__CI 0x00000149
#define SQ_V_BFE_I32__VI 0x000001c9
#define SQ_V_BFE_U32__SI__CI 0x00000148
#define SQ_V_BFE_U32__VI 0x000001c8
#define SQ_V_BFI_B32__SI__CI 0x0000014a
#define SQ_V_BFI_B32__VI 0x000001ca
#define SQ_V_BFM_B32__SI__CI 0x0000001e
#define SQ_V_BFM_B32__VI 0x00000293
#define SQ_V_BFREV_B32__SI__CI 0x00000038
#define SQ_V_BFREV_B32__VI 0x0000002c
#define SQ_V_CEIL_F16__VI 0x00000045
#define SQ_V_CEIL_F32__SI__CI 0x00000022
#define SQ_V_CEIL_F32__VI 0x0000001d
#define SQ_V_CLREXCP__SI__CI 0x00000041
#define SQ_V_CLREXCP__VI 0x00000035
#define SQ_V_CMPX_CLASS_F16__VI 0x00000015
#define SQ_V_CMPX_CLASS_F32__SI__CI 0x00000098
#define SQ_V_CMPX_CLASS_F32__VI 0x00000011
#define SQ_V_CMPX_CLASS_F64__SI__CI 0x000000b8
#define SQ_V_CMPX_CLASS_F64__VI 0x00000013
#define SQ_V_CMPX_EQ_F16__VI 0x00000032
#define SQ_V_CMPX_EQ_F32__SI__CI 0x00000012
#define SQ_V_CMPX_EQ_F32__VI 0x00000052
#define SQ_V_CMPX_EQ_F64__SI__CI 0x00000032
#define SQ_V_CMPX_EQ_F64__VI 0x00000072
#define SQ_V_CMPX_EQ_I16__VI 0x000000b2
#define SQ_V_CMPX_EQ_I32__SI__CI 0x00000092
#define SQ_V_CMPX_EQ_I32__VI 0x000000d2
#define SQ_V_CMPX_EQ_I64__SI__CI 0x000000b2
#define SQ_V_CMPX_EQ_I64__VI 0x000000f2
#define SQ_V_CMPX_EQ_U16__VI 0x000000ba
#define SQ_V_CMPX_EQ_U32__SI__CI 0x000000d2
#define SQ_V_CMPX_EQ_U32__VI 0x000000da
#define SQ_V_CMPX_EQ_U64__SI__CI 0x000000f2
#define SQ_V_CMPX_EQ_U64__VI 0x000000fa
#define SQ_V_CMPX_F_F16__VI 0x00000030
#define SQ_V_CMPX_F_F32__SI__CI 0x00000010
#define SQ_V_CMPX_F_F32__VI 0x00000050
#define SQ_V_CMPX_F_F64__SI__CI 0x00000030
#define SQ_V_CMPX_F_F64__VI 0x00000070
#define SQ_V_CMPX_F_I16__VI 0x000000b0
#define SQ_V_CMPX_F_I32__SI__CI 0x00000090
#define SQ_V_CMPX_F_I32__VI 0x000000d0
#define SQ_V_CMPX_F_I64__SI__CI 0x000000b0
#define SQ_V_CMPX_F_I64__VI 0x000000f0
#define SQ_V_CMPX_F_U16__VI 0x000000b8
#define SQ_V_CMPX_F_U32__SI__CI 0x000000d0
#define SQ_V_CMPX_F_U32__VI 0x000000d8
#define SQ_V_CMPX_F_U64__SI__CI 0x000000f0
#define SQ_V_CMPX_F_U64__VI 0x000000f8
#define SQ_V_CMPX_GE_F16__VI 0x00000036
#define SQ_V_CMPX_GE_F32__SI__CI 0x00000016
#define SQ_V_CMPX_GE_F32__VI 0x00000056
#define SQ_V_CMPX_GE_F64__SI__CI 0x00000036
#define SQ_V_CMPX_GE_F64__VI 0x00000076
#define SQ_V_CMPX_GE_I16__VI 0x000000b6
#define SQ_V_CMPX_GE_I32__SI__CI 0x00000096
#define SQ_V_CMPX_GE_I32__VI 0x000000d6
#define SQ_V_CMPX_GE_I64__SI__CI 0x000000b6
#define SQ_V_CMPX_GE_I64__VI 0x000000f6
#define SQ_V_CMPX_GE_U16__VI 0x000000be
#define SQ_V_CMPX_GE_U32__SI__CI 0x000000d6
#define SQ_V_CMPX_GE_U32__VI 0x000000de
#define SQ_V_CMPX_GE_U64__SI__CI 0x000000f6
#define SQ_V_CMPX_GE_U64__VI 0x000000fe
#define SQ_V_CMPX_GT_F16__VI 0x00000034
#define SQ_V_CMPX_GT_F32__SI__CI 0x00000014
#define SQ_V_CMPX_GT_F32__VI 0x00000054
#define SQ_V_CMPX_GT_F64__SI__CI 0x00000034
#define SQ_V_CMPX_GT_F64__VI 0x00000074
#define SQ_V_CMPX_GT_I16__VI 0x000000b4
#define SQ_V_CMPX_GT_I32__SI__CI 0x00000094
#define SQ_V_CMPX_GT_I32__VI 0x000000d4
#define SQ_V_CMPX_GT_I64__SI__CI 0x000000b4
#define SQ_V_CMPX_GT_I64__VI 0x000000f4
#define SQ_V_CMPX_GT_U16__VI 0x000000bc
#define SQ_V_CMPX_GT_U32__SI__CI 0x000000d4
#define SQ_V_CMPX_GT_U32__VI 0x000000dc
#define SQ_V_CMPX_GT_U64__SI__CI 0x000000f4
#define SQ_V_CMPX_GT_U64__VI 0x000000fc
#define SQ_V_CMPX_LE_F16__VI 0x00000033
#define SQ_V_CMPX_LE_F32__SI__CI 0x00000013
#define SQ_V_CMPX_LE_F32__VI 0x00000053
#define SQ_V_CMPX_LE_F64__SI__CI 0x00000033
#define SQ_V_CMPX_LE_F64__VI 0x00000073
#define SQ_V_CMPX_LE_I16__VI 0x000000b3
#define SQ_V_CMPX_LE_I32__SI__CI 0x00000093
#define SQ_V_CMPX_LE_I32__VI 0x000000d3
#define SQ_V_CMPX_LE_I64__SI__CI 0x000000b3
#define SQ_V_CMPX_LE_I64__VI 0x000000f3
#define SQ_V_CMPX_LE_U16__VI 0x000000bb
#define SQ_V_CMPX_LE_U32__SI__CI 0x000000d3
#define SQ_V_CMPX_LE_U32__VI 0x000000db
#define SQ_V_CMPX_LE_U64__SI__CI 0x000000f3
#define SQ_V_CMPX_LE_U64__VI 0x000000fb
#define SQ_V_CMPX_LG_F16__VI 0x00000035
#define SQ_V_CMPX_LG_F32__SI__CI 0x00000015
#define SQ_V_CMPX_LG_F32__VI 0x00000055
#define SQ_V_CMPX_LG_F64__SI__CI 0x00000035
#define SQ_V_CMPX_LG_F64__VI 0x00000075
#define SQ_V_CMPX_LT_F16__VI 0x00000031
#define SQ_V_CMPX_LT_F32__SI__CI 0x00000011
#define SQ_V_CMPX_LT_F32__VI 0x00000051
#define SQ_V_CMPX_LT_F64__SI__CI 0x00000031
#define SQ_V_CMPX_LT_F64__VI 0x00000071
#define SQ_V_CMPX_LT_I16__VI 0x000000b1
#define SQ_V_CMPX_LT_I32__SI__CI 0x00000091
#define SQ_V_CMPX_LT_I32__VI 0x000000d1
#define SQ_V_CMPX_LT_I64__SI__CI 0x000000b1
#define SQ_V_CMPX_LT_I64__VI 0x000000f1
#define SQ_V_CMPX_LT_U16__VI 0x000000b9
#define SQ_V_CMPX_LT_U32__SI__CI 0x000000d1
#define SQ_V_CMPX_LT_U32__VI 0x000000d9
#define SQ_V_CMPX_LT_U64__SI__CI 0x000000f1
#define SQ_V_CMPX_LT_U64__VI 0x000000f9
#define SQ_V_CMPX_NEQ_F16__VI 0x0000003d
#define SQ_V_CMPX_NEQ_F32__SI__CI 0x0000001d
#define SQ_V_CMPX_NEQ_F32__VI 0x0000005d
#define SQ_V_CMPX_NEQ_F64__SI__CI 0x0000003d
#define SQ_V_CMPX_NEQ_F64__VI 0x0000007d
#define SQ_V_CMPX_NE_I16__VI 0x000000b5
#define SQ_V_CMPX_NE_I32__SI__CI 0x00000095
#define SQ_V_CMPX_NE_I32__VI 0x000000d5
#define SQ_V_CMPX_NE_I64__SI__CI 0x000000b5
#define SQ_V_CMPX_NE_I64__VI 0x000000f5
#define SQ_V_CMPX_NE_U16__VI 0x000000bd
#define SQ_V_CMPX_NE_U32__SI__CI 0x000000d5
#define SQ_V_CMPX_NE_U32__VI 0x000000dd
#define SQ_V_CMPX_NE_U64__SI__CI 0x000000f5
#define SQ_V_CMPX_NE_U64__VI 0x000000fd
#define SQ_V_CMPX_NGE_F16__VI 0x00000039
#define SQ_V_CMPX_NGE_F32__SI__CI 0x00000019
#define SQ_V_CMPX_NGE_F32__VI 0x00000059
#define SQ_V_CMPX_NGE_F64__SI__CI 0x00000039
#define SQ_V_CMPX_NGE_F64__VI 0x00000079
#define SQ_V_CMPX_NGT_F16__VI 0x0000003b
#define SQ_V_CMPX_NGT_F32__SI__CI 0x0000001b
#define SQ_V_CMPX_NGT_F32__VI 0x0000005b
#define SQ_V_CMPX_NGT_F64__SI__CI 0x0000003b
#define SQ_V_CMPX_NGT_F64__VI 0x0000007b
#define SQ_V_CMPX_NLE_F16__VI 0x0000003c
#define SQ_V_CMPX_NLE_F32__SI__CI 0x0000001c
#define SQ_V_CMPX_NLE_F32__VI 0x0000005c
#define SQ_V_CMPX_NLE_F64__SI__CI 0x0000003c
#define SQ_V_CMPX_NLE_F64__VI 0x0000007c
#define SQ_V_CMPX_NLG_F16__VI 0x0000003a
#define SQ_V_CMPX_NLG_F32__SI__CI 0x0000001a
#define SQ_V_CMPX_NLG_F32__VI 0x0000005a
#define SQ_V_CMPX_NLG_F64__SI__CI 0x0000003a
#define SQ_V_CMPX_NLG_F64__VI 0x0000007a
#define SQ_V_CMPX_NLT_F16__VI 0x0000003e
#define SQ_V_CMPX_NLT_F32__SI__CI 0x0000001e
#define SQ_V_CMPX_NLT_F32__VI 0x0000005e
#define SQ_V_CMPX_NLT_F64__SI__CI 0x0000003e
#define SQ_V_CMPX_NLT_F64__VI 0x0000007e
#define SQ_V_CMPX_O_F16__VI 0x00000037
#define SQ_V_CMPX_O_F32__SI__CI 0x00000017
#define SQ_V_CMPX_O_F32__VI 0x00000057
#define SQ_V_CMPX_O_F64__SI__CI 0x00000037
#define SQ_V_CMPX_O_F64__VI 0x00000077
#define SQ_V_CMPX_TRU_F16__VI 0x0000003f
#define SQ_V_CMPX_TRU_F32__SI__CI 0x0000001f
#define SQ_V_CMPX_TRU_F32__VI 0x0000005f
#define SQ_V_CMPX_TRU_F64__SI__CI 0x0000003f
#define SQ_V_CMPX_TRU_F64__VI 0x0000007f
#define SQ_V_CMPX_T_I16__VI 0x000000b7
#define SQ_V_CMPX_T_I32__SI__CI 0x00000097
#define SQ_V_CMPX_T_I32__VI 0x000000d7
#define SQ_V_CMPX_T_I64__SI__CI 0x000000b7
#define SQ_V_CMPX_T_I64__VI 0x000000f7
#define SQ_V_CMPX_T_U16__VI 0x000000bf
#define SQ_V_CMPX_T_U32__SI__CI 0x000000d7
#define SQ_V_CMPX_T_U32__VI 0x000000df
#define SQ_V_CMPX_T_U64__SI__CI 0x000000f7
#define SQ_V_CMPX_T_U64__VI 0x000000ff
#define SQ_V_CMPX_U_F16__VI 0x00000038
#define SQ_V_CMPX_U_F32__SI__CI 0x00000018
#define SQ_V_CMPX_U_F32__VI 0x00000058
#define SQ_V_CMPX_U_F64__SI__CI 0x00000038
#define SQ_V_CMPX_U_F64__VI 0x00000078
#define SQ_V_CMP_CLASS_F16__VI 0x00000014
#define SQ_V_CMP_CLASS_F32__SI__CI 0x00000088
#define SQ_V_CMP_CLASS_F32__VI 0x00000010
#define SQ_V_CMP_CLASS_F64__SI__CI 0x000000a8
#define SQ_V_CMP_CLASS_F64__VI 0x00000012
#define SQ_V_CMP_EQ_F16__VI 0x00000022
#define SQ_V_CMP_EQ_F32__SI__CI 0x00000002
#define SQ_V_CMP_EQ_F32__VI 0x00000042
#define SQ_V_CMP_EQ_F64__SI__CI 0x00000022
#define SQ_V_CMP_EQ_F64__VI 0x00000062
#define SQ_V_CMP_EQ_I16__VI 0x000000a2
#define SQ_V_CMP_EQ_I32__SI__CI 0x00000082
#define SQ_V_CMP_EQ_I32__VI 0x000000c2
#define SQ_V_CMP_EQ_I64__SI__CI 0x000000a2
#define SQ_V_CMP_EQ_I64__VI 0x000000e2
#define SQ_V_CMP_EQ_U16__VI 0x000000aa
#define SQ_V_CMP_EQ_U32__SI__CI 0x000000c2
#define SQ_V_CMP_EQ_U32__VI 0x000000ca
#define SQ_V_CMP_EQ_U64__SI__CI 0x000000e2
#define SQ_V_CMP_EQ_U64__VI 0x000000ea
#define SQ_V_CMP_F_F16__VI 0x00000020
#define SQ_V_CMP_F_F32__SI__CI 0x00000000
#define SQ_V_CMP_F_F32__VI 0x00000040
#define SQ_V_CMP_F_F64__SI__CI 0x00000020
#define SQ_V_CMP_F_F64__VI 0x00000060
#define SQ_V_CMP_F_I16__VI 0x000000a0
#define SQ_V_CMP_F_I32__SI__CI 0x00000080
#define SQ_V_CMP_F_I32__VI 0x000000c0
#define SQ_V_CMP_F_I64__SI__CI 0x000000a0
#define SQ_V_CMP_F_I64__VI 0x000000e0
#define SQ_V_CMP_F_U16__VI 0x000000a8
#define SQ_V_CMP_F_U32__SI__CI 0x000000c0
#define SQ_V_CMP_F_U32__VI 0x000000c8
#define SQ_V_CMP_F_U64__SI__CI 0x000000e0
#define SQ_V_CMP_F_U64__VI 0x000000e8
#define SQ_V_CMP_GE_F16__VI 0x00000026
#define SQ_V_CMP_GE_F32__SI__CI 0x00000006
#define SQ_V_CMP_GE_F32__VI 0x00000046
#define SQ_V_CMP_GE_F64__SI__CI 0x00000026
#define SQ_V_CMP_GE_F64__VI 0x00000066
#define SQ_V_CMP_GE_I16__VI 0x000000a6
#define SQ_V_CMP_GE_I32__SI__CI 0x00000086
#define SQ_V_CMP_GE_I32__VI 0x000000c6
#define SQ_V_CMP_GE_I64__SI__CI 0x000000a6
#define SQ_V_CMP_GE_I64__VI 0x000000e6
#define SQ_V_CMP_GE_U16__VI 0x000000ae
#define SQ_V_CMP_GE_U32__SI__CI 0x000000c6
#define SQ_V_CMP_GE_U32__VI 0x000000ce
#define SQ_V_CMP_GE_U64__SI__CI 0x000000e6
#define SQ_V_CMP_GE_U64__VI 0x000000ee
#define SQ_V_CMP_GT_F16__VI 0x00000024
#define SQ_V_CMP_GT_F32__SI__CI 0x00000004
#define SQ_V_CMP_GT_F32__VI 0x00000044
#define SQ_V_CMP_GT_F64__SI__CI 0x00000024
#define SQ_V_CMP_GT_F64__VI 0x00000064
#define SQ_V_CMP_GT_I16__VI 0x000000a4
#define SQ_V_CMP_GT_I32__SI__CI 0x00000084
#define SQ_V_CMP_GT_I32__VI 0x000000c4
#define SQ_V_CMP_GT_I64__SI__CI 0x000000a4
#define SQ_V_CMP_GT_I64__VI 0x000000e4
#define SQ_V_CMP_GT_U16__VI 0x000000ac
#define SQ_V_CMP_GT_U32__SI__CI 0x000000c4
#define SQ_V_CMP_GT_U32__VI 0x000000cc
#define SQ_V_CMP_GT_U64__SI__CI 0x000000e4
#define SQ_V_CMP_GT_U64__VI 0x000000ec
#define SQ_V_CMP_LE_F16__VI 0x00000023
#define SQ_V_CMP_LE_F32__SI__CI 0x00000003
#define SQ_V_CMP_LE_F32__VI 0x00000043
#define SQ_V_CMP_LE_F64__SI__CI 0x00000023
#define SQ_V_CMP_LE_F64__VI 0x00000063
#define SQ_V_CMP_LE_I16__VI 0x000000a3
#define SQ_V_CMP_LE_I32__SI__CI 0x00000083
#define SQ_V_CMP_LE_I32__VI 0x000000c3
#define SQ_V_CMP_LE_I64__SI__CI 0x000000a3
#define SQ_V_CMP_LE_I64__VI 0x000000e3
#define SQ_V_CMP_LE_U16__VI 0x000000ab
#define SQ_V_CMP_LE_U32__SI__CI 0x000000c3
#define SQ_V_CMP_LE_U32__VI 0x000000cb
#define SQ_V_CMP_LE_U64__SI__CI 0x000000e3
#define SQ_V_CMP_LE_U64__VI 0x000000eb
#define SQ_V_CMP_LG_F16__VI 0x00000025
#define SQ_V_CMP_LG_F32__SI__CI 0x00000005
#define SQ_V_CMP_LG_F32__VI 0x00000045
#define SQ_V_CMP_LG_F64__SI__CI 0x00000025
#define SQ_V_CMP_LG_F64__VI 0x00000065
#define SQ_V_CMP_LT_F16__VI 0x00000021
#define SQ_V_CMP_LT_F32__SI__CI 0x00000001
#define SQ_V_CMP_LT_F32__VI 0x00000041
#define SQ_V_CMP_LT_F64__SI__CI 0x00000021
#define SQ_V_CMP_LT_F64__VI 0x00000061
#define SQ_V_CMP_LT_I16__VI 0x000000a1
#define SQ_V_CMP_LT_I32__SI__CI 0x00000081
#define SQ_V_CMP_LT_I32__VI 0x000000c1
#define SQ_V_CMP_LT_I64__SI__CI 0x000000a1
#define SQ_V_CMP_LT_I64__VI 0x000000e1
#define SQ_V_CMP_LT_U16__VI 0x000000a9
#define SQ_V_CMP_LT_U32__SI__CI 0x000000c1
#define SQ_V_CMP_LT_U32__VI 0x000000c9
#define SQ_V_CMP_LT_U64__SI__CI 0x000000e1
#define SQ_V_CMP_LT_U64__VI 0x000000e9
#define SQ_V_CMP_NEQ_F16__VI 0x0000002d
#define SQ_V_CMP_NEQ_F32__SI__CI 0x0000000d
#define SQ_V_CMP_NEQ_F32__VI 0x0000004d
#define SQ_V_CMP_NEQ_F64__SI__CI 0x0000002d
#define SQ_V_CMP_NEQ_F64__VI 0x0000006d
#define SQ_V_CMP_NE_I16__VI 0x000000a5
#define SQ_V_CMP_NE_I32__SI__CI 0x00000085
#define SQ_V_CMP_NE_I32__VI 0x000000c5
#define SQ_V_CMP_NE_I64__SI__CI 0x000000a5
#define SQ_V_CMP_NE_I64__VI 0x000000e5
#define SQ_V_CMP_NE_U16__VI 0x000000ad
#define SQ_V_CMP_NE_U32__SI__CI 0x000000c5
#define SQ_V_CMP_NE_U32__VI 0x000000cd
#define SQ_V_CMP_NE_U64__SI__CI 0x000000e5
#define SQ_V_CMP_NE_U64__VI 0x000000ed
#define SQ_V_CMP_NGE_F16__VI 0x00000029
#define SQ_V_CMP_NGE_F32__SI__CI 0x00000009
#define SQ_V_CMP_NGE_F32__VI 0x00000049
#define SQ_V_CMP_NGE_F64__SI__CI 0x00000029
#define SQ_V_CMP_NGE_F64__VI 0x00000069
#define SQ_V_CMP_NGT_F16__VI 0x0000002b
#define SQ_V_CMP_NGT_F32__SI__CI 0x0000000b
#define SQ_V_CMP_NGT_F32__VI 0x0000004b
#define SQ_V_CMP_NGT_F64__SI__CI 0x0000002b
#define SQ_V_CMP_NGT_F64__VI 0x0000006b
#define SQ_V_CMP_NLE_F16__VI 0x0000002c
#define SQ_V_CMP_NLE_F32__SI__CI 0x0000000c
#define SQ_V_CMP_NLE_F32__VI 0x0000004c
#define SQ_V_CMP_NLE_F64__SI__CI 0x0000002c
#define SQ_V_CMP_NLE_F64__VI 0x0000006c
#define SQ_V_CMP_NLG_F16__VI 0x0000002a
#define SQ_V_CMP_NLG_F32__SI__CI 0x0000000a
#define SQ_V_CMP_NLG_F32__VI 0x0000004a
#define SQ_V_CMP_NLG_F64__SI__CI 0x0000002a
#define SQ_V_CMP_NLG_F64__VI 0x0000006a
#define SQ_V_CMP_NLT_F16__VI 0x0000002e
#define SQ_V_CMP_NLT_F32__SI__CI 0x0000000e
#define SQ_V_CMP_NLT_F32__VI 0x0000004e
#define SQ_V_CMP_NLT_F64__SI__CI 0x0000002e
#define SQ_V_CMP_NLT_F64__VI 0x0000006e
#define SQ_V_CMP_O_F16__VI 0x00000027
#define SQ_V_CMP_O_F32__SI__CI 0x00000007
#define SQ_V_CMP_O_F32__VI 0x00000047
#define SQ_V_CMP_O_F64__SI__CI 0x00000027
#define SQ_V_CMP_O_F64__VI 0x00000067
#define SQ_V_CMP_TRU_F16__VI 0x0000002f
#define SQ_V_CMP_TRU_F32__SI__CI 0x0000000f
#define SQ_V_CMP_TRU_F32__VI 0x0000004f
#define SQ_V_CMP_TRU_F64__SI__CI 0x0000002f
#define SQ_V_CMP_TRU_F64__VI 0x0000006f
#define SQ_V_CMP_T_I16__VI 0x000000a7
#define SQ_V_CMP_T_I32__SI__CI 0x00000087
#define SQ_V_CMP_T_I32__VI 0x000000c7
#define SQ_V_CMP_T_I64__SI__CI 0x000000a7
#define SQ_V_CMP_T_I64__VI 0x000000e7
#define SQ_V_CMP_T_U16__VI 0x000000af
#define SQ_V_CMP_T_U32__SI__CI 0x000000c7
#define SQ_V_CMP_T_U32__VI 0x000000cf
#define SQ_V_CMP_T_U64__SI__CI 0x000000e7
#define SQ_V_CMP_T_U64__VI 0x000000ef
#define SQ_V_CMP_U_F16__VI 0x00000028
#define SQ_V_CMP_U_F32__SI__CI 0x00000008
#define SQ_V_CMP_U_F32__VI 0x00000048
#define SQ_V_CMP_U_F64__SI__CI 0x00000028
#define SQ_V_CMP_U_F64__VI 0x00000068
#define SQ_V_COS_F16__VI 0x0000004a
#define SQ_V_COS_F32__SI__CI 0x00000036
#define SQ_V_COS_F32__VI 0x0000002a
#define SQ_V_CUBEID_F32__SI__CI 0x00000144
#define SQ_V_CUBEID_F32__VI 0x000001c4
#define SQ_V_CUBEMA_F32__SI__CI 0x00000147
#define SQ_V_CUBEMA_F32__VI 0x000001c7
#define SQ_V_CUBESC_F32__SI__CI 0x00000145
#define SQ_V_CUBESC_F32__VI 0x000001c5
#define SQ_V_CUBETC_F32__SI__CI 0x00000146
#define SQ_V_CUBETC_F32__VI 0x000001c6
#define SQ_V_CVT_F16_I16__VI 0x0000003a
#define SQ_V_CVT_F16_U16__VI 0x00000039
#define SQ_V_CVT_I16_F16__VI 0x0000003c
#define SQ_V_CVT_NORM_I16_F16__VI 0x0000004d
#define SQ_V_CVT_NORM_U16_F16__VI 0x0000004e
#define SQ_V_CVT_PKACCUM_U8_F32__SI__CI 0x0000002c
#define SQ_V_CVT_PKACCUM_U8_F32__VI 0x000001f0
#define SQ_V_CVT_PKNORM_I16_F16__VI 0x00000299
#define SQ_V_CVT_PKNORM_I16_F32__SI__CI 0x0000002d
#define SQ_V_CVT_PKNORM_I16_F32__VI 0x00000294
#define SQ_V_CVT_PKNORM_U16_F16__VI 0x0000029a
#define SQ_V_CVT_PKNORM_U16_F32__SI__CI 0x0000002e
#define SQ_V_CVT_PKNORM_U16_F32__VI 0x00000295
#define SQ_V_CVT_PKRTZ_F16_F32__SI__CI 0x0000002f
#define SQ_V_CVT_PKRTZ_F16_F32__VI 0x00000296
#define SQ_V_CVT_PK_I16_I32__SI__CI 0x00000031
#define SQ_V_CVT_PK_I16_I32__VI 0x00000298
#define SQ_V_CVT_PK_U16_U32__SI__CI 0x00000030
#define SQ_V_CVT_PK_U16_U32__VI 0x00000297
#define SQ_V_CVT_PK_U8_F32__SI__CI 0x0000015e
#define SQ_V_CVT_PK_U8_F32__VI 0x000001dd
#define SQ_V_CVT_U16_F16__VI 0x0000003b
#define SQ_V_DIV_FIXUP_F16__VI 0x000001ef
#define SQ_V_DIV_FIXUP_F32__SI__CI 0x0000015f
#define SQ_V_DIV_FIXUP_F32__VI 0x000001de
#define SQ_V_DIV_FIXUP_F64__SI__CI 0x00000160
#define SQ_V_DIV_FIXUP_F64__VI 0x000001df
#define SQ_V_DIV_FMAS_F32__SI__CI 0x0000016f
#define SQ_V_DIV_FMAS_F32__VI 0x000001e2
#define SQ_V_DIV_FMAS_F64__SI__CI 0x00000170
#define SQ_V_DIV_FMAS_F64__VI 0x000001e3
#define SQ_V_DIV_SCALE_F32__SI__CI 0x0000016d
#define SQ_V_DIV_SCALE_F32__VI 0x000001e0
#define SQ_V_DIV_SCALE_F64__SI__CI 0x0000016e
#define SQ_V_DIV_SCALE_F64__VI 0x000001e1
#define SQ_V_EXP_F16__VI 0x00000041
#define SQ_V_EXP_F32__SI__CI 0x00000025
#define SQ_V_EXP_F32__VI 0x00000020
#define SQ_V_EXP_LEGACY_F32__VI 0x0000004b
#define SQ_V_FFBH_I32__SI__CI 0x0000003b
#define SQ_V_FFBH_I32__VI 0x0000002f
#define SQ_V_FFBH_U32__SI__CI 0x00000039
#define SQ_V_FFBH_U32__VI 0x0000002d
#define SQ_V_FFBL_B32__SI__CI 0x0000003a
#define SQ_V_FFBL_B32__VI 0x0000002e
#define SQ_V_FLOOR_F16__VI 0x00000044
#define SQ_V_FLOOR_F32__SI__CI 0x00000024
#define SQ_V_FLOOR_F32__VI 0x0000001f
#define SQ_V_FMA_F16__VI 0x000001ee
#define SQ_V_FMA_F32__SI__CI 0x0000014b
#define SQ_V_FMA_F32__VI 0x000001cb
#define SQ_V_FMA_F64__SI__CI 0x0000014c
#define SQ_V_FMA_F64__VI 0x000001cc
#define SQ_V_FRACT_F16__VI 0x00000048
#define SQ_V_FRACT_F32__SI__CI 0x00000020
#define SQ_V_FRACT_F32__VI 0x0000001b
#define SQ_V_FRACT_F64__SI__CI 0x0000003e
#define SQ_V_FRACT_F64__VI 0x00000032
#define SQ_V_FREXP_EXP_I16_F16__VI 0x00000043
#define SQ_V_FREXP_EXP_I32_F32__SI__CI 0x0000003f
#define SQ_V_FREXP_EXP_I32_F32__VI 0x00000033
#define SQ_V_FREXP_EXP_I32_F64__SI__CI 0x0000003c
#define SQ_V_FREXP_EXP_I32_F64__VI 0x00000030
#define SQ_V_FREXP_MANT_F16__VI 0x00000042
#define SQ_V_FREXP_MANT_F32__SI__CI 0x00000040
#define SQ_V_FREXP_MANT_F32__VI 0x00000034
#define SQ_V_FREXP_MANT_F64__SI__CI 0x0000003d
#define SQ_V_FREXP_MANT_F64__VI 0x00000031
#define SQ_V_INTERP_P1LL_F16__VI 0x00000274
#define SQ_V_INTERP_P1LV_F16__VI 0x00000275
#define SQ_V_INTERP_P2_F16__VI 0x00000276
#define SQ_V_INTRP_COUNT__VI 0x00000004
#define SQ_V_INTRP_OFFSET__VI 0x00000270
#define SQ_V_LDEXP_F16__VI 0x00000033
#define SQ_V_LDEXP_F32__SI__CI 0x0000002b
#define SQ_V_LDEXP_F32__VI 0x00000288
#define SQ_V_LDEXP_F64__SI__CI 0x00000168
#define SQ_V_LDEXP_F64__VI 0x00000284
#define SQ_V_LERP_U8__SI__CI 0x0000014d
#define SQ_V_LERP_U8__VI 0x000001cd
#define SQ_V_LOG_F16__VI 0x00000040
#define SQ_V_LOG_F32__SI__CI 0x00000027
#define SQ_V_LOG_F32__VI 0x00000021
#define SQ_V_LOG_LEGACY_F32__VI 0x0000004c
#define SQ_V_LSHLREV_B16__VI 0x0000002a
#define SQ_V_LSHLREV_B32__SI__CI 0x0000001a
#define SQ_V_LSHLREV_B32__VI 0x00000012
#define SQ_V_LSHLREV_B64__VI 0x0000028f
#define SQ_V_LSHRREV_B16__VI 0x0000002b
#define SQ_V_LSHRREV_B32__SI__CI 0x00000016
#define SQ_V_LSHRREV_B32__VI 0x00000010
#define SQ_V_LSHRREV_B64__VI 0x00000290
#define SQ_V_MAC_F16__VI 0x00000023
#define SQ_V_MAC_F32__SI__CI 0x0000001f
#define SQ_V_MAC_F32__VI 0x00000016
#define SQ_V_MAC_LEGACY_F32__SI__CI 0x00000006
#define SQ_V_MAC_LEGACY_F32__VI 0x0000028e
#define SQ_V_MADAK_F16__VI 0x00000025
#define SQ_V_MADAK_F32__SI__CI 0x00000021
#define SQ_V_MADAK_F32__VI 0x00000018
#define SQ_V_MADMK_F16__VI 0x00000024
#define SQ_V_MADMK_F32__SI__CI 0x00000020
#define SQ_V_MADMK_F32__VI 0x00000017
#define SQ_V_MAD_F16__VI 0x000001ea
#define SQ_V_MAD_F32__SI__CI 0x00000141
#define SQ_V_MAD_F32__VI 0x000001c1
#define SQ_V_MAD_I16__VI 0x000001ec
#define SQ_V_MAD_I32_I24__SI__CI 0x00000142
#define SQ_V_MAD_I32_I24__VI 0x000001c2
#define SQ_V_MAD_I64_I32__VI 0x000001e9
#define SQ_V_MAD_LEGACY_F32__SI__CI 0x00000140
#define SQ_V_MAD_LEGACY_F32__VI 0x000001c0
#define SQ_V_MAD_U16__VI 0x000001eb
#define SQ_V_MAD_U32_U24__SI__CI 0x00000143
#define SQ_V_MAD_U32_U24__VI 0x000001c3
#define SQ_V_MAD_U64_U32__VI 0x000001e8
#define SQ_V_MAX3_F32__SI__CI 0x00000154
#define SQ_V_MAX3_F32__VI 0x000001d3
#define SQ_V_MAX3_I32__SI__CI 0x00000155
#define SQ_V_MAX3_I32__VI 0x000001d4
#define SQ_V_MAX3_U32__SI__CI 0x00000156
#define SQ_V_MAX3_U32__VI 0x000001d5
#define SQ_V_MAX_F16__VI 0x0000002d
#define SQ_V_MAX_F32__SI__CI 0x00000010
#define SQ_V_MAX_F32__VI 0x0000000b
#define SQ_V_MAX_F64__SI__CI 0x00000167
#define SQ_V_MAX_F64__VI 0x00000283
#define SQ_V_MAX_I16__VI 0x00000030
#define SQ_V_MAX_I32__SI__CI 0x00000012
#define SQ_V_MAX_I32__VI 0x0000000d
#define SQ_V_MAX_U16__VI 0x0000002f
#define SQ_V_MAX_U32__SI__CI 0x00000014
#define SQ_V_MAX_U32__VI 0x0000000f
#define SQ_V_MBCNT_HI_U32_B32__SI__CI 0x00000024
#define SQ_V_MBCNT_HI_U32_B32__VI 0x0000028d
#define SQ_V_MBCNT_LO_U32_B32__SI__CI 0x00000023
#define SQ_V_MBCNT_LO_U32_B32__VI 0x0000028c
#define SQ_V_MED3_F32__SI__CI 0x00000157
#define SQ_V_MED3_F32__VI 0x000001d6
#define SQ_V_MED3_I32__SI__CI 0x00000158
#define SQ_V_MED3_I32__VI 0x000001d7
#define SQ_V_MED3_U32__SI__CI 0x00000159
#define SQ_V_MED3_U32__VI 0x000001d8
#define SQ_V_MIN3_F32__SI__CI 0x00000151
#define SQ_V_MIN3_F32__VI 0x000001d0
#define SQ_V_MIN3_I32__SI__CI 0x00000152
#define SQ_V_MIN3_I32__VI 0x000001d1
#define SQ_V_MIN3_U32__SI__CI 0x00000153
#define SQ_V_MIN3_U32__VI 0x000001d2
#define SQ_V_MIN_F16__VI 0x0000002e
#define SQ_V_MIN_F32__SI__CI 0x0000000f
#define SQ_V_MIN_F32__VI 0x0000000a
#define SQ_V_MIN_F64__SI__CI 0x00000166
#define SQ_V_MIN_F64__VI 0x00000282
#define SQ_V_MIN_I16__VI 0x00000032
#define SQ_V_MIN_I32__SI__CI 0x00000011
#define SQ_V_MIN_I32__VI 0x0000000c
#define SQ_V_MIN_U16__VI 0x00000031
#define SQ_V_MIN_U32__SI__CI 0x00000013
#define SQ_V_MIN_U32__VI 0x0000000e
#define SQ_V_MOVRELD_B32__SI__CI 0x00000042
#define SQ_V_MOVRELD_B32__VI 0x00000036
#define SQ_V_MOVRELSD_B32__SI__CI 0x00000044
#define SQ_V_MOVRELSD_B32__VI 0x00000038
#define SQ_V_MOVRELS_B32__SI__CI 0x00000043
#define SQ_V_MOVRELS_B32__VI 0x00000037
#define SQ_V_MQSAD_PK_U16_U8__VI 0x000001e6
#define SQ_V_MQSAD_U32_U8__VI 0x000001e7
#define SQ_V_MSAD_U8__SI__CI 0x00000171
#define SQ_V_MSAD_U8__VI 0x000001e4
#define SQ_V_MUL_F16__VI 0x00000022
#define SQ_V_MUL_F32__SI__CI 0x00000008
#define SQ_V_MUL_F32__VI 0x00000005
#define SQ_V_MUL_F64__SI__CI 0x00000165
#define SQ_V_MUL_F64__VI 0x00000281
#define SQ_V_MUL_HI_I32__SI__CI 0x0000016c
#define SQ_V_MUL_HI_I32__VI 0x00000287
#define SQ_V_MUL_HI_I32_I24__SI__CI 0x0000000a
#define SQ_V_MUL_HI_I32_I24__VI 0x00000007
#define SQ_V_MUL_HI_U32__SI__CI 0x0000016a
#define SQ_V_MUL_HI_U32__VI 0x00000286
#define SQ_V_MUL_HI_U32_U24__SI__CI 0x0000000c
#define SQ_V_MUL_HI_U32_U24__VI 0x00000009
#define SQ_V_MUL_I32_I24__SI__CI 0x00000009
#define SQ_V_MUL_I32_I24__VI 0x00000006
#define SQ_V_MUL_LEGACY_F32__SI__CI 0x00000007
#define SQ_V_MUL_LEGACY_F32__VI 0x00000004
#define SQ_V_MUL_LO_U16__VI 0x00000029
#define SQ_V_MUL_LO_U32__SI__CI 0x00000169
#define SQ_V_MUL_LO_U32__VI 0x00000285
#define SQ_V_MUL_U32_U24__SI__CI 0x0000000b
#define SQ_V_MUL_U32_U24__VI 0x00000008
#define SQ_V_NOT_B32__SI__CI 0x00000037
#define SQ_V_NOT_B32__VI 0x0000002b
#define SQ_V_OP1_OFFSET__SI__CI 0x00000180
#define SQ_V_OP1_OFFSET__VI 0x00000140
#define SQ_V_OP3_2IN_COUNT__VI 0x00000080
#define SQ_V_OP3_2IN_OFFSET__VI 0x00000280
#define SQ_V_OP3_3IN_COUNT__VI 0x000000b0
#define SQ_V_OP3_3IN_OFFSET__VI 0x000001c0
#define SQ_V_OP3_INTRP_COUNT__VI 0x0000000c
#define SQ_V_OP3_INTRP_OFFSET__VI 0x00000274
#define SQ_V_OR_B32__SI__CI 0x0000001c
#define SQ_V_OR_B32__VI 0x00000014
#define SQ_V_PERM_B32__VI 0x000001ed
#define SQ_V_QSAD_PK_U16_U8__VI 0x000001e5
#define SQ_V_RCP_F16__VI 0x0000003d
#define SQ_V_RCP_F32__SI__CI 0x0000002a
#define SQ_V_RCP_F32__VI 0x00000022
#define SQ_V_RCP_F64__SI__CI 0x0000002f
#define SQ_V_RCP_F64__VI 0x00000025
#define SQ_V_RCP_IFLAG_F32__SI__CI 0x0000002b
#define SQ_V_RCP_IFLAG_F32__VI 0x00000023
#define SQ_V_READLANE_B32__SI__CI 0x00000001
#define SQ_V_READLANE_B32__VI 0x00000289
#define SQ_V_RNDNE_F16__VI 0x00000047
#define SQ_V_RNDNE_F32__SI__CI 0x00000023
#define SQ_V_RNDNE_F32__VI 0x0000001e
#define SQ_V_RSQ_F16__VI 0x0000003f
#define SQ_V_RSQ_F32__SI__CI 0x0000002e
#define SQ_V_RSQ_F32__VI 0x00000024
#define SQ_V_RSQ_F64__SI__CI 0x00000031
#define SQ_V_RSQ_F64__VI 0x00000026
#define SQ_V_SAD_HI_U8__SI__CI 0x0000015b
#define SQ_V_SAD_HI_U8__VI 0x000001da
#define SQ_V_SAD_U16__SI__CI 0x0000015c
#define SQ_V_SAD_U16__VI 0x000001db
#define SQ_V_SAD_U32__SI__CI 0x0000015d
#define SQ_V_SAD_U32__VI 0x000001dc
#define SQ_V_SAD_U8__SI__CI 0x0000015a
#define SQ_V_SAD_U8__VI 0x000001d9
#define SQ_V_SIN_F16__VI 0x00000049
#define SQ_V_SIN_F32__SI__CI 0x00000035
#define SQ_V_SIN_F32__VI 0x00000029
#define SQ_V_SQRT_F16__VI 0x0000003e
#define SQ_V_SQRT_F32__SI__CI 0x00000033
#define SQ_V_SQRT_F32__VI 0x00000027
#define SQ_V_SQRT_F64__SI__CI 0x00000034
#define SQ_V_SQRT_F64__VI 0x00000028
#define SQ_V_SUBBREV_U32__SI__CI 0x0000002a
#define SQ_V_SUBBREV_U32__VI 0x0000001e
#define SQ_V_SUBB_U32__SI__CI 0x00000029
#define SQ_V_SUBB_U32__VI 0x0000001d
#define SQ_V_SUBREV_F16__VI 0x00000021
#define SQ_V_SUBREV_F32__SI__CI 0x00000005
#define SQ_V_SUBREV_F32__VI 0x00000003
#define SQ_V_SUBREV_U16__VI 0x00000028
#define SQ_V_SUBREV_U32__VI 0x0000001b
#define SQ_V_SUB_F16__VI 0x00000020
#define SQ_V_SUB_F32__SI__CI 0x00000004
#define SQ_V_SUB_F32__VI 0x00000002
#define SQ_V_SUB_U16__VI 0x00000027
#define SQ_V_SUB_U32__VI 0x0000001a
#define SQ_V_TRIG_PREOP_F64__SI__CI 0x00000174
#define SQ_V_TRIG_PREOP_F64__VI 0x00000292
#define SQ_V_TRUNC_F16__VI 0x00000046
#define SQ_V_TRUNC_F32__SI__CI 0x00000021
#define SQ_V_TRUNC_F32__VI 0x0000001c
#define SQ_V_WRITELANE_B32__SI__CI 0x00000002
#define SQ_V_WRITELANE_B32__VI 0x0000028a
#define SQ_V_XOR_B32__SI__CI 0x0000001d
#define SQ_V_XOR_B32__VI 0x00000015
#define SQ_XLATE_VOP3_TO_VINTRP_COUNT__VI 0x00000004
#define SQ_XLATE_VOP3_TO_VINTRP_OFFSET__VI 0x00000270
#define SQ_XLATE_VOP3_TO_VOP1_COUNT__VI 0x00000080
#define SQ_XLATE_VOP3_TO_VOP1_OFFSET__VI 0x00000140
#define SQ_XLATE_VOP3_TO_VOP2_COUNT__VI 0x00000040
#define SQ_XLATE_VOP3_TO_VOP2_OFFSET__VI 0x00000100
#define SQ_XLATE_VOP3_TO_VOPC_COUNT__VI 0x00000100
#define SQ_XLATE_VOP3_TO_VOPC_OFFSET__VI 0x00000000
#define SQ_XNACK_MASK_HI__VI 0x00000069
#define SQ_XNACK_MASK_LO__VI 0x00000068

#endif  // SI_CI_VI_merged_sq_uc_reg_HEADER
#ifndef __VI___SI__CI_sq_uc_reg_h
#define __VI___SI__CI_sq_uc_reg_h


// *
// *
// *	 (c) 2014 AMD Inc.  (unpublished)
// *
// *	 All rights reserved.  This notice is intended as a precaution against
// *	 inadvertent publication and does not imply publication or any waiver
// *	 of confidentiality.  The year included in the foregoing notice is the
// *	 year of creation of the work.
//
//
#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ds_0_t__SI__CI {
  unsigned int offset0 : 8;
  unsigned int offset1 : 8;
  unsigned int : 1;
  unsigned int gds : 1;
  unsigned int op : 8;
  unsigned int encoding : 6;
} sq_ds_0_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ds_0_t__SI__CI {
  unsigned int encoding : 6;
  unsigned int op : 8;
  unsigned int gds : 1;
  unsigned int : 1;
  unsigned int offset1 : 8;
  unsigned int offset0 : 8;
} sq_ds_0_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_ds_0_t__SI__CI f;
} sq_ds_0_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ds_0_t__VI {
  unsigned int offset0 : 8;
  unsigned int offset1 : 8;
  unsigned int gds : 1;
  unsigned int op : 8;
  unsigned int : 1;
  unsigned int encoding : 6;
} sq_ds_0_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ds_0_t__VI {
  unsigned int encoding : 6;
  unsigned int : 1;
  unsigned int op : 8;
  unsigned int gds : 1;
  unsigned int offset1 : 8;
  unsigned int offset0 : 8;
} sq_ds_0_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_ds_0_t__VI f;
} sq_ds_0_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ds_1_t {
  unsigned int addr : 8;
  unsigned int data0 : 8;
  unsigned int data1 : 8;
  unsigned int vdst : 8;
} sq_ds_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ds_1_t {
  unsigned int vdst : 8;
  unsigned int data1 : 8;
  unsigned int data0 : 8;
  unsigned int addr : 8;
} sq_ds_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_ds_1_t f;
} sq_ds_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_exp_0_t {
  unsigned int en : 4;
  unsigned int tgt : 6;
  unsigned int compr : 1;
  unsigned int done : 1;
  unsigned int vm : 1;
  unsigned int : 13;
  unsigned int encoding : 6;
} sq_exp_0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_exp_0_t {
  unsigned int encoding : 6;
  unsigned int : 13;
  unsigned int vm : 1;
  unsigned int done : 1;
  unsigned int compr : 1;
  unsigned int tgt : 6;
  unsigned int en : 4;
} sq_exp_0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_exp_0_t f;
} sq_exp_0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_exp_1_t {
  unsigned int vsrc0 : 8;
  unsigned int vsrc1 : 8;
  unsigned int vsrc2 : 8;
  unsigned int vsrc3 : 8;
} sq_exp_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_exp_1_t {
  unsigned int vsrc3 : 8;
  unsigned int vsrc2 : 8;
  unsigned int vsrc1 : 8;
  unsigned int vsrc0 : 8;
} sq_exp_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_exp_1_t f;
} sq_exp_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_flat_0_t {
  unsigned int : 16;
  unsigned int glc : 1;
  unsigned int slc : 1;
  unsigned int op : 7;
  unsigned int : 1;
  unsigned int encoding : 6;
} sq_flat_0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_flat_0_t {
  unsigned int encoding : 6;
  unsigned int : 1;
  unsigned int op : 7;
  unsigned int slc : 1;
  unsigned int glc : 1;
  unsigned int : 16;
} sq_flat_0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_flat_0_t f;
} sq_flat_0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_flat_1_t {
  unsigned int addr : 8;
  unsigned int data : 8;
  unsigned int : 7;
  unsigned int tfe : 1;
  unsigned int vdst : 8;
} sq_flat_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_flat_1_t {
  unsigned int vdst : 8;
  unsigned int tfe : 1;
  unsigned int : 7;
  unsigned int data : 8;
  unsigned int addr : 8;
} sq_flat_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_flat_1_t f;
} sq_flat_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_inst_t { unsigned int encoding : 32; } sq_inst_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_inst_t { unsigned int encoding : 32; } sq_inst_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_inst_t f;
} sq_inst_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mimg_0_t {
  unsigned int : 8;
  unsigned int dmask : 4;
  unsigned int unorm : 1;
  unsigned int glc : 1;
  unsigned int da : 1;
  unsigned int r128 : 1;
  unsigned int tfe : 1;
  unsigned int lwe : 1;
  unsigned int op : 7;
  unsigned int slc : 1;
  unsigned int encoding : 6;
} sq_mimg_0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mimg_0_t {
  unsigned int encoding : 6;
  unsigned int slc : 1;
  unsigned int op : 7;
  unsigned int lwe : 1;
  unsigned int tfe : 1;
  unsigned int r128 : 1;
  unsigned int da : 1;
  unsigned int glc : 1;
  unsigned int unorm : 1;
  unsigned int dmask : 4;
  unsigned int : 8;
} sq_mimg_0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_mimg_0_t f;
} sq_mimg_0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mimg_1_t {
  unsigned int vaddr : 8;
  unsigned int vdata : 8;
  unsigned int srsrc : 5;
  unsigned int ssamp : 5;
  unsigned int : 5;
  unsigned int d16__VI : 1;
} sq_mimg_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mimg_1_t {
  unsigned int d16__VI : 1;
  unsigned int : 5;
  unsigned int ssamp : 5;
  unsigned int srsrc : 5;
  unsigned int vdata : 8;
  unsigned int vaddr : 8;
} sq_mimg_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_mimg_1_t f;
} sq_mimg_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mtbuf_0_t__SI__CI {
  unsigned int offset : 12;
  unsigned int offen : 1;
  unsigned int idxen : 1;
  unsigned int glc : 1;
  unsigned int addr64 : 1;
  unsigned int op : 3;
  unsigned int dfmt : 4;
  unsigned int nfmt : 3;
  unsigned int encoding : 6;
} sq_mtbuf_0_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mtbuf_0_t__SI__CI {
  unsigned int encoding : 6;
  unsigned int nfmt : 3;
  unsigned int dfmt : 4;
  unsigned int op : 3;
  unsigned int addr64 : 1;
  unsigned int glc : 1;
  unsigned int idxen : 1;
  unsigned int offen : 1;
  unsigned int offset : 12;
} sq_mtbuf_0_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_mtbuf_0_t__SI__CI f;
} sq_mtbuf_0_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mtbuf_0_t__VI {
  unsigned int offset : 12;
  unsigned int offen : 1;
  unsigned int idxen : 1;
  unsigned int glc : 1;
  unsigned int op : 4;
  unsigned int dfmt : 4;
  unsigned int nfmt : 3;
  unsigned int encoding : 6;
} sq_mtbuf_0_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mtbuf_0_t__VI {
  unsigned int encoding : 6;
  unsigned int nfmt : 3;
  unsigned int dfmt : 4;
  unsigned int op : 4;
  unsigned int glc : 1;
  unsigned int idxen : 1;
  unsigned int offen : 1;
  unsigned int offset : 12;
} sq_mtbuf_0_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_mtbuf_0_t__VI f;
} sq_mtbuf_0_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mtbuf_1_t {
  unsigned int vaddr : 8;
  unsigned int vdata : 8;
  unsigned int srsrc : 5;
  unsigned int : 1;
  unsigned int slc : 1;
  unsigned int tfe : 1;
  unsigned int soffset : 8;
} sq_mtbuf_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mtbuf_1_t {
  unsigned int soffset : 8;
  unsigned int tfe : 1;
  unsigned int slc : 1;
  unsigned int : 1;
  unsigned int srsrc : 5;
  unsigned int vdata : 8;
  unsigned int vaddr : 8;
} sq_mtbuf_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_mtbuf_1_t f;
} sq_mtbuf_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mubuf_0_t {
  unsigned int offset : 12;
  unsigned int offen : 1;
  unsigned int idxen : 1;
  unsigned int glc : 1;
  unsigned int addr64__SI__CI : 1;
  unsigned int lds : 1;
  unsigned int slc__VI : 1;
  unsigned int op : 7;
  unsigned int : 1;
  unsigned int encoding : 6;
} sq_mubuf_0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mubuf_0_t {
  unsigned int encoding : 6;
  unsigned int : 1;
  unsigned int op : 7;
  unsigned int slc__VI : 1;
  unsigned int lds : 1;
  unsigned int addr64__SI__CI : 1;
  unsigned int glc : 1;
  unsigned int idxen : 1;
  unsigned int offen : 1;
  unsigned int offset : 12;
} sq_mubuf_0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_mubuf_0_t f;
} sq_mubuf_0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mubuf_1_t__SI__CI {
  unsigned int vaddr : 8;
  unsigned int vdata : 8;
  unsigned int srsrc : 5;
  unsigned int : 1;
  unsigned int slc : 1;
  unsigned int tfe : 1;
  unsigned int soffset : 8;
} sq_mubuf_1_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mubuf_1_t__SI__CI {
  unsigned int soffset : 8;
  unsigned int tfe : 1;
  unsigned int slc : 1;
  unsigned int : 1;
  unsigned int srsrc : 5;
  unsigned int vdata : 8;
  unsigned int vaddr : 8;
} sq_mubuf_1_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_mubuf_1_t__SI__CI f;
} sq_mubuf_1_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_mubuf_1_t__VI {
  unsigned int vaddr : 8;
  unsigned int vdata : 8;
  unsigned int srsrc : 5;
  unsigned int : 2;
  unsigned int tfe : 1;
  unsigned int soffset : 8;
} sq_mubuf_1_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_mubuf_1_t__VI {
  unsigned int soffset : 8;
  unsigned int tfe : 1;
  unsigned int : 2;
  unsigned int srsrc : 5;
  unsigned int vdata : 8;
  unsigned int vaddr : 8;
} sq_mubuf_1_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_mubuf_1_t__VI f;
} sq_mubuf_1_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_smrd_t__SI__CI {
  unsigned int offset : 8;
  unsigned int imm : 1;
  unsigned int sbase : 6;
  unsigned int sdst : 7;
  unsigned int op : 5;
  unsigned int encoding : 5;
} sq_smrd_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_smrd_t__SI__CI {
  unsigned int encoding : 5;
  unsigned int op : 5;
  unsigned int sdst : 7;
  unsigned int sbase : 6;
  unsigned int imm : 1;
  unsigned int offset : 8;
} sq_smrd_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_smrd_t__SI__CI f;
} sq_smrd_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_sop1_t {
  unsigned int ssrc0 : 8;
  unsigned int op : 8;
  unsigned int sdst : 7;
  unsigned int encoding : 9;
} sq_sop1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_sop1_t {
  unsigned int encoding : 9;
  unsigned int sdst : 7;
  unsigned int op : 8;
  unsigned int ssrc0 : 8;
} sq_sop1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_sop1_t f;
} sq_sop1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_sop2_t {
  unsigned int ssrc0 : 8;
  unsigned int ssrc1 : 8;
  unsigned int sdst : 7;
  unsigned int op : 7;
  unsigned int encoding : 2;
} sq_sop2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_sop2_t {
  unsigned int encoding : 2;
  unsigned int op : 7;
  unsigned int sdst : 7;
  unsigned int ssrc1 : 8;
  unsigned int ssrc0 : 8;
} sq_sop2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_sop2_t f;
} sq_sop2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_sopc_t {
  unsigned int ssrc0 : 8;
  unsigned int ssrc1 : 8;
  unsigned int op : 7;
  unsigned int encoding : 9;
} sq_sopc_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_sopc_t {
  unsigned int encoding : 9;
  unsigned int op : 7;
  unsigned int ssrc1 : 8;
  unsigned int ssrc0 : 8;
} sq_sopc_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_sopc_t f;
} sq_sopc_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_sopk_t {
  unsigned int simm16 : 16;
  unsigned int sdst : 7;
  unsigned int op : 5;
  unsigned int encoding : 4;
} sq_sopk_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_sopk_t {
  unsigned int encoding : 4;
  unsigned int op : 5;
  unsigned int sdst : 7;
  unsigned int simm16 : 16;
} sq_sopk_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_sopk_t f;
} sq_sopk_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_sopp_t {
  unsigned int simm16 : 16;
  unsigned int op : 7;
  unsigned int encoding : 9;
} sq_sopp_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_sopp_t {
  unsigned int encoding : 9;
  unsigned int op : 7;
  unsigned int simm16 : 16;
} sq_sopp_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_sopp_t f;
} sq_sopp_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vintrp_t {
  unsigned int vsrc : 8;
  unsigned int attrchan : 2;
  unsigned int attr : 6;
  unsigned int op : 2;
  unsigned int vdst : 8;
  unsigned int encoding : 6;
} sq_vintrp_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vintrp_t {
  unsigned int encoding : 6;
  unsigned int vdst : 8;
  unsigned int op : 2;
  unsigned int attr : 6;
  unsigned int attrchan : 2;
  unsigned int vsrc : 8;
} sq_vintrp_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_vintrp_t f;
} sq_vintrp_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop1_t {
  unsigned int src0 : 9;
  unsigned int op : 8;
  unsigned int vdst : 8;
  unsigned int encoding : 7;
} sq_vop1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop1_t {
  unsigned int encoding : 7;
  unsigned int vdst : 8;
  unsigned int op : 8;
  unsigned int src0 : 9;
} sq_vop1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop1_t f;
} sq_vop1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop2_t {
  unsigned int src0 : 9;
  unsigned int vsrc1 : 8;
  unsigned int vdst : 8;
  unsigned int op : 6;
  unsigned int encoding : 1;
} sq_vop2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop2_t {
  unsigned int encoding : 1;
  unsigned int op : 6;
  unsigned int vdst : 8;
  unsigned int vsrc1 : 8;
  unsigned int src0 : 9;
} sq_vop2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop2_t f;
} sq_vop2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop3_0_sdst_enc_t__SI__CI {
  unsigned int vdst : 8;
  unsigned int sdst : 7;
  unsigned int : 2;
  unsigned int op : 9;
  unsigned int encoding : 6;
} sq_vop3_0_sdst_enc_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop3_0_sdst_enc_t__SI__CI {
  unsigned int encoding : 6;
  unsigned int op : 9;
  unsigned int : 2;
  unsigned int sdst : 7;
  unsigned int vdst : 8;
} sq_vop3_0_sdst_enc_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop3_0_sdst_enc_t__SI__CI f;
} sq_vop3_0_sdst_enc_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop3_0_sdst_enc_t__VI {
  unsigned int vdst : 8;
  unsigned int sdst : 7;
  unsigned int clamp : 1;
  unsigned int op : 10;
  unsigned int encoding : 6;
} sq_vop3_0_sdst_enc_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop3_0_sdst_enc_t__VI {
  unsigned int encoding : 6;
  unsigned int op : 10;
  unsigned int clamp : 1;
  unsigned int sdst : 7;
  unsigned int vdst : 8;
} sq_vop3_0_sdst_enc_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop3_0_sdst_enc_t__VI f;
} sq_vop3_0_sdst_enc_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop3_0_t__SI__CI {
  unsigned int vdst : 8;
  unsigned int abs : 3;
  unsigned int clamp : 1;
  unsigned int : 5;
  unsigned int op : 9;
  unsigned int encoding : 6;
} sq_vop3_0_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop3_0_t__SI__CI {
  unsigned int encoding : 6;
  unsigned int op : 9;
  unsigned int : 5;
  unsigned int clamp : 1;
  unsigned int abs : 3;
  unsigned int vdst : 8;
} sq_vop3_0_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop3_0_t__SI__CI f;
} sq_vop3_0_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop3_0_t__VI {
  unsigned int vdst : 8;
  unsigned int abs : 3;
  unsigned int : 4;
  unsigned int clamp : 1;
  unsigned int op : 10;
  unsigned int encoding : 6;
} sq_vop3_0_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop3_0_t__VI {
  unsigned int encoding : 6;
  unsigned int op : 10;
  unsigned int clamp : 1;
  unsigned int : 4;
  unsigned int abs : 3;
  unsigned int vdst : 8;
} sq_vop3_0_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop3_0_t__VI f;
} sq_vop3_0_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop3_1_t {
  unsigned int src0 : 9;
  unsigned int src1 : 9;
  unsigned int src2 : 9;
  unsigned int omod : 2;
  unsigned int neg : 3;
} sq_vop3_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop3_1_t {
  unsigned int neg : 3;
  unsigned int omod : 2;
  unsigned int src2 : 9;
  unsigned int src1 : 9;
  unsigned int src0 : 9;
} sq_vop3_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop3_1_t f;
} sq_vop3_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vopc_t {
  unsigned int src0 : 9;
  unsigned int vsrc1 : 8;
  unsigned int op : 8;
  unsigned int encoding : 7;
} sq_vopc_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vopc_t {
  unsigned int encoding : 7;
  unsigned int op : 8;
  unsigned int vsrc1 : 8;
  unsigned int src0 : 9;
} sq_vopc_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_vopc_t f;
} sq_vopc_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_smem_0_t {
  unsigned int sbase : 6;
  unsigned int sdata : 7;
  unsigned int : 3;
  unsigned int glc : 1;
  unsigned int imm : 1;
  unsigned int op : 8;
  unsigned int encoding : 6;
} sq_smem_0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_smem_0_t {
  unsigned int encoding : 6;
  unsigned int op : 8;
  unsigned int imm : 1;
  unsigned int glc : 1;
  unsigned int : 3;
  unsigned int sdata : 7;
  unsigned int sbase : 6;
} sq_smem_0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_smem_0_t f;
} sq_smem_0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_smem_1_t {
  unsigned int offset : 20;
  unsigned int : 12;
} sq_smem_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_smem_1_t {
  unsigned int : 12;
  unsigned int offset : 20;
} sq_smem_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_smem_1_t f;
} sq_smem_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop_dpp_t {
  unsigned int src0 : 8;
  unsigned int dpp_ctrl : 9;
  unsigned int : 2;
  unsigned int bound_ctrl : 1;
  unsigned int src0_neg : 1;
  unsigned int src0_abs : 1;
  unsigned int src1_neg : 1;
  unsigned int src1_abs : 1;
  unsigned int bank_mask : 4;
  unsigned int row_mask : 4;
} sq_vop_dpp_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop_dpp_t {
  unsigned int row_mask : 4;
  unsigned int bank_mask : 4;
  unsigned int src1_abs : 1;
  unsigned int src1_neg : 1;
  unsigned int src0_abs : 1;
  unsigned int src0_neg : 1;
  unsigned int bound_ctrl : 1;
  unsigned int : 2;
  unsigned int dpp_ctrl : 9;
  unsigned int src0 : 8;
} sq_vop_dpp_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop_dpp_t f;
} sq_vop_dpp_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_vop_sdwa_t {
  unsigned int src0 : 8;
  unsigned int dst_sel : 3;
  unsigned int dst_unused : 2;
  unsigned int clamp : 1;
  unsigned int : 2;
  unsigned int src0_sel : 3;
  unsigned int src0_sext : 1;
  unsigned int src0_neg : 1;
  unsigned int src0_abs : 1;
  unsigned int : 2;
  unsigned int src1_sel : 3;
  unsigned int src1_sext : 1;
  unsigned int src1_neg : 1;
  unsigned int src1_abs : 1;
  unsigned int : 2;
} sq_vop_sdwa_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_vop_sdwa_t {
  unsigned int : 2;
  unsigned int src1_abs : 1;
  unsigned int src1_neg : 1;
  unsigned int src1_sext : 1;
  unsigned int src1_sel : 3;
  unsigned int : 2;
  unsigned int src0_abs : 1;
  unsigned int src0_neg : 1;
  unsigned int src0_sext : 1;
  unsigned int src0_sel : 3;
  unsigned int : 2;
  unsigned int clamp : 1;
  unsigned int dst_unused : 2;
  unsigned int dst_sel : 3;
  unsigned int src0 : 8;
} sq_vop_sdwa_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_vop_sdwa_t f;
} sq_vop_sdwa_u;


#endif  // __VI___SI__CI_sq_uc_reg_h

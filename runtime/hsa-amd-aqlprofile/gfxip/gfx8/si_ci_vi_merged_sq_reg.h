#if !defined SI_CI_VI_merged_sq_reg_HEADER
#define SI_CI_VI_merged_sq_reg_HEADER


//
// Source merge files:
//      E:\MergedHeaders\SI+CI+Amur\Original\SICI/si_ci_merged_sq_reg.h
//      E:\MergedHeaders\SI+CI+Amur\Original\Amur/vi_sq_reg.h
// *
// *
// *	 (c) 2014 AMD Inc.  (unpublished)
// *
// *	 All rights reserved.  This notice is intended as a precaution against
// *	 inadvertent publication and does not imply publication or any waiver
// *	 of confidentiality.  The year included in the foregoing notice is the
// *	 year of creation of the work.
//
//
#define CC_SQC_BANK_DISABLE_DEFAULT 0x00000000
#define CC_SQC_BANK_DISABLE_REG_SIZE 32
#define CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK 0x000f0000
#define CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SHIFT 16
#define CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SIZE 4
#define CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK 0x00f00000
#define CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SHIFT 20
#define CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SIZE 4
#define CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK__CI__VI 0x0f000000
#define CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SHIFT__CI__VI 24
#define CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SIZE__CI__VI 4
#define CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK__CI__VI 0xf0000000
#define CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SHIFT__CI__VI 28
#define CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SIZE__CI__VI 4
#define CC_SQC_BANK_DISABLE_WRITE_DIS_MASK 0x00000001
#define CC_SQC_BANK_DISABLE_WRITE_DIS_SHIFT 0x00000000
#define CC_SQC_BANK_DISABLE_WRITE_DIS_SIZE 1
#define CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_MASK 0x40000000
#define CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_SHIFT 30
#define CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_SIZE 1
#define CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_MASK 0x00000ff0
#define CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_SHIFT 4
#define CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_SIZE 8
#define CGTT_SQG_CLK_CTRL_ON_DELAY_MASK 0x0000000f
#define CGTT_SQG_CLK_CTRL_ON_DELAY_SHIFT 0x00000000
#define CGTT_SQG_CLK_CTRL_ON_DELAY_SIZE 4
#define CGTT_SQG_CLK_CTRL_REG_OVERRIDE_MASK 0x80000000
#define CGTT_SQG_CLK_CTRL_REG_OVERRIDE_SHIFT 31
#define CGTT_SQG_CLK_CTRL_REG_OVERRIDE_SIZE 1
#define CGTT_SQG_CLK_CTRL_REG_SIZE 32
#define CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_MASK 0x40000000
#define CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_SHIFT 30
#define CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_SIZE 1
#define CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_MASK 0x00000ff0
#define CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_SHIFT 4
#define CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_SIZE 8
#define CGTT_SQ_CLK_CTRL_ON_DELAY_MASK 0x0000000f
#define CGTT_SQ_CLK_CTRL_ON_DELAY_SHIFT 0x00000000
#define CGTT_SQ_CLK_CTRL_ON_DELAY_SIZE 4
#define CGTT_SQ_CLK_CTRL_REG_OVERRIDE_MASK 0x80000000
#define CGTT_SQ_CLK_CTRL_REG_OVERRIDE_SHIFT 31
#define CGTT_SQ_CLK_CTRL_REG_OVERRIDE_SIZE 1
#define CGTT_SQ_CLK_CTRL_REG_SIZE 32
#define INST_ID_ECC_INTERRUPT_MSG__CI__VI 0xfffffff0
#define INST_ID_HOST_REG_TRAP_MSG__CI__VI 0xfffffffe
#define INST_ID_HW_TRAP__CI__VI 0xfffffff2
#define INST_ID_KILL_SEQ__CI__VI 0xfffffff3
#define INST_ID_TTRACE_NEW_PC_MSG__CI__VI 0xfffffff1
#define SH_MEM_APE1_BASE_BASE_MASK__CI__VI 0xffffffff
#define SH_MEM_APE1_BASE_BASE_SHIFT__CI__VI 0x00000000
#define SH_MEM_APE1_BASE_BASE_SIZE__CI__VI 32
#define SH_MEM_APE1_BASE_DEFAULT__CI__VI 0x00000001
#define SH_MEM_APE1_BASE_REG_SIZE__CI__VI 32
#define SH_MEM_APE1_LIMIT_DEFAULT__CI__VI 0x00000000
#define SH_MEM_APE1_LIMIT_LIMIT_MASK__CI__VI 0xffffffff
#define SH_MEM_APE1_LIMIT_LIMIT_SHIFT__CI__VI 0x00000000
#define SH_MEM_APE1_LIMIT_LIMIT_SIZE__CI__VI 32
#define SH_MEM_APE1_LIMIT_REG_SIZE__CI__VI 32
#define SH_MEM_BASES_DEFAULT__CI__VI 0x00000000
#define SH_MEM_BASES_PRIVATE_BASE_MASK__CI__VI 0x0000ffff
#define SH_MEM_BASES_PRIVATE_BASE_SHIFT__CI__VI 0x00000000
#define SH_MEM_BASES_PRIVATE_BASE_SIZE__CI__VI 16
#define SH_MEM_BASES_REG_SIZE__CI__VI 32
#define SH_MEM_BASES_SHARED_BASE_MASK__CI__VI 0xffff0000
#define SH_MEM_BASES_SHARED_BASE_SHIFT__CI__VI 16
#define SH_MEM_BASES_SHARED_BASE_SIZE__CI__VI 16
#define SH_MEM_CONFIG_ALIGNMENT_MODE_MASK__CI 0x0000000c
#define SH_MEM_CONFIG_ALIGNMENT_MODE_SHIFT__CI 2
#define SH_MEM_CONFIG_ALIGNMENT_MODE_SIZE__CI__VI 2
#define SH_MEM_CONFIG_APE1_MTYPE_MASK__CI 0x00000380
#define SH_MEM_CONFIG_APE1_MTYPE_SHIFT__CI 7
#define SH_MEM_CONFIG_APE1_MTYPE_SIZE__CI__VI 3
#define SH_MEM_CONFIG_DEFAULT_MTYPE_MASK__CI 0x00000070
#define SH_MEM_CONFIG_DEFAULT_MTYPE_SHIFT__CI 4
#define SH_MEM_CONFIG_DEFAULT_MTYPE_SIZE__CI__VI 3
#define SH_MEM_CONFIG_DEFAULT__CI__VI 0x00000000
#define SH_MEM_CONFIG_PRIVATE_ATC_MASK__CI 0x00000002
#define SH_MEM_CONFIG_PRIVATE_ATC_SHIFT__CI 1
#define SH_MEM_CONFIG_PRIVATE_ATC_SIZE__CI__VI 1
#define SH_MEM_CONFIG_PTR32_MASK__CI 0x00000001
#define SH_MEM_CONFIG_PTR32_SHIFT__CI 0x00000000
#define SH_MEM_CONFIG_PTR32_SIZE__CI 1
#define SH_MEM_CONFIG_REG_SIZE__CI__VI 32
#define SQC_CACHES_DATA_INVALIDATE_MASK__SI__CI 0x00000002
#define SQC_CACHES_DATA_INVALIDATE_SHIFT__SI__CI 1
#define SQC_CACHES_DATA_INVALIDATE_SIZE__SI__CI 1
#define SQC_CACHES_DEFAULT 0x00000000
#define SQC_CACHES_INST_INVALIDATE_MASK__SI__CI 0x00000001
#define SQC_CACHES_INST_INVALIDATE_SHIFT__SI__CI 0x00000000
#define SQC_CACHES_INST_INVALIDATE_SIZE__SI__CI 1
#define SQC_CACHES_INVALIDATE_VOLATILE_MASK__CI 0x00000004
#define SQC_CACHES_INVALIDATE_VOLATILE_SHIFT__CI 2
#define SQC_CACHES_INVALIDATE_VOLATILE_SIZE__CI 1
#define SQC_CACHES_REG_SIZE 32
#define SQC_CONFIG_DATA_CACHE_SIZE_MASK 0x0000000c
#define SQC_CONFIG_DATA_CACHE_SIZE_SHIFT 2
#define SQC_CONFIG_DATA_CACHE_SIZE_SIZE 2
#define SQC_CONFIG_FORCE_ALWAYS_MISS_MASK 0x00000080
#define SQC_CONFIG_FORCE_ALWAYS_MISS_SHIFT 7
#define SQC_CONFIG_FORCE_ALWAYS_MISS_SIZE 1
#define SQC_CONFIG_FORCE_IN_ORDER_MASK 0x00000100
#define SQC_CONFIG_FORCE_IN_ORDER_SHIFT 8
#define SQC_CONFIG_FORCE_IN_ORDER_SIZE 1
#define SQC_CONFIG_HIT_FIFO_DEPTH_MASK 0x00000040
#define SQC_CONFIG_HIT_FIFO_DEPTH_SHIFT 6
#define SQC_CONFIG_HIT_FIFO_DEPTH_SIZE 1
#define SQC_CONFIG_IDENTITY_HASH_BANK_MASK 0x00000200
#define SQC_CONFIG_IDENTITY_HASH_BANK_SHIFT 9
#define SQC_CONFIG_IDENTITY_HASH_BANK_SIZE 1
#define SQC_CONFIG_IDENTITY_HASH_SET_MASK 0x00000400
#define SQC_CONFIG_IDENTITY_HASH_SET_SHIFT 10
#define SQC_CONFIG_IDENTITY_HASH_SET_SIZE 1
#define SQC_CONFIG_INST_CACHE_SIZE_MASK 0x00000003
#define SQC_CONFIG_INST_CACHE_SIZE_SHIFT 0x00000000
#define SQC_CONFIG_INST_CACHE_SIZE_SIZE 2
#define SQC_CONFIG_MISS_FIFO_DEPTH_MASK 0x00000030
#define SQC_CONFIG_MISS_FIFO_DEPTH_SHIFT 4
#define SQC_CONFIG_MISS_FIFO_DEPTH_SIZE 2
#define SQC_CONFIG_PER_VMID_INV_DISABLE_MASK__CI__VI 0x00000800
#define SQC_CONFIG_PER_VMID_INV_DISABLE_SHIFT__CI__VI 11
#define SQC_CONFIG_PER_VMID_INV_DISABLE_SIZE__CI__VI 1
#define SQC_CONFIG_REG_SIZE 32
#define SQC_POLICY_DATA_L1_POLICY_0_MASK__CI 0x00000001
#define SQC_POLICY_DATA_L1_POLICY_0_SHIFT__CI 0x00000000
#define SQC_POLICY_DATA_L1_POLICY_0_SIZE__CI 1
#define SQC_POLICY_DATA_L1_POLICY_1_MASK__CI 0x00000002
#define SQC_POLICY_DATA_L1_POLICY_1_SHIFT__CI 1
#define SQC_POLICY_DATA_L1_POLICY_1_SIZE__CI 1
#define SQC_POLICY_DATA_L1_POLICY_2_MASK__CI 0x00000004
#define SQC_POLICY_DATA_L1_POLICY_2_SHIFT__CI 2
#define SQC_POLICY_DATA_L1_POLICY_2_SIZE__CI 1
#define SQC_POLICY_DATA_L1_POLICY_3_MASK__CI 0x00000008
#define SQC_POLICY_DATA_L1_POLICY_3_SHIFT__CI 3
#define SQC_POLICY_DATA_L1_POLICY_3_SIZE__CI 1
#define SQC_POLICY_DATA_L1_POLICY_4_MASK__CI 0x00000010
#define SQC_POLICY_DATA_L1_POLICY_4_SHIFT__CI 4
#define SQC_POLICY_DATA_L1_POLICY_4_SIZE__CI 1
#define SQC_POLICY_DATA_L1_POLICY_5_MASK__CI 0x00000020
#define SQC_POLICY_DATA_L1_POLICY_5_SHIFT__CI 5
#define SQC_POLICY_DATA_L1_POLICY_5_SIZE__CI 1
#define SQC_POLICY_DATA_L1_POLICY_6_MASK__CI 0x00000040
#define SQC_POLICY_DATA_L1_POLICY_6_SHIFT__CI 6
#define SQC_POLICY_DATA_L1_POLICY_6_SIZE__CI 1
#define SQC_POLICY_DATA_L1_POLICY_7_MASK__CI 0x00000080
#define SQC_POLICY_DATA_L1_POLICY_7_SHIFT__CI 7
#define SQC_POLICY_DATA_L1_POLICY_7_SIZE__CI 1
#define SQC_POLICY_DATA_L2_POLICY_0_MASK__CI 0x00000300
#define SQC_POLICY_DATA_L2_POLICY_0_SHIFT__CI 8
#define SQC_POLICY_DATA_L2_POLICY_0_SIZE__CI 2
#define SQC_POLICY_DATA_L2_POLICY_1_MASK__CI 0x00000c00
#define SQC_POLICY_DATA_L2_POLICY_1_SHIFT__CI 10
#define SQC_POLICY_DATA_L2_POLICY_1_SIZE__CI 2
#define SQC_POLICY_DATA_L2_POLICY_2_MASK__CI 0x00003000
#define SQC_POLICY_DATA_L2_POLICY_2_SHIFT__CI 12
#define SQC_POLICY_DATA_L2_POLICY_2_SIZE__CI 2
#define SQC_POLICY_DATA_L2_POLICY_3_MASK__CI 0x0000c000
#define SQC_POLICY_DATA_L2_POLICY_3_SHIFT__CI 14
#define SQC_POLICY_DATA_L2_POLICY_3_SIZE__CI 2
#define SQC_POLICY_DATA_L2_POLICY_4_MASK__CI 0x00030000
#define SQC_POLICY_DATA_L2_POLICY_4_SHIFT__CI 16
#define SQC_POLICY_DATA_L2_POLICY_4_SIZE__CI 2
#define SQC_POLICY_DATA_L2_POLICY_5_MASK__CI 0x000c0000
#define SQC_POLICY_DATA_L2_POLICY_5_SHIFT__CI 18
#define SQC_POLICY_DATA_L2_POLICY_5_SIZE__CI 2
#define SQC_POLICY_DATA_L2_POLICY_6_MASK__CI 0x00300000
#define SQC_POLICY_DATA_L2_POLICY_6_SHIFT__CI 20
#define SQC_POLICY_DATA_L2_POLICY_6_SIZE__CI 2
#define SQC_POLICY_DATA_L2_POLICY_7_MASK__CI 0x00c00000
#define SQC_POLICY_DATA_L2_POLICY_7_SHIFT__CI 22
#define SQC_POLICY_DATA_L2_POLICY_7_SIZE__CI 2
#define SQC_POLICY_DEFAULT__CI 0x00808000
#define SQC_POLICY_INST_L2_POLICY_MASK__CI 0x03000000
#define SQC_POLICY_INST_L2_POLICY_SHIFT__CI 24
#define SQC_POLICY_INST_L2_POLICY_SIZE__CI 2
#define SQC_POLICY_REG_SIZE__CI 32
#define SQC_SECDED_CNT_DATA_DED_MASK__SI__CI 0xff000000
#define SQC_SECDED_CNT_DATA_DED_SHIFT__SI__CI 24
#define SQC_SECDED_CNT_DATA_DED_SIZE__SI__CI 8
#define SQC_SECDED_CNT_DATA_SEC_MASK__SI__CI 0x00ff0000
#define SQC_SECDED_CNT_DATA_SEC_SHIFT__SI__CI 16
#define SQC_SECDED_CNT_DATA_SEC_SIZE__SI__CI 8
#define SQC_SECDED_CNT_DEFAULT__SI__CI 0x00000000
#define SQC_SECDED_CNT_INST_DED_MASK__SI__CI 0x0000ff00
#define SQC_SECDED_CNT_INST_DED_SHIFT__SI__CI 8
#define SQC_SECDED_CNT_INST_DED_SIZE__SI__CI 8
#define SQC_SECDED_CNT_INST_SEC_MASK__SI__CI 0x000000ff
#define SQC_SECDED_CNT_INST_SEC_SHIFT__SI__CI 0x00000000
#define SQC_SECDED_CNT_INST_SEC_SIZE__SI__CI 8
#define SQC_SECDED_CNT_REG_SIZE__SI__CI 32
#define SQC_VOLATILE_DATA_L1_MASK__CI 0x0000000f
#define SQC_VOLATILE_DATA_L1_SHIFT__CI 0x00000000
#define SQC_VOLATILE_DATA_L1_SIZE__CI 4
#define SQC_VOLATILE_DATA_L2_MASK__CI 0x000000f0
#define SQC_VOLATILE_DATA_L2_SHIFT__CI 4
#define SQC_VOLATILE_DATA_L2_SIZE__CI 4
#define SQC_VOLATILE_DEFAULT__CI 0x0000004e
#define SQC_VOLATILE_INST_L2_MASK__CI 0x00000100
#define SQC_VOLATILE_INST_L2_SHIFT__CI 8
#define SQC_VOLATILE_INST_L2_SIZE__CI 1
#define SQC_VOLATILE_REG_SIZE__CI 32
#define SQDEC_BEGIN 0x00002300
#define SQDEC_END 0x000023ff
#define SQGFXUDEC_BEGIN__CI 0x0000c340
#define SQGFXUDEC_END__CI__VI 0x0000c380
#define SQIND_GLOBAL_REGS_OFFSET 0x00000000
#define SQIND_GLOBAL_REGS_SIZE 0x00000008
#define SQIND_LOCAL_REGS_OFFSET 0x00000008
#define SQIND_LOCAL_REGS_SIZE 0x00000008
#define SQIND_WAVE_HWREGS_OFFSET 0x00000010
#define SQIND_WAVE_HWREGS_SIZE 0x000001f0
#define SQIND_WAVE_SGPRS_OFFSET 0x00000200
#define SQIND_WAVE_SGPRS_SIZE 0x00000200
#define SQPERFDDEC_BEGIN__CI__VI 0x0000d1c0
#define SQPERFDDEC_END__CI__VI 0x0000d240
#define SQPERFSDEC_BEGIN__CI__VI 0x0000d9c0
#define SQPERFSDEC_END__CI__VI 0x0000da40
#define SQPWRDEC_BEGIN__CI__VI 0x0000f08c
#define SQPWRDEC_END__CI__VI 0x0000f094
#define SQ_ALU_CLK_CTRL_DEFAULT 0x00000000
#define SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_MASK 0x0000ffff
#define SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT 0x00000000
#define SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_SIZE 16
#define SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_MASK 0xffff0000
#define SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT 16
#define SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_SIZE 16
#define SQ_ALU_CLK_CTRL_REG_SIZE 32
#define SQ_BUF_RSRC_WORD0_BASE_ADDRESS_MASK 0xffffffff
#define SQ_BUF_RSRC_WORD0_BASE_ADDRESS_SHIFT 0x00000000
#define SQ_BUF_RSRC_WORD0_BASE_ADDRESS_SIZE 32
#define SQ_BUF_RSRC_WORD0_REG_SIZE 32
#define SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_MASK 0x0000ffff
#define SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_SHIFT 0x00000000
#define SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_SIZE 16
#define SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_MASK 0x40000000
#define SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_SHIFT 30
#define SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_SIZE 1
#define SQ_BUF_RSRC_WORD1_REG_SIZE 32
#define SQ_BUF_RSRC_WORD1_STRIDE_MASK 0x3fff0000
#define SQ_BUF_RSRC_WORD1_STRIDE_SHIFT 16
#define SQ_BUF_RSRC_WORD1_STRIDE_SIZE 14
#define SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_MASK 0x80000000
#define SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_SHIFT 31
#define SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_SIZE 1
#define SQ_BUF_RSRC_WORD2_NUM_RECORDS_MASK 0xffffffff
#define SQ_BUF_RSRC_WORD2_NUM_RECORDS_SHIFT 0x00000000
#define SQ_BUF_RSRC_WORD2_NUM_RECORDS_SIZE 32
#define SQ_BUF_RSRC_WORD2_REG_SIZE 32
#define SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_MASK 0x00800000
#define SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_SHIFT 23
#define SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_SIZE 1
#define SQ_BUF_RSRC_WORD3_ATC_MASK__CI__VI 0x01000000
#define SQ_BUF_RSRC_WORD3_ATC_SHIFT__CI__VI 24
#define SQ_BUF_RSRC_WORD3_ATC_SIZE__CI__VI 1
#define SQ_BUF_RSRC_WORD3_DATA_FORMAT_MASK 0x00078000
#define SQ_BUF_RSRC_WORD3_DATA_FORMAT_SHIFT 15
#define SQ_BUF_RSRC_WORD3_DATA_FORMAT_SIZE 4
#define SQ_BUF_RSRC_WORD3_DST_SEL_W_MASK 0x00000e00
#define SQ_BUF_RSRC_WORD3_DST_SEL_W_SHIFT 9
#define SQ_BUF_RSRC_WORD3_DST_SEL_W_SIZE 3
#define SQ_BUF_RSRC_WORD3_DST_SEL_X_MASK 0x00000007
#define SQ_BUF_RSRC_WORD3_DST_SEL_X_SHIFT 0x00000000
#define SQ_BUF_RSRC_WORD3_DST_SEL_X_SIZE 3
#define SQ_BUF_RSRC_WORD3_DST_SEL_Y_MASK 0x00000038
#define SQ_BUF_RSRC_WORD3_DST_SEL_Y_SHIFT 3
#define SQ_BUF_RSRC_WORD3_DST_SEL_Y_SIZE 3
#define SQ_BUF_RSRC_WORD3_DST_SEL_Z_MASK 0x000001c0
#define SQ_BUF_RSRC_WORD3_DST_SEL_Z_SHIFT 6
#define SQ_BUF_RSRC_WORD3_DST_SEL_Z_SIZE 3
#define SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_MASK 0x00180000
#define SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_SHIFT 19
#define SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_SIZE 2
#define SQ_BUF_RSRC_WORD3_HASH_ENABLE_MASK 0x02000000
#define SQ_BUF_RSRC_WORD3_HASH_ENABLE_SHIFT 25
#define SQ_BUF_RSRC_WORD3_HASH_ENABLE_SIZE 1
#define SQ_BUF_RSRC_WORD3_HEAP_MASK 0x04000000
#define SQ_BUF_RSRC_WORD3_HEAP_SHIFT 26
#define SQ_BUF_RSRC_WORD3_HEAP_SIZE 1
#define SQ_BUF_RSRC_WORD3_INDEX_STRIDE_MASK 0x00600000
#define SQ_BUF_RSRC_WORD3_INDEX_STRIDE_SHIFT 21
#define SQ_BUF_RSRC_WORD3_INDEX_STRIDE_SIZE 2
#define SQ_BUF_RSRC_WORD3_MTYPE_MASK__CI__VI 0x38000000
#define SQ_BUF_RSRC_WORD3_MTYPE_SHIFT__CI__VI 27
#define SQ_BUF_RSRC_WORD3_MTYPE_SIZE__CI__VI 3
#define SQ_BUF_RSRC_WORD3_NUM_FORMAT_MASK 0x00007000
#define SQ_BUF_RSRC_WORD3_NUM_FORMAT_SHIFT 12
#define SQ_BUF_RSRC_WORD3_NUM_FORMAT_SIZE 3
#define SQ_BUF_RSRC_WORD3_REG_SIZE 32
#define SQ_BUF_RSRC_WORD3_TYPE_MASK 0xc0000000
#define SQ_BUF_RSRC_WORD3_TYPE_SHIFT 30
#define SQ_BUF_RSRC_WORD3_TYPE_SIZE 2
#define SQ_CAC_MASK_DEFAULT__SI 0x00000007
#define SQ_CAC_MASK_GPR_MASK__SI 0x00000004
#define SQ_CAC_MASK_GPR_SHIFT__SI 2
#define SQ_CAC_MASK_GPR_SIZE__SI 1
#define SQ_CAC_MASK_REG_SIZE__SI 32
#define SQ_CAC_MASK_VALU_MASK__SI 0x00000001
#define SQ_CAC_MASK_VALU_MUL_MASK__SI 0x00000002
#define SQ_CAC_MASK_VALU_MUL_SHIFT__SI 1
#define SQ_CAC_MASK_VALU_MUL_SIZE__SI 1
#define SQ_CAC_MASK_VALU_SHIFT__SI 0x00000000
#define SQ_CAC_MASK_VALU_SIZE__SI 1
#define SQ_CMD_CHECK_VMID_MASK__CI__VI 0x00000080
#define SQ_CMD_CHECK_VMID_SHIFT__CI__VI 7
#define SQ_CMD_CHECK_VMID_SIZE__CI__VI 1
#define SQ_CMD_CMD_MASK__CI__VI 0x00000007
#define SQ_CMD_CMD_SHIFT__CI__VI 0x00000000
#define SQ_CMD_CMD_SIZE__CI__VI 3
#define SQ_CMD_DEFAULT__CI 0x00000000
#define SQ_CMD_MODE_MASK__CI__VI 0x00000070
#define SQ_CMD_MODE_SHIFT__CI__VI 4
#define SQ_CMD_MODE_SIZE__CI__VI 3
#define SQ_CMD_QUEUE_ID_MASK__CI__VI 0x07000000
#define SQ_CMD_QUEUE_ID_SHIFT__CI__VI 24
#define SQ_CMD_QUEUE_ID_SIZE__CI__VI 3
#define SQ_CMD_REG_SIZE__CI__VI 32
#define SQ_CMD_SIMD_ID_MASK__CI__VI 0x00300000
#define SQ_CMD_SIMD_ID_SHIFT__CI__VI 20
#define SQ_CMD_SIMD_ID_SIZE__CI__VI 2
#define SQ_CMD_TIMESTAMP_DEFAULT__CI__VI 0x00000000
#define SQ_CMD_TIMESTAMP_REG_SIZE__CI__VI 32
#define SQ_CMD_TIMESTAMP_TIMESTAMP_MASK__CI__VI 0x000000ff
#define SQ_CMD_TIMESTAMP_TIMESTAMP_SHIFT__CI__VI 0x00000000
#define SQ_CMD_TIMESTAMP_TIMESTAMP_SIZE__CI__VI 8
#define SQ_CMD_TRAP_ID_MASK__CI 0x00000700
#define SQ_CMD_TRAP_ID_SHIFT__CI 8
#define SQ_CMD_TRAP_ID_SIZE__CI 3
#define SQ_CMD_VM_ID_MASK__CI__VI 0xf0000000
#define SQ_CMD_VM_ID_SHIFT__CI__VI 28
#define SQ_CMD_VM_ID_SIZE__CI__VI 4
#define SQ_CMD_WAVE_ID_MASK__CI__VI 0x000f0000
#define SQ_CMD_WAVE_ID_SHIFT__CI__VI 16
#define SQ_CMD_WAVE_ID_SIZE__CI__VI 4
#define SQ_CONFIG_DEBUG_EN_MASK 0x00000100
#define SQ_CONFIG_DEBUG_EN_SHIFT 8
#define SQ_CONFIG_DEBUG_EN_SIZE 1
#define SQ_CONFIG_DISABLE_IB_DEP_CHECK_MASK__SI__CI 0x00000400
#define SQ_CONFIG_DISABLE_IB_DEP_CHECK_SHIFT__SI__CI 10
#define SQ_CONFIG_DISABLE_IB_DEP_CHECK_SIZE__SI__CI 1
#define SQ_CONFIG_DISABLE_SCA_BYPASS_MASK__SI__CI 0x00000200
#define SQ_CONFIG_DISABLE_SCA_BYPASS_SHIFT__SI__CI 9
#define SQ_CONFIG_DISABLE_SCA_BYPASS_SIZE__SI__CI 1
#define SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_MASK__CI__VI 0x00008000
#define SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_SHIFT__CI__VI 15
#define SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_SIZE__CI__VI 1
#define SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_MASK__CI__VI 0x00002000
#define SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_SHIFT__CI__VI 13
#define SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_SIZE__CI__VI 1
#define SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_MASK__CI__VI 0x00004000
#define SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_SHIFT__CI__VI 14
#define SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_SIZE__CI__VI 1
#define SQ_CONFIG_EARLY_TA_DONE_DISABLE_MASK__CI__VI 0x00001000
#define SQ_CONFIG_EARLY_TA_DONE_DISABLE_SHIFT__CI__VI 12
#define SQ_CONFIG_EARLY_TA_DONE_DISABLE_SIZE__CI__VI 1
#define SQ_CONFIG_ENABLE_SOFT_CLAUSE_MASK__CI 0x00000800
#define SQ_CONFIG_ENABLE_SOFT_CLAUSE_SHIFT__CI 11
#define SQ_CONFIG_ENABLE_SOFT_CLAUSE_SIZE__CI 1
#define SQ_CONFIG_REG_SIZE 32
#define SQ_CONFIG_UNUSED_MASK 0x000000ff
#define SQ_CONFIG_UNUSED_SHIFT 0x00000000
#define SQ_CONFIG_UNUSED_SIZE 8
#define SQ_DEBUG_CTRL_LOCAL_REG_SIZE 32
#define SQ_DEBUG_CTRL_LOCAL_UNUSED_MASK 0x000000ff
#define SQ_DEBUG_CTRL_LOCAL_UNUSED_SHIFT 0x00000000
#define SQ_DEBUG_CTRL_LOCAL_UNUSED_SIZE 8
#define SQ_DEBUG_STS_GLOBAL2_DEFAULT__CI__VI 0x00000000
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_MASK__CI__VI 0x000000ff
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_SHIFT__CI__VI 0x00000000
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_SIZE__CI__VI 8
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_MASK__CI__VI 0x0000ff00
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_SHIFT__CI__VI 8
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_SIZE__CI__VI 8
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_MASK__CI__VI 0xff000000
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_SHIFT__CI__VI 24
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_SIZE__CI__VI 8
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_MASK__CI__VI 0x00ff0000
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_SHIFT__CI__VI 16
#define SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_SIZE__CI__VI 8
#define SQ_DEBUG_STS_GLOBAL2_REG_SIZE__CI__VI 32
#define SQ_DEBUG_STS_GLOBAL3_DEFAULT__CI__VI 0x00000000
#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_MASK__CI__VI 0x0000000f
#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_SHIFT__CI__VI 0x00000000
#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_SIZE__CI__VI 4
#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_MASK__CI 0x000000f0
#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_SHIFT__CI__VI 4
#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_SIZE__CI 4
#define SQ_DEBUG_STS_GLOBAL3_REG_SIZE__CI__VI 32
#define SQ_DEBUG_STS_GLOBAL_BUSY_MASK 0x00000001
#define SQ_DEBUG_STS_GLOBAL_BUSY_SHIFT 0x00000000
#define SQ_DEBUG_STS_GLOBAL_BUSY_SIZE 1
#define SQ_DEBUG_STS_GLOBAL_DEFAULT 0x00000000
#define SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_MASK__CI__VI 0x00000002
#define SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_SHIFT__CI__VI 1
#define SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_SIZE__CI__VI 1
#define SQ_DEBUG_STS_GLOBAL_REG_SIZE 32
#define SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_MASK 0x0000fff0
#define SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_SHIFT 4
#define SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_SIZE 12
#define SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_MASK 0x0fff0000
#define SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_SHIFT 16
#define SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_SIZE 12
#define SQ_DEBUG_STS_LOCAL_BUSY_MASK 0x00000001
#define SQ_DEBUG_STS_LOCAL_BUSY_SHIFT 0x00000000
#define SQ_DEBUG_STS_LOCAL_BUSY_SIZE 1
#define SQ_DEBUG_STS_LOCAL_DEFAULT 0x00000000
#define SQ_DEBUG_STS_LOCAL_REG_SIZE 32
#define SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_MASK 0x000003f0
#define SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_SHIFT 4
#define SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_SIZE 6
#define SQ_DED_CNT_DEFAULT__SI__CI 0x00000000
#define SQ_DED_CNT_LDS_DED_MASK__SI__CI 0x0000003f
#define SQ_DED_CNT_LDS_DED_SHIFT__SI__CI 0x00000000
#define SQ_DED_CNT_LDS_DED_SIZE__SI__CI 6
#define SQ_DED_CNT_REG_SIZE__SI__CI 32
#define SQ_DED_CNT_SGPR_DED_MASK__SI__CI 0x00001f00
#define SQ_DED_CNT_SGPR_DED_SHIFT__SI__CI 8
#define SQ_DED_CNT_SGPR_DED_SIZE__SI__CI 5
#define SQ_DED_CNT_VGPR_DED_MASK__SI__CI 0x01ff0000
#define SQ_DED_CNT_VGPR_DED_SHIFT__SI__CI 16
#define SQ_DED_CNT_VGPR_DED_SIZE__SI__CI 9
#define SQ_DED_INFO_DEFAULT__SI__CI 0x00000000
#define SQ_DED_INFO_REG_SIZE__SI__CI 32
#define SQ_DED_INFO_RING_ID_MASK__SI 0x0000e000
#define SQ_DED_INFO_RING_ID_SHIFT__SI 13
#define SQ_DED_INFO_RING_ID_SIZE__SI 3
#define SQ_DED_INFO_SIMD_ID_MASK__SI__CI 0x00000030
#define SQ_DED_INFO_SIMD_ID_SHIFT__SI__CI 4
#define SQ_DED_INFO_SIMD_ID_SIZE__SI__CI 2
#define SQ_DED_INFO_SOURCE_MASK__SI__CI 0x000001c0
#define SQ_DED_INFO_SOURCE_SHIFT__SI__CI 6
#define SQ_DED_INFO_SOURCE_SIZE__SI__CI 3
#define SQ_DED_INFO_VM_ID_MASK__SI__CI 0x00001e00
#define SQ_DED_INFO_VM_ID_SHIFT__SI__CI 9
#define SQ_DED_INFO_VM_ID_SIZE__SI__CI 4
#define SQ_DED_INFO_WAVE_ID_MASK__SI__CI 0x0000000f
#define SQ_DED_INFO_WAVE_ID_SHIFT__SI__CI 0x00000000
#define SQ_DED_INFO_WAVE_ID_SIZE__SI__CI 4
#define SQ_DISPATCHER_GFX_CNT_PER_RING 0x00000008
#define SQ_DISPATCHER_GFX_MIN 0x00000010
#define SQ_EX_MODE_EXCP_ADDR_WATCH__CI__VI 0x00000007
#define SQ_EX_MODE_EXCP_DIV0__CI__VI 0x00000002
#define SQ_EX_MODE_EXCP_INEXACT__CI__VI 0x00000005
#define SQ_EX_MODE_EXCP_INPUT_DENORM__CI__VI 0x00000001
#define SQ_EX_MODE_EXCP_INT_DIV0__CI__VI 0x00000006
#define SQ_EX_MODE_EXCP_INVALID__CI__VI 0x00000000
#define SQ_EX_MODE_EXCP_MEM_VIOL__CI__VI 0x00000008
#define SQ_EX_MODE_EXCP_OVERFLOW__CI__VI 0x00000003
#define SQ_EX_MODE_EXCP_UNDERFLOW__CI__VI 0x00000004
#define SQ_EX_MODE_EXCP_VALU_BASE__CI__VI 0x00000000
#define SQ_EX_MODE_EXCP_VALU_SIZE__CI__VI 0x00000007
#define SQ_FIFO_SIZES_EXPORT_BUF_SIZE_MASK 0x00030000
#define SQ_FIFO_SIZES_EXPORT_BUF_SIZE_SHIFT 16
#define SQ_FIFO_SIZES_EXPORT_BUF_SIZE_SIZE 2
#define SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_MASK 0x0000000f
#define SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_SHIFT 0x00000000
#define SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_SIZE 4
#define SQ_FIFO_SIZES_REG_SIZE 32
#define SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_MASK 0x00000f00
#define SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_SHIFT 8
#define SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_SIZE 4
#define SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_MASK 0x000c0000
#define SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_SHIFT 18
#define SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_SIZE 2
#define SQ_FLAT_SCRATCH_WORD0_DEFAULT__CI 0x00000000
#define SQ_FLAT_SCRATCH_WORD0_REG_SIZE__CI__VI 32
#define SQ_FLAT_SCRATCH_WORD0_SIZE_MASK__CI__VI 0x0007ffff
#define SQ_FLAT_SCRATCH_WORD0_SIZE_SHIFT__CI__VI 0x00000000
#define SQ_FLAT_SCRATCH_WORD0_SIZE_SIZE__CI__VI 19
#define SQ_FLAT_SCRATCH_WORD1_DEFAULT__CI 0x00000000
#define SQ_FLAT_SCRATCH_WORD1_OFFSET_MASK__CI__VI 0x00ffffff
#define SQ_FLAT_SCRATCH_WORD1_OFFSET_SHIFT__CI__VI 0x00000000
#define SQ_FLAT_SCRATCH_WORD1_OFFSET_SIZE__CI__VI 24
#define SQ_FLAT_SCRATCH_WORD1_REG_SIZE__CI__VI 32
#define SQ_GFXDEC_BEGIN 0x0000a000
#define SQ_GFXDEC_END 0x0000c000
#define SQ_GFXDEC_STATE_ID_SHIFT 0x0000000a
#define SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_MASK__CI__VI 0x000ffff0
#define SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_SHIFT__CI__VI 4
#define SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_SIZE__CI__VI 16
#define SQ_HV_VMID_CTRL_DEFAULT_VMID_MASK__CI__VI 0x0000000f
#define SQ_HV_VMID_CTRL_DEFAULT_VMID_SHIFT__CI__VI 0x00000000
#define SQ_HV_VMID_CTRL_DEFAULT_VMID_SIZE__CI__VI 4
#define SQ_HV_VMID_CTRL_DEFAULT__CI__VI 0x000fffff
#define SQ_HV_VMID_CTRL_REG_SIZE__CI__VI 32
#define SQ_IMG_RSRC_WORD0_BASE_ADDRESS_MASK 0xffffffff
#define SQ_IMG_RSRC_WORD0_BASE_ADDRESS_SHIFT 0x00000000
#define SQ_IMG_RSRC_WORD0_BASE_ADDRESS_SIZE 32
#define SQ_IMG_RSRC_WORD0_REG_SIZE 32
#define SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_MASK 0x000000ff
#define SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_SHIFT 0x00000000
#define SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_SIZE 8
#define SQ_IMG_RSRC_WORD1_DATA_FORMAT_MASK 0x03f00000
#define SQ_IMG_RSRC_WORD1_DATA_FORMAT_SHIFT 20
#define SQ_IMG_RSRC_WORD1_DATA_FORMAT_SIZE 6
#define SQ_IMG_RSRC_WORD1_MIN_LOD_MASK 0x000fff00
#define SQ_IMG_RSRC_WORD1_MIN_LOD_SHIFT 8
#define SQ_IMG_RSRC_WORD1_MIN_LOD_SIZE 12
#define SQ_IMG_RSRC_WORD1_MTYPE_MASK__CI__VI 0xc0000000
#define SQ_IMG_RSRC_WORD1_MTYPE_SHIFT__CI__VI 30
#define SQ_IMG_RSRC_WORD1_MTYPE_SIZE__CI__VI 2
#define SQ_IMG_RSRC_WORD1_NUM_FORMAT_MASK 0x3c000000
#define SQ_IMG_RSRC_WORD1_NUM_FORMAT_SHIFT 26
#define SQ_IMG_RSRC_WORD1_NUM_FORMAT_SIZE 4
#define SQ_IMG_RSRC_WORD1_REG_SIZE 32
#define SQ_IMG_RSRC_WORD2_HEIGHT_MASK 0x0fffc000
#define SQ_IMG_RSRC_WORD2_HEIGHT_SHIFT 14
#define SQ_IMG_RSRC_WORD2_HEIGHT_SIZE 14
#define SQ_IMG_RSRC_WORD2_INTERLACED_MASK 0x80000000
#define SQ_IMG_RSRC_WORD2_INTERLACED_SHIFT 31
#define SQ_IMG_RSRC_WORD2_INTERLACED_SIZE 1
#define SQ_IMG_RSRC_WORD2_PERF_MOD_MASK 0x70000000
#define SQ_IMG_RSRC_WORD2_PERF_MOD_SHIFT 28
#define SQ_IMG_RSRC_WORD2_PERF_MOD_SIZE 3
#define SQ_IMG_RSRC_WORD2_REG_SIZE 32
#define SQ_IMG_RSRC_WORD2_WIDTH_MASK 0x00003fff
#define SQ_IMG_RSRC_WORD2_WIDTH_SHIFT 0x00000000
#define SQ_IMG_RSRC_WORD2_WIDTH_SIZE 14
#define SQ_IMG_RSRC_WORD3_ATC_MASK__CI__VI 0x08000000
#define SQ_IMG_RSRC_WORD3_ATC_SHIFT__CI__VI 27
#define SQ_IMG_RSRC_WORD3_ATC_SIZE__CI__VI 1
#define SQ_IMG_RSRC_WORD3_BASE_LEVEL_MASK 0x0000f000
#define SQ_IMG_RSRC_WORD3_BASE_LEVEL_SHIFT 12
#define SQ_IMG_RSRC_WORD3_BASE_LEVEL_SIZE 4
#define SQ_IMG_RSRC_WORD3_DST_SEL_W_MASK 0x00000e00
#define SQ_IMG_RSRC_WORD3_DST_SEL_W_SHIFT 9
#define SQ_IMG_RSRC_WORD3_DST_SEL_W_SIZE 3
#define SQ_IMG_RSRC_WORD3_DST_SEL_X_MASK 0x00000007
#define SQ_IMG_RSRC_WORD3_DST_SEL_X_SHIFT 0x00000000
#define SQ_IMG_RSRC_WORD3_DST_SEL_X_SIZE 3
#define SQ_IMG_RSRC_WORD3_DST_SEL_Y_MASK 0x00000038
#define SQ_IMG_RSRC_WORD3_DST_SEL_Y_SHIFT 3
#define SQ_IMG_RSRC_WORD3_DST_SEL_Y_SIZE 3
#define SQ_IMG_RSRC_WORD3_DST_SEL_Z_MASK 0x000001c0
#define SQ_IMG_RSRC_WORD3_DST_SEL_Z_SHIFT 6
#define SQ_IMG_RSRC_WORD3_DST_SEL_Z_SIZE 3
#define SQ_IMG_RSRC_WORD3_LAST_LEVEL_MASK 0x000f0000
#define SQ_IMG_RSRC_WORD3_LAST_LEVEL_SHIFT 16
#define SQ_IMG_RSRC_WORD3_LAST_LEVEL_SIZE 4
#define SQ_IMG_RSRC_WORD3_MTYPE_MASK__CI__VI 0x04000000
#define SQ_IMG_RSRC_WORD3_MTYPE_SHIFT__CI__VI 26
#define SQ_IMG_RSRC_WORD3_MTYPE_SIZE__CI__VI 1
#define SQ_IMG_RSRC_WORD3_POW2_PAD_MASK 0x02000000
#define SQ_IMG_RSRC_WORD3_POW2_PAD_SHIFT 25
#define SQ_IMG_RSRC_WORD3_POW2_PAD_SIZE 1
#define SQ_IMG_RSRC_WORD3_REG_SIZE 32
#define SQ_IMG_RSRC_WORD3_TILING_INDEX_MASK 0x01f00000
#define SQ_IMG_RSRC_WORD3_TILING_INDEX_SHIFT 20
#define SQ_IMG_RSRC_WORD3_TILING_INDEX_SIZE 5
#define SQ_IMG_RSRC_WORD3_TYPE_MASK 0xf0000000
#define SQ_IMG_RSRC_WORD3_TYPE_SHIFT 28
#define SQ_IMG_RSRC_WORD3_TYPE_SIZE 4
#define SQ_IMG_RSRC_WORD4_DEPTH_MASK 0x00001fff
#define SQ_IMG_RSRC_WORD4_DEPTH_SHIFT 0x00000000
#define SQ_IMG_RSRC_WORD4_DEPTH_SIZE 13
#define SQ_IMG_RSRC_WORD4_PITCH_MASK 0x07ffe000
#define SQ_IMG_RSRC_WORD4_PITCH_SHIFT 13
#define SQ_IMG_RSRC_WORD4_PITCH_SIZE 14
#define SQ_IMG_RSRC_WORD4_REG_SIZE 32
#define SQ_IMG_RSRC_WORD5_BASE_ARRAY_MASK 0x00001fff
#define SQ_IMG_RSRC_WORD5_BASE_ARRAY_SHIFT 0x00000000
#define SQ_IMG_RSRC_WORD5_BASE_ARRAY_SIZE 13
#define SQ_IMG_RSRC_WORD5_LAST_ARRAY_MASK 0x03ffe000
#define SQ_IMG_RSRC_WORD5_LAST_ARRAY_SHIFT 13
#define SQ_IMG_RSRC_WORD5_LAST_ARRAY_SIZE 13
#define SQ_IMG_RSRC_WORD5_REG_SIZE 32
#define SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_MASK__CI__VI 0x000ff000
#define SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_SHIFT__CI__VI 12
#define SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_SIZE__CI__VI 8
#define SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_MASK__CI__VI 0x00100000
#define SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_SHIFT__CI__VI 20
#define SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_SIZE__CI__VI 1
#define SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_MASK 0x00000fff
#define SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_SHIFT 0x00000000
#define SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_SIZE 12
#define SQ_IMG_RSRC_WORD6_REG_SIZE 32
#define SQ_IMG_RSRC_WORD6_UNUNSED_MASK__CI 0xffe00000
#define SQ_IMG_RSRC_WORD6_UNUNSED_SHIFT__CI 21
#define SQ_IMG_RSRC_WORD6_UNUNSED_SIZE__CI 11
#define SQ_IMG_RSRC_WORD7_REG_SIZE 32
#define SQ_IMG_RSRC_WORD7_UNUNSED_MASK__SI__CI 0xffffffff
#define SQ_IMG_RSRC_WORD7_UNUNSED_SHIFT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD7_UNUNSED_SIZE__SI__CI 32
#define SQ_IMG_SAMP_WORD0_ANISO_BIAS_MASK 0x07e00000
#define SQ_IMG_SAMP_WORD0_ANISO_BIAS_SHIFT 21
#define SQ_IMG_SAMP_WORD0_ANISO_BIAS_SIZE 6
#define SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_MASK 0x00070000
#define SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_SHIFT 16
#define SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_SIZE 3
#define SQ_IMG_SAMP_WORD0_CLAMP_X_MASK 0x00000007
#define SQ_IMG_SAMP_WORD0_CLAMP_X_SHIFT 0x00000000
#define SQ_IMG_SAMP_WORD0_CLAMP_X_SIZE 3
#define SQ_IMG_SAMP_WORD0_CLAMP_Y_MASK 0x00000038
#define SQ_IMG_SAMP_WORD0_CLAMP_Y_SHIFT 3
#define SQ_IMG_SAMP_WORD0_CLAMP_Y_SIZE 3
#define SQ_IMG_SAMP_WORD0_CLAMP_Z_MASK 0x000001c0
#define SQ_IMG_SAMP_WORD0_CLAMP_Z_SHIFT 6
#define SQ_IMG_SAMP_WORD0_CLAMP_Z_SIZE 3
#define SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_MASK 0x00007000
#define SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_SHIFT 12
#define SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_SIZE 3
#define SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_MASK 0x10000000
#define SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_SHIFT 28
#define SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_SIZE 1
#define SQ_IMG_SAMP_WORD0_FILTER_MODE_MASK 0x60000000
#define SQ_IMG_SAMP_WORD0_FILTER_MODE_SHIFT 29
#define SQ_IMG_SAMP_WORD0_FILTER_MODE_SIZE 2
#define SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_MASK 0x00100000
#define SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_SHIFT 20
#define SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_SIZE 1
#define SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_MASK 0x00008000
#define SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_SHIFT 15
#define SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_SIZE 1
#define SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_MASK 0x00000e00
#define SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_SHIFT 9
#define SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_SIZE 3
#define SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_MASK 0x00080000
#define SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_SHIFT 19
#define SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_SIZE 1
#define SQ_IMG_SAMP_WORD0_REG_SIZE 32
#define SQ_IMG_SAMP_WORD0_TRUNC_COORD_MASK 0x08000000
#define SQ_IMG_SAMP_WORD0_TRUNC_COORD_SHIFT 27
#define SQ_IMG_SAMP_WORD0_TRUNC_COORD_SIZE 1
#define SQ_IMG_SAMP_WORD1_MAX_LOD_MASK 0x00fff000
#define SQ_IMG_SAMP_WORD1_MAX_LOD_SHIFT 12
#define SQ_IMG_SAMP_WORD1_MAX_LOD_SIZE 12
#define SQ_IMG_SAMP_WORD1_MIN_LOD_MASK 0x00000fff
#define SQ_IMG_SAMP_WORD1_MIN_LOD_SHIFT 0x00000000
#define SQ_IMG_SAMP_WORD1_MIN_LOD_SIZE 12
#define SQ_IMG_SAMP_WORD1_PERF_MIP_MASK 0x0f000000
#define SQ_IMG_SAMP_WORD1_PERF_MIP_SHIFT 24
#define SQ_IMG_SAMP_WORD1_PERF_MIP_SIZE 4
#define SQ_IMG_SAMP_WORD1_PERF_Z_MASK 0xf0000000
#define SQ_IMG_SAMP_WORD1_PERF_Z_SHIFT 28
#define SQ_IMG_SAMP_WORD1_PERF_Z_SIZE 4
#define SQ_IMG_SAMP_WORD1_REG_SIZE 32
#define SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_MASK 0x20000000
#define SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_SHIFT 29
#define SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_SIZE 1
#define SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_MASK 0x40000000
#define SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_SHIFT 30
#define SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_SIZE 1
#define SQ_IMG_SAMP_WORD2_LOD_BIAS_MASK 0x00003fff
#define SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_MASK 0x000fc000
#define SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_SHIFT 14
#define SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_SIZE 6
#define SQ_IMG_SAMP_WORD2_LOD_BIAS_SHIFT 0x00000000
#define SQ_IMG_SAMP_WORD2_LOD_BIAS_SIZE 14
#define SQ_IMG_SAMP_WORD2_MIP_FILTER_MASK 0x0c000000
#define SQ_IMG_SAMP_WORD2_MIP_FILTER_SHIFT 26
#define SQ_IMG_SAMP_WORD2_MIP_FILTER_SIZE 2
#define SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_MASK 0x10000000
#define SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_SHIFT 28
#define SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_SIZE 1
#define SQ_IMG_SAMP_WORD2_REG_SIZE 32
#define SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_MASK 0x00300000
#define SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_SHIFT 20
#define SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_SIZE 2
#define SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_MASK 0x00c00000
#define SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_SHIFT 22
#define SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_SIZE 2
#define SQ_IMG_SAMP_WORD2_Z_FILTER_MASK 0x03000000
#define SQ_IMG_SAMP_WORD2_Z_FILTER_SHIFT 24
#define SQ_IMG_SAMP_WORD2_Z_FILTER_SIZE 2
#define SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_MASK 0x00000fff
#define SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_SHIFT 0x00000000
#define SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_SIZE 12
#define SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_MASK 0xc0000000
#define SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_SHIFT 30
#define SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_SIZE 2
#define SQ_IMG_SAMP_WORD3_REG_SIZE 32
#define SQ_IND_CMD_CMD_MASK__SI 0x00000007
#define SQ_IND_CMD_CMD_SHIFT__SI 0x00000000
#define SQ_IND_CMD_CMD_SIZE__SI 3
#define SQ_IND_CMD_DEFAULT__SI__CI 0x00000000
#define SQ_IND_CMD_MODE_MASK__SI 0x00000030
#define SQ_IND_CMD_MODE_SHIFT__SI 4
#define SQ_IND_CMD_MODE_SIZE__SI 2
#define SQ_IND_CMD_REG_SIZE__SI__CI 32
#define SQ_IND_CMD_TRAP_ID_MASK__SI 0x00000700
#define SQ_IND_CMD_TRAP_ID_SHIFT__SI 8
#define SQ_IND_CMD_TRAP_ID_SIZE__SI 3
#define SQ_IND_CMD_VM_ID_MASK__SI 0xf0000000
#define SQ_IND_CMD_VM_ID_SHIFT__SI 28
#define SQ_IND_CMD_VM_ID_SIZE__SI 4
#define SQ_IND_DATA_DATA_MASK 0xffffffff
#define SQ_IND_DATA_DATA_SHIFT 0x00000000
#define SQ_IND_DATA_DATA_SIZE 32
#define SQ_IND_DATA_REG_SIZE 32
#define SQ_IND_INDEX_AUTO_INCR_MASK__CI__VI 0x00001000
#define SQ_IND_INDEX_AUTO_INCR_SHIFT__CI__VI 12
#define SQ_IND_INDEX_AUTO_INCR_SIZE__CI__VI 1
#define SQ_IND_INDEX_DEFAULT 0x00000000
#define SQ_IND_INDEX_FORCE_READ_MASK__CI__VI 0x00002000
#define SQ_IND_INDEX_FORCE_READ_SHIFT__CI__VI 13
#define SQ_IND_INDEX_FORCE_READ_SIZE__CI__VI 1
#define SQ_IND_INDEX_INDEX_MASK 0xffff0000
#define SQ_IND_INDEX_INDEX_SHIFT 16
#define SQ_IND_INDEX_INDEX_SIZE 16
#define SQ_IND_INDEX_READ_TIMEOUT_MASK 0x00004000
#define SQ_IND_INDEX_READ_TIMEOUT_SHIFT 14
#define SQ_IND_INDEX_READ_TIMEOUT_SIZE 1
#define SQ_IND_INDEX_REG_SIZE 32
#define SQ_IND_INDEX_SIMD_ID_MASK 0x00000030
#define SQ_IND_INDEX_SIMD_ID_SHIFT 4
#define SQ_IND_INDEX_SIMD_ID_SIZE 2
#define SQ_IND_INDEX_THREAD_ID_MASK 0x00000fc0
#define SQ_IND_INDEX_THREAD_ID_SHIFT 6
#define SQ_IND_INDEX_THREAD_ID_SIZE 6
#define SQ_IND_INDEX_UNINDEXED_MASK 0x00008000
#define SQ_IND_INDEX_UNINDEXED_SHIFT 15
#define SQ_IND_INDEX_UNINDEXED_SIZE 1
#define SQ_IND_INDEX_WAVE_ID_MASK 0x0000000f
#define SQ_IND_INDEX_WAVE_ID_SHIFT 0x00000000
#define SQ_IND_INDEX_WAVE_ID_SIZE 4
#define SQ_INTERRUPT_AUTO_MASK_DEFAULT__CI__VI 0x00ffffff
#define SQ_INTERRUPT_AUTO_MASK_MASK_MASK__CI__VI 0x00ffffff
#define SQ_INTERRUPT_AUTO_MASK_MASK_SHIFT__CI__VI 0x00000000
#define SQ_INTERRUPT_AUTO_MASK_MASK_SIZE__CI__VI 24
#define SQ_INTERRUPT_AUTO_MASK_REG_SIZE__CI__VI 32
#define SQ_INTERRUPT_ID__SI__CI 0x000000ef
#define SQ_INTERRUPT_MSG_CTRL_DEFAULT__CI__VI 0x00000000
#define SQ_INTERRUPT_MSG_CTRL_REG_SIZE__CI__VI 32
#define SQ_INTERRUPT_MSG_CTRL_STALL_MASK__CI__VI 0x00000001
#define SQ_INTERRUPT_MSG_CTRL_STALL_SHIFT__CI__VI 0x00000000
#define SQ_INTERRUPT_MSG_CTRL_STALL_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_MASK__CI__VI 0x00000010
#define SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_SHIFT__CI__VI 4
#define SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_ENCODING_MASK 0x0c000000
#define SQ_INTERRUPT_WORD_AUTO_ENCODING_SHIFT 26
#define SQ_INTERRUPT_WORD_AUTO_ENCODING_SIZE 2
#define SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_MASK__CI__VI 0x00000020
#define SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_SHIFT__CI__VI 5
#define SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_MASK__CI__VI 0x00000040
#define SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_SHIFT__CI__VI 6
#define SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_MASK__CI__VI 0x00000080
#define SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_SHIFT__CI__VI 7
#define SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_REG_SIZE 28
#define SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_MASK__CI__VI 0x00000008
#define SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_SHIFT__CI__VI 3
#define SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_SE_ID_MASK__CI__VI 0x03000000
#define SQ_INTERRUPT_WORD_AUTO_SE_ID_MASK__SI 0x02000000
#define SQ_INTERRUPT_WORD_AUTO_SE_ID_SHIFT__CI__VI 24
#define SQ_INTERRUPT_WORD_AUTO_SE_ID_SHIFT__SI 25
#define SQ_INTERRUPT_WORD_AUTO_SE_ID_SIZE__CI__VI 2
#define SQ_INTERRUPT_WORD_AUTO_SE_ID_SIZE__SI 1
#define SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_MASK__CI__VI 0x00000004
#define SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_SHIFT__CI__VI 2
#define SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_MASK 0x00000001
#define SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_SHIFT 0x00000000
#define SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_SIZE 1
#define SQ_INTERRUPT_WORD_AUTO_WLT_MASK__CI__VI 0x00000002
#define SQ_INTERRUPT_WORD_AUTO_WLT_SHIFT__CI__VI 1
#define SQ_INTERRUPT_WORD_AUTO_WLT_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_CMN_ENCODING_MASK 0x0c000000
#define SQ_INTERRUPT_WORD_CMN_ENCODING_SHIFT 26
#define SQ_INTERRUPT_WORD_CMN_ENCODING_SIZE 2
#define SQ_INTERRUPT_WORD_CMN_REG_SIZE 28
#define SQ_INTERRUPT_WORD_CMN_SE_ID_MASK__CI__VI 0x03000000
#define SQ_INTERRUPT_WORD_CMN_SE_ID_MASK__SI 0x02000000
#define SQ_INTERRUPT_WORD_CMN_SE_ID_SHIFT__CI__VI 24
#define SQ_INTERRUPT_WORD_CMN_SE_ID_SHIFT__SI 25
#define SQ_INTERRUPT_WORD_CMN_SE_ID_SIZE__CI__VI 2
#define SQ_INTERRUPT_WORD_CMN_SE_ID_SIZE__SI 1
#define SQ_INTERRUPT_WORD_WAVE_CU_ID_MASK 0x00f00000
#define SQ_INTERRUPT_WORD_WAVE_CU_ID_SHIFT 20
#define SQ_INTERRUPT_WORD_WAVE_CU_ID_SIZE 4
#define SQ_INTERRUPT_WORD_WAVE_DATA_MASK 0x000000ff
#define SQ_INTERRUPT_WORD_WAVE_DATA_SHIFT 0x00000000
#define SQ_INTERRUPT_WORD_WAVE_DATA_SIZE 8
#define SQ_INTERRUPT_WORD_WAVE_ENCODING_MASK 0x0c000000
#define SQ_INTERRUPT_WORD_WAVE_ENCODING_SHIFT 26
#define SQ_INTERRUPT_WORD_WAVE_ENCODING_SIZE 2
#define SQ_INTERRUPT_WORD_WAVE_PRIV_MASK__CI__VI 0x00000200
#define SQ_INTERRUPT_WORD_WAVE_PRIV_SHIFT__CI__VI 9
#define SQ_INTERRUPT_WORD_WAVE_PRIV_SIZE__CI__VI 1
#define SQ_INTERRUPT_WORD_WAVE_REG_SIZE 28
#define SQ_INTERRUPT_WORD_WAVE_SE_ID_MASK__CI__VI 0x03000000
#define SQ_INTERRUPT_WORD_WAVE_SE_ID_MASK__SI 0x02000000
#define SQ_INTERRUPT_WORD_WAVE_SE_ID_SHIFT__CI__VI 24
#define SQ_INTERRUPT_WORD_WAVE_SE_ID_SHIFT__SI 25
#define SQ_INTERRUPT_WORD_WAVE_SE_ID_SIZE__CI__VI 2
#define SQ_INTERRUPT_WORD_WAVE_SE_ID_SIZE__SI 1
#define SQ_INTERRUPT_WORD_WAVE_SH_ID_MASK__CI__VI 0x00000100
#define SQ_INTERRUPT_WORD_WAVE_SH_ID_MASK__SI 0x01000000
#define SQ_INTERRUPT_WORD_WAVE_SH_ID_SHIFT__CI__VI 8
#define SQ_INTERRUPT_WORD_WAVE_SH_ID_SHIFT__SI 24
#define SQ_INTERRUPT_WORD_WAVE_SH_ID_SIZE 1
#define SQ_INTERRUPT_WORD_WAVE_SIMD_ID_MASK 0x000c0000
#define SQ_INTERRUPT_WORD_WAVE_SIMD_ID_SHIFT 18
#define SQ_INTERRUPT_WORD_WAVE_SIMD_ID_SIZE 2
#define SQ_INTERRUPT_WORD_WAVE_VM_ID_MASK 0x00003c00
#define SQ_INTERRUPT_WORD_WAVE_VM_ID_SHIFT 10
#define SQ_INTERRUPT_WORD_WAVE_VM_ID_SIZE 4
#define SQ_INTERRUPT_WORD_WAVE_WAVE_ID_MASK 0x0003c000
#define SQ_INTERRUPT_WORD_WAVE_WAVE_ID_SHIFT 14
#define SQ_INTERRUPT_WORD_WAVE_WAVE_ID_SIZE 4
#define SQ_LB_CTR_CTRL_CLEAR_MASK 0x00000004
#define SQ_LB_CTR_CTRL_CLEAR_SHIFT 2
#define SQ_LB_CTR_CTRL_CLEAR_SIZE 1
#define SQ_LB_CTR_CTRL_DEFAULT 0x00000000
#define SQ_LB_CTR_CTRL_LOAD_MASK 0x00000002
#define SQ_LB_CTR_CTRL_LOAD_SHIFT 1
#define SQ_LB_CTR_CTRL_LOAD_SIZE 1
#define SQ_LB_CTR_CTRL_REG_SIZE 32
#define SQ_LB_CTR_CTRL_START_MASK 0x00000001
#define SQ_LB_CTR_CTRL_START_SHIFT 0x00000000
#define SQ_LB_CTR_CTRL_START_SIZE 1
#define SQ_LB_DATA_ALU_CYCLES_DATA_MASK 0xffffffff
#define SQ_LB_DATA_ALU_CYCLES_DATA_SHIFT 0x00000000
#define SQ_LB_DATA_ALU_CYCLES_DATA_SIZE 32
#define SQ_LB_DATA_ALU_CYCLES_DEFAULT 0x00000000
#define SQ_LB_DATA_ALU_CYCLES_REG_SIZE 32
#define SQ_LB_DATA_ALU_STALLS_DATA_MASK 0xffffffff
#define SQ_LB_DATA_ALU_STALLS_DATA_SHIFT 0x00000000
#define SQ_LB_DATA_ALU_STALLS_DATA_SIZE 32
#define SQ_LB_DATA_ALU_STALLS_DEFAULT 0x00000000
#define SQ_LB_DATA_ALU_STALLS_REG_SIZE 32
#define SQ_LB_DATA_TEX_CYCLES_DATA_MASK 0xffffffff
#define SQ_LB_DATA_TEX_CYCLES_DATA_SHIFT 0x00000000
#define SQ_LB_DATA_TEX_CYCLES_DATA_SIZE 32
#define SQ_LB_DATA_TEX_CYCLES_DEFAULT 0x00000000
#define SQ_LB_DATA_TEX_CYCLES_REG_SIZE 32
#define SQ_LB_DATA_TEX_STALLS_DATA_MASK 0xffffffff
#define SQ_LB_DATA_TEX_STALLS_DATA_SHIFT 0x00000000
#define SQ_LB_DATA_TEX_STALLS_DATA_SIZE 32
#define SQ_LB_DATA_TEX_STALLS_DEFAULT 0x00000000
#define SQ_LB_DATA_TEX_STALLS_REG_SIZE 32
#define SQ_LDS_CLK_CTRL_DEFAULT__CI__VI 0x00000000
#define SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_MASK__CI__VI 0x0000ffff
#define SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT__CI__VI 0x00000000
#define SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_SIZE__CI__VI 16
#define SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_MASK__CI__VI 0xffff0000
#define SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT__CI__VI 16
#define SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_SIZE__CI__VI 16
#define SQ_LDS_CLK_CTRL_REG_SIZE__CI__VI 32
#define SQ_MAX_PGM_SGPRS 0x00000068
#define SQ_MAX_PGM_VGPRS 0x00000100
#define SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER0_HI_REG_SIZE 32
#define SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER0_LO_REG_SIZE 32
#define SQ_PERFCOUNTER0_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER0_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER0_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER0_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER0_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER0_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER0_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER0_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER0_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER0_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER0_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER0_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER0_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER0_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER0_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER0_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER0_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER10_HI_REG_SIZE 32
#define SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER10_LO_REG_SIZE 32
#define SQ_PERFCOUNTER10_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER10_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER10_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER10_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER10_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER10_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER10_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER10_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER10_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER10_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER10_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER10_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER10_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER10_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER10_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER10_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER10_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER11_HI_REG_SIZE 32
#define SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER11_LO_REG_SIZE 32
#define SQ_PERFCOUNTER11_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER11_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER11_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER11_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER11_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER11_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER11_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER11_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER11_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER11_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER11_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER11_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER11_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER11_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER11_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER11_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER11_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER12_HI_REG_SIZE 32
#define SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER12_LO_REG_SIZE 32
#define SQ_PERFCOUNTER12_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER12_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER12_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER12_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER12_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER12_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER12_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER12_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER12_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER12_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER12_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER12_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER12_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER12_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER12_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER12_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER12_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER13_HI_REG_SIZE 32
#define SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER13_LO_REG_SIZE 32
#define SQ_PERFCOUNTER13_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER13_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER13_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER13_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER13_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER13_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER13_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER13_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER13_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER13_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER13_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER13_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER13_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER13_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER13_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER13_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER13_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER14_HI_REG_SIZE 32
#define SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER14_LO_REG_SIZE 32
#define SQ_PERFCOUNTER14_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER14_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER14_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER14_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER14_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER14_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER14_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER14_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER14_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER14_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER14_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER14_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER14_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER14_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER14_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER14_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER14_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER15_HI_REG_SIZE 32
#define SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER15_LO_REG_SIZE 32
#define SQ_PERFCOUNTER15_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER15_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER15_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER15_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER15_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER15_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER15_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER15_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER15_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER15_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER15_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER15_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER15_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER15_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER15_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER15_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER15_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER1_HI_REG_SIZE 32
#define SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER1_LO_REG_SIZE 32
#define SQ_PERFCOUNTER1_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER1_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER1_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER1_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER1_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER1_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER1_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER1_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER1_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER1_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER1_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER1_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER1_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER1_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER1_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER1_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER1_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER2_HI_REG_SIZE 32
#define SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER2_LO_REG_SIZE 32
#define SQ_PERFCOUNTER2_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER2_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER2_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER2_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER2_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER2_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER2_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER2_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER2_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER2_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER2_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER2_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER2_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER2_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER2_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER2_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER2_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER3_HI_REG_SIZE 32
#define SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER3_LO_REG_SIZE 32
#define SQ_PERFCOUNTER3_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER3_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER3_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER3_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER3_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER3_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER3_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER3_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER3_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER3_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER3_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER3_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER3_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER3_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER3_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER3_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER3_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER4_HI_REG_SIZE 32
#define SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER4_LO_REG_SIZE 32
#define SQ_PERFCOUNTER4_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER4_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER4_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER4_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER4_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER4_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER4_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER4_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER4_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER4_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER4_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER4_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER4_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER4_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER4_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER4_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER4_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER5_HI_REG_SIZE 32
#define SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER5_LO_REG_SIZE 32
#define SQ_PERFCOUNTER5_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER5_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER5_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER5_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER5_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER5_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER5_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER5_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER5_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER5_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER5_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER5_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER5_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER5_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER5_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER5_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER5_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER6_HI_REG_SIZE 32
#define SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER6_LO_REG_SIZE 32
#define SQ_PERFCOUNTER6_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER6_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER6_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER6_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER6_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER6_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER6_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER6_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER6_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER6_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER6_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER6_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER6_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER6_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER6_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER6_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER6_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER7_HI_REG_SIZE 32
#define SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER7_LO_REG_SIZE 32
#define SQ_PERFCOUNTER7_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER7_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER7_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER7_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER7_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER7_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER7_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER7_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER7_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER7_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER7_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER7_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER7_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER7_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER7_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER7_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER7_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER8_HI_REG_SIZE 32
#define SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER8_LO_REG_SIZE 32
#define SQ_PERFCOUNTER8_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER8_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER8_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER8_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER8_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER8_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER8_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER8_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER8_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER8_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER8_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER8_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER8_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER8_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER8_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER8_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER8_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_MASK 0xffffffff
#define SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_SHIFT 0x00000000
#define SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_SIZE 32
#define SQ_PERFCOUNTER9_HI_REG_SIZE 32
#define SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_MASK 0xffffffff
#define SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_SHIFT 0x00000000
#define SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_SIZE 32
#define SQ_PERFCOUNTER9_LO_REG_SIZE 32
#define SQ_PERFCOUNTER9_SELECT_DEFAULT__CI__VI 0x0f0ff000
#define SQ_PERFCOUNTER9_SELECT_DEFAULT__SI 0x0f000000
#define SQ_PERFCOUNTER9_SELECT_PERF_MODE_MASK 0xf0000000
#define SQ_PERFCOUNTER9_SELECT_PERF_MODE_SHIFT 28
#define SQ_PERFCOUNTER9_SELECT_PERF_MODE_SIZE 4
#define SQ_PERFCOUNTER9_SELECT_PERF_SEL_MASK__CI 0x000000ff
#define SQ_PERFCOUNTER9_SELECT_PERF_SEL_MASK__SI__VI 0x000001ff
#define SQ_PERFCOUNTER9_SELECT_PERF_SEL_SHIFT 0x00000000
#define SQ_PERFCOUNTER9_SELECT_PERF_SEL_SIZE__CI 8
#define SQ_PERFCOUNTER9_SELECT_PERF_SEL_SIZE__SI__VI 9
#define SQ_PERFCOUNTER9_SELECT_REG_SIZE 32
#define SQ_PERFCOUNTER9_SELECT_SIMD_MASK_MASK 0x0f000000
#define SQ_PERFCOUNTER9_SELECT_SIMD_MASK_SHIFT 24
#define SQ_PERFCOUNTER9_SELECT_SIMD_MASK_SIZE 4
#define SQ_PERFCOUNTER9_SELECT_SPM_MODE_MASK__CI__VI 0x00f00000
#define SQ_PERFCOUNTER9_SELECT_SPM_MODE_SHIFT__CI__VI 20
#define SQ_PERFCOUNTER9_SELECT_SPM_MODE_SIZE__CI__VI 4
#define SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_MASK__CI__VI 0x0000f000
#define SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_SHIFT__CI__VI 12
#define SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_MASK__CI__VI 0x000f0000
#define SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_SIZE__CI__VI 4
#define SQ_PERFCOUNTER_CTRL2_DEFAULT__CI__VI 0x00000000
#define SQ_PERFCOUNTER_CTRL2_FORCE_EN_MASK__CI__VI 0x00000001
#define SQ_PERFCOUNTER_CTRL2_FORCE_EN_SHIFT__CI__VI 0x00000000
#define SQ_PERFCOUNTER_CTRL2_FORCE_EN_SIZE__CI__VI 1
#define SQ_PERFCOUNTER_CTRL2_REG_SIZE__CI__VI 32
#define SQ_PERFCOUNTER_CTRL_CNTR_RATE_MASK 0x00001f00
#define SQ_PERFCOUNTER_CTRL_CNTR_RATE_SHIFT 8
#define SQ_PERFCOUNTER_CTRL_CNTR_RATE_SIZE 5
#define SQ_PERFCOUNTER_CTRL_CS_EN_MASK 0x00000040
#define SQ_PERFCOUNTER_CTRL_CS_EN_SHIFT 6
#define SQ_PERFCOUNTER_CTRL_CS_EN_SIZE 1
#define SQ_PERFCOUNTER_CTRL_DEFAULT 0x00000000
#define SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_MASK 0x00002000
#define SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_SHIFT 13
#define SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_SIZE 1
#define SQ_PERFCOUNTER_CTRL_ES_EN_MASK 0x00000008
#define SQ_PERFCOUNTER_CTRL_ES_EN_SHIFT 3
#define SQ_PERFCOUNTER_CTRL_ES_EN_SIZE 1
#define SQ_PERFCOUNTER_CTRL_GS_EN_MASK 0x00000004
#define SQ_PERFCOUNTER_CTRL_GS_EN_SHIFT 2
#define SQ_PERFCOUNTER_CTRL_GS_EN_SIZE 1
#define SQ_PERFCOUNTER_CTRL_HS_EN_MASK 0x00000010
#define SQ_PERFCOUNTER_CTRL_HS_EN_SHIFT 4
#define SQ_PERFCOUNTER_CTRL_HS_EN_SIZE 1
#define SQ_PERFCOUNTER_CTRL_LS_EN_MASK 0x00000020
#define SQ_PERFCOUNTER_CTRL_LS_EN_SHIFT 5
#define SQ_PERFCOUNTER_CTRL_LS_EN_SIZE 1
#define SQ_PERFCOUNTER_CTRL_PS_EN_MASK 0x00000001
#define SQ_PERFCOUNTER_CTRL_PS_EN_SHIFT 0x00000000
#define SQ_PERFCOUNTER_CTRL_PS_EN_SIZE 1
#define SQ_PERFCOUNTER_CTRL_REG_SIZE 32
#define SQ_PERFCOUNTER_CTRL_VS_EN_MASK 0x00000002
#define SQ_PERFCOUNTER_CTRL_VS_EN_SHIFT 1
#define SQ_PERFCOUNTER_CTRL_VS_EN_SIZE 1
#define SQ_PERFCOUNTER_MASK_DEFAULT__CI__VI 0xffffffff
#define SQ_PERFCOUNTER_MASK_REG_SIZE__CI__VI 32
#define SQ_PERFCOUNTER_MASK_SH0_MASK_MASK__CI__VI 0x0000ffff
#define SQ_PERFCOUNTER_MASK_SH0_MASK_SHIFT__CI__VI 0x00000000
#define SQ_PERFCOUNTER_MASK_SH0_MASK_SIZE__CI__VI 16
#define SQ_PERFCOUNTER_MASK_SH1_MASK_MASK__CI__VI 0xffff0000
#define SQ_PERFCOUNTER_MASK_SH1_MASK_SHIFT__CI__VI 16
#define SQ_PERFCOUNTER_MASK_SH1_MASK_SIZE__CI__VI 16
#define SQ_POWER_THROTTLE2_DEFAULT 0x18800004
#define SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_MASK 0x78000000
#define SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_SHIFT 27
#define SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_SIZE 4
#define SQ_POWER_THROTTLE2_MAX_POWER_DELTA_MASK 0x00003fff
#define SQ_POWER_THROTTLE2_MAX_POWER_DELTA_SHIFT 0x00000000
#define SQ_POWER_THROTTLE2_MAX_POWER_DELTA_SIZE 14
#define SQ_POWER_THROTTLE2_REG_SIZE 32
#define SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_MASK 0x03ff0000
#define SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_SHIFT 16
#define SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_SIZE 10
#define SQ_POWER_THROTTLE2_USE_REF_CLOCK_MASK 0x80000000
#define SQ_POWER_THROTTLE2_USE_REF_CLOCK_SHIFT 31
#define SQ_POWER_THROTTLE2_USE_REF_CLOCK_SIZE 1
#define SQ_POWER_THROTTLE_DEFAULT 0x3fff3fff
#define SQ_POWER_THROTTLE_MAX_POWER_MASK 0x3fff0000
#define SQ_POWER_THROTTLE_MAX_POWER_SHIFT 16
#define SQ_POWER_THROTTLE_MAX_POWER_SIZE 14
#define SQ_POWER_THROTTLE_MIN_POWER_MASK 0x00003fff
#define SQ_POWER_THROTTLE_MIN_POWER_SHIFT 0x00000000
#define SQ_POWER_THROTTLE_MIN_POWER_SIZE 14
#define SQ_POWER_THROTTLE_PHASE_OFFSET_MASK 0xc0000000
#define SQ_POWER_THROTTLE_PHASE_OFFSET_SHIFT 30
#define SQ_POWER_THROTTLE_PHASE_OFFSET_SIZE 2
#define SQ_POWER_THROTTLE_REG_SIZE 32
#define SQ_RANDOM_WAVE_PRI_DEFAULT 0x0000007f
#define SQ_RANDOM_WAVE_PRI_REG_SIZE 32
#define SQ_RANDOM_WAVE_PRI_RET_MASK 0x0000007f
#define SQ_RANDOM_WAVE_PRI_RET_SHIFT 0x00000000
#define SQ_RANDOM_WAVE_PRI_RET_SIZE 7
#define SQ_RANDOM_WAVE_PRI_RNG_MASK 0x001ffc00
#define SQ_RANDOM_WAVE_PRI_RNG_SHIFT 10
#define SQ_RANDOM_WAVE_PRI_RNG_SIZE 11
#define SQ_RANDOM_WAVE_PRI_RUI_MASK 0x00000380
#define SQ_RANDOM_WAVE_PRI_RUI_SHIFT 7
#define SQ_RANDOM_WAVE_PRI_RUI_SIZE 3
#define SQ_REG_CREDITS_CMD_CREDITS_MASK 0x00000f00
#define SQ_REG_CREDITS_CMD_CREDITS_SHIFT 8
#define SQ_REG_CREDITS_CMD_CREDITS_SIZE 4
#define SQ_REG_CREDITS_CMD_OVERFLOW_MASK__CI__VI 0x80000000
#define SQ_REG_CREDITS_CMD_OVERFLOW_SHIFT__CI__VI 31
#define SQ_REG_CREDITS_CMD_OVERFLOW_SIZE__CI__VI 1
#define SQ_REG_CREDITS_DEFAULT__CI__VI 0x00000820
#define SQ_REG_CREDITS_DEFAULT__SI 0x00000832
#define SQ_REG_CREDITS_IMMED_OVERFLOW_MASK__CI__VI 0x40000000
#define SQ_REG_CREDITS_IMMED_OVERFLOW_SHIFT__CI__VI 30
#define SQ_REG_CREDITS_IMMED_OVERFLOW_SIZE__CI__VI 1
#define SQ_REG_CREDITS_REG_BUSY_MASK__CI__VI 0x10000000
#define SQ_REG_CREDITS_REG_BUSY_SHIFT__CI__VI 28
#define SQ_REG_CREDITS_REG_BUSY_SIZE__CI__VI 1
#define SQ_REG_CREDITS_REG_SIZE 32
#define SQ_REG_CREDITS_SRBM_CREDITS_MASK 0x0000003f
#define SQ_REG_CREDITS_SRBM_CREDITS_SHIFT 0x00000000
#define SQ_REG_CREDITS_SRBM_CREDITS_SIZE 6
#define SQ_REG_CREDITS_SRBM_OVERFLOW_MASK__CI__VI 0x20000000
#define SQ_REG_CREDITS_SRBM_OVERFLOW_SHIFT__CI__VI 29
#define SQ_REG_CREDITS_SRBM_OVERFLOW_SIZE__CI__VI 1
#define SQ_REG_TIMESTAMP_DEFAULT__CI__VI 0x00000000
#define SQ_REG_TIMESTAMP_REG_SIZE__CI__VI 32
#define SQ_REG_TIMESTAMP_TIMESTAMP_MASK__CI__VI 0x000000ff
#define SQ_REG_TIMESTAMP_TIMESTAMP_SHIFT__CI__VI 0x00000000
#define SQ_REG_TIMESTAMP_TIMESTAMP_SIZE__CI__VI 8
#define SQ_SEC_CNT_DEFAULT__SI__CI 0x00000000
#define SQ_SEC_CNT_LDS_SEC_MASK__SI__CI 0x0000003f
#define SQ_SEC_CNT_LDS_SEC_SHIFT__SI__CI 0x00000000
#define SQ_SEC_CNT_LDS_SEC_SIZE__SI__CI 6
#define SQ_SEC_CNT_REG_SIZE__SI__CI 32
#define SQ_SEC_CNT_SGPR_SEC_MASK__SI__CI 0x00001f00
#define SQ_SEC_CNT_SGPR_SEC_SHIFT__SI__CI 8
#define SQ_SEC_CNT_SGPR_SEC_SIZE__SI__CI 5
#define SQ_SEC_CNT_VGPR_SEC_MASK__SI__CI 0x01ff0000
#define SQ_SEC_CNT_VGPR_SEC_SHIFT__SI__CI 16
#define SQ_SEC_CNT_VGPR_SEC_SIZE__SI__CI 9
#define SQ_TEX_CLK_CTRL_DEFAULT 0x00000000
#define SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_MASK 0x0000ffff
#define SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT 0x00000000
#define SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_SIZE 16
#define SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_MASK 0xffff0000
#define SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT 16
#define SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_SIZE 16
#define SQ_TEX_CLK_CTRL_REG_SIZE 32
#define SQ_THREAD_TRACE_BASE2_ADDR_HI_MASK__CI__VI 0x0000000f
#define SQ_THREAD_TRACE_BASE2_ADDR_HI_SHIFT__CI__VI 0x00000000
#define SQ_THREAD_TRACE_BASE2_ADDR_HI_SIZE__CI__VI 4
#define SQ_THREAD_TRACE_BASE2_ATC_MASK__CI 0x00000010
#define SQ_THREAD_TRACE_BASE2_ATC_SHIFT__CI 4
#define SQ_THREAD_TRACE_BASE2_ATC_SIZE__CI 1
#define SQ_THREAD_TRACE_BASE2_DEFAULT__CI__VI 0x00000000
#define SQ_THREAD_TRACE_BASE2_REG_SIZE__CI__VI 32
#define SQ_THREAD_TRACE_BASE_ADDR_MASK 0xffffffff
#define SQ_THREAD_TRACE_BASE_ADDR_SHIFT 0x00000000
#define SQ_THREAD_TRACE_BASE_ADDR_SIZE 32
#define SQ_THREAD_TRACE_BASE_DEFAULT 0x00000000
#define SQ_THREAD_TRACE_BASE_REG_SIZE 32
#define SQ_THREAD_TRACE_CNTR_CNTR_MASK 0xffffffff
#define SQ_THREAD_TRACE_CNTR_CNTR_SHIFT 0x00000000
#define SQ_THREAD_TRACE_CNTR_CNTR_SIZE 32
#define SQ_THREAD_TRACE_CNTR_DEFAULT 0x00000000
#define SQ_THREAD_TRACE_CNTR_REG_SIZE 32
#define SQ_THREAD_TRACE_CTRL_DEFAULT 0x00000000
#define SQ_THREAD_TRACE_CTRL_REG_SIZE 32
#define SQ_THREAD_TRACE_CTRL_RESET_BUFFER_MASK 0x80000000
#define SQ_THREAD_TRACE_CTRL_RESET_BUFFER_SHIFT 31
#define SQ_THREAD_TRACE_CTRL_RESET_BUFFER_SIZE 1
#define SQ_THREAD_TRACE_HIWATER_DEFAULT 0x00000000
#define SQ_THREAD_TRACE_HIWATER_HIWATER_MASK 0x00000007
#define SQ_THREAD_TRACE_HIWATER_HIWATER_SHIFT 0x00000000
#define SQ_THREAD_TRACE_HIWATER_HIWATER_SIZE 3
#define SQ_THREAD_TRACE_HIWATER_REG_SIZE 32
#define SQ_THREAD_TRACE_LFSR_CS__SI__CI 0x00008097
#define SQ_THREAD_TRACE_LFSR_ES__SI__CI 0x00008029
#define SQ_THREAD_TRACE_LFSR_GS__SI__CI 0x0000801f
#define SQ_THREAD_TRACE_LFSR_HS__SI__CI 0x0000805e
#define SQ_THREAD_TRACE_LFSR_LS__SI__CI 0x0000806b
#define SQ_THREAD_TRACE_LFSR_PS__SI__CI 0x00008016
#define SQ_THREAD_TRACE_LFSR_VS__SI__CI 0x0000801c
#define SQ_THREAD_TRACE_MASK_CU_SEL_MASK 0x0000001f
#define SQ_THREAD_TRACE_MASK_CU_SEL_SHIFT 0x00000000
#define SQ_THREAD_TRACE_MASK_CU_SEL_SIZE 5
#define SQ_THREAD_TRACE_MASK_DEFAULT__CI 0xffffcf80
#define SQ_THREAD_TRACE_MASK_DEFAULT__SI 0xffff0f00
#define SQ_THREAD_TRACE_MASK_RANDOM_SEED_MASK__SI__CI 0xffff0000
#define SQ_THREAD_TRACE_MASK_RANDOM_SEED_SHIFT__SI__CI 16
#define SQ_THREAD_TRACE_MASK_RANDOM_SEED_SIZE__SI__CI 16
#define SQ_THREAD_TRACE_MASK_REG_SIZE 32
#define SQ_THREAD_TRACE_MASK_REG_STALL_EN_MASK__CI__VI 0x00000080
#define SQ_THREAD_TRACE_MASK_REG_STALL_EN_SHIFT__CI__VI 7
#define SQ_THREAD_TRACE_MASK_REG_STALL_EN_SIZE__CI__VI 1
#define SQ_THREAD_TRACE_MASK_SH_SEL_MASK 0x00000020
#define SQ_THREAD_TRACE_MASK_SH_SEL_SHIFT 5
#define SQ_THREAD_TRACE_MASK_SH_SEL_SIZE 1
#define SQ_THREAD_TRACE_MASK_SIMD_EN_MASK 0x00000f00
#define SQ_THREAD_TRACE_MASK_SIMD_EN_SHIFT 8
#define SQ_THREAD_TRACE_MASK_SIMD_EN_SIZE 4
#define SQ_THREAD_TRACE_MASK_SPI_STALL_EN_MASK__CI__VI 0x00004000
#define SQ_THREAD_TRACE_MASK_SPI_STALL_EN_SHIFT__CI__VI 14
#define SQ_THREAD_TRACE_MASK_SPI_STALL_EN_SIZE__CI__VI 1
#define SQ_THREAD_TRACE_MASK_SQ_STALL_EN_MASK__CI__VI 0x00008000
#define SQ_THREAD_TRACE_MASK_SQ_STALL_EN_SHIFT__CI__VI 15
#define SQ_THREAD_TRACE_MASK_SQ_STALL_EN_SIZE__CI__VI 1
#define SQ_THREAD_TRACE_MASK_VM_ID_MASK_MASK 0x00003000
#define SQ_THREAD_TRACE_MASK_VM_ID_MASK_SHIFT 12
#define SQ_THREAD_TRACE_MASK_VM_ID_MASK_SIZE 2
#define SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_MASK 0x02000000
#define SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_SHIFT 25
#define SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_SIZE 1
#define SQ_THREAD_TRACE_MODE_CAPTURE_MODE_MASK 0x01800000
#define SQ_THREAD_TRACE_MODE_CAPTURE_MODE_SHIFT 23
#define SQ_THREAD_TRACE_MODE_CAPTURE_MODE_SIZE 2
#define SQ_THREAD_TRACE_MODE_DEFAULT 0x02049249
#define SQ_THREAD_TRACE_MODE_INTERRUPT_EN_MASK 0x40000000
#define SQ_THREAD_TRACE_MODE_INTERRUPT_EN_SHIFT 30
#define SQ_THREAD_TRACE_MODE_INTERRUPT_EN_SIZE 1
#define SQ_THREAD_TRACE_MODE_ISSUE_MASK_MASK 0x18000000
#define SQ_THREAD_TRACE_MODE_ISSUE_MASK_SHIFT 27
#define SQ_THREAD_TRACE_MODE_ISSUE_MASK_SIZE 2
#define SQ_THREAD_TRACE_MODE_MASK_CS_MASK 0x001c0000
#define SQ_THREAD_TRACE_MODE_MASK_CS_SHIFT 18
#define SQ_THREAD_TRACE_MODE_MASK_CS_SIZE 3
#define SQ_THREAD_TRACE_MODE_MASK_ES_MASK 0x00000e00
#define SQ_THREAD_TRACE_MODE_MASK_ES_SHIFT 9
#define SQ_THREAD_TRACE_MODE_MASK_ES_SIZE 3
#define SQ_THREAD_TRACE_MODE_MASK_GS_MASK 0x000001c0
#define SQ_THREAD_TRACE_MODE_MASK_GS_SHIFT 6
#define SQ_THREAD_TRACE_MODE_MASK_GS_SIZE 3
#define SQ_THREAD_TRACE_MODE_MASK_HS_MASK 0x00007000
#define SQ_THREAD_TRACE_MODE_MASK_HS_SHIFT 12
#define SQ_THREAD_TRACE_MODE_MASK_HS_SIZE 3
#define SQ_THREAD_TRACE_MODE_MASK_LS_MASK 0x00038000
#define SQ_THREAD_TRACE_MODE_MASK_LS_SHIFT 15
#define SQ_THREAD_TRACE_MODE_MASK_LS_SIZE 3
#define SQ_THREAD_TRACE_MODE_MASK_PS_MASK 0x00000007
#define SQ_THREAD_TRACE_MODE_MASK_PS_SHIFT 0x00000000
#define SQ_THREAD_TRACE_MODE_MASK_PS_SIZE 3
#define SQ_THREAD_TRACE_MODE_MASK_VS_MASK 0x00000038
#define SQ_THREAD_TRACE_MODE_MASK_VS_SHIFT 3
#define SQ_THREAD_TRACE_MODE_MASK_VS_SIZE 3
#define SQ_THREAD_TRACE_MODE_MODE_MASK 0x00600000
#define SQ_THREAD_TRACE_MODE_MODE_SHIFT 21
#define SQ_THREAD_TRACE_MODE_MODE_SIZE 2
#define SQ_THREAD_TRACE_MODE_PRIV_MASK 0x04000000
#define SQ_THREAD_TRACE_MODE_PRIV_SHIFT 26
#define SQ_THREAD_TRACE_MODE_PRIV_SIZE 1
#define SQ_THREAD_TRACE_MODE_REG_SIZE 32
#define SQ_THREAD_TRACE_MODE_TEST_MODE_MASK 0x20000000
#define SQ_THREAD_TRACE_MODE_TEST_MODE_SHIFT 29
#define SQ_THREAD_TRACE_MODE_TEST_MODE_SIZE 1
#define SQ_THREAD_TRACE_MODE_WRAP_MASK 0x80000000
#define SQ_THREAD_TRACE_MODE_WRAP_SHIFT 31
#define SQ_THREAD_TRACE_MODE_WRAP_SIZE 1
#define SQ_THREAD_TRACE_PERF_MASK_DEFAULT 0xffffffff
#define SQ_THREAD_TRACE_PERF_MASK_REG_SIZE 32
#define SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_MASK 0x0000ffff
#define SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_SHIFT 0x00000000
#define SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_SIZE 16
#define SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_MASK 0xffff0000
#define SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_SHIFT 16
#define SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_SIZE 16
#define SQ_THREAD_TRACE_SIZE_DEFAULT 0x00000000
#define SQ_THREAD_TRACE_SIZE_REG_SIZE 32
#define SQ_THREAD_TRACE_SIZE_SIZE_MASK 0x003fffff
#define SQ_THREAD_TRACE_SIZE_SIZE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_SIZE_SIZE_SIZE 22
#define SQ_THREAD_TRACE_STATUS_BUSY_MASK 0x40000000
#define SQ_THREAD_TRACE_STATUS_BUSY_SHIFT 30
#define SQ_THREAD_TRACE_STATUS_BUSY_SIZE 1
#define SQ_THREAD_TRACE_STATUS_DEFAULT 0x00000000
#define SQ_THREAD_TRACE_STATUS_FINISH_DONE_MASK__CI__VI 0x03ff0000
#define SQ_THREAD_TRACE_STATUS_FINISH_DONE_MASK__SI 0x00070000
#define SQ_THREAD_TRACE_STATUS_FINISH_DONE_SHIFT 16
#define SQ_THREAD_TRACE_STATUS_FINISH_DONE_SIZE__CI__VI 10
#define SQ_THREAD_TRACE_STATUS_FINISH_DONE_SIZE__SI 3
#define SQ_THREAD_TRACE_STATUS_FINISH_PENDING_MASK__CI__VI 0x000003ff
#define SQ_THREAD_TRACE_STATUS_FINISH_PENDING_MASK__SI 0x00000007
#define SQ_THREAD_TRACE_STATUS_FINISH_PENDING_SHIFT 0x00000000
#define SQ_THREAD_TRACE_STATUS_FINISH_PENDING_SIZE__CI__VI 10
#define SQ_THREAD_TRACE_STATUS_FINISH_PENDING_SIZE__SI 3
#define SQ_THREAD_TRACE_STATUS_FULL_MASK 0x80000000
#define SQ_THREAD_TRACE_STATUS_FULL_SHIFT 31
#define SQ_THREAD_TRACE_STATUS_FULL_SIZE 1
#define SQ_THREAD_TRACE_STATUS_NEW_BUF_MASK 0x20000000
#define SQ_THREAD_TRACE_STATUS_NEW_BUF_SHIFT 29
#define SQ_THREAD_TRACE_STATUS_NEW_BUF_SIZE 1
#define SQ_THREAD_TRACE_STATUS_REG_SIZE 32
#define SQ_THREAD_TRACE_TIME_UNIT 0x00000004
#define SQ_THREAD_TRACE_TOKEN_MASK2_DEFAULT__CI 0x0000ffff
#define SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_MASK__CI 0x0000ffff
#define SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_SHIFT__CI__VI 0x00000000
#define SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_SIZE__CI 16
#define SQ_THREAD_TRACE_TOKEN_MASK2_REG_SIZE__CI__VI 32
#define SQ_THREAD_TRACE_TOKEN_MASK_DEFAULT 0x00ffffff
#define SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_MASK__CI__VI 0x01000000
#define SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_SHIFT__CI__VI 24
#define SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_SIZE__CI__VI 1
#define SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_MASK 0x00ff0000
#define SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_SHIFT 16
#define SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_SIZE 8
#define SQ_THREAD_TRACE_TOKEN_MASK_REG_SIZE 32
#define SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_MASK 0x0000ffff
#define SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_SHIFT 0x00000000
#define SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_SIZE 16
#define SQ_THREAD_TRACE_USERDATA_0_DATA_MASK 0xffffffff
#define SQ_THREAD_TRACE_USERDATA_0_DATA_SHIFT 0x00000000
#define SQ_THREAD_TRACE_USERDATA_0_DATA_SIZE 32
#define SQ_THREAD_TRACE_USERDATA_0_REG_SIZE 32
#define SQ_THREAD_TRACE_USERDATA_1_DATA_MASK 0xffffffff
#define SQ_THREAD_TRACE_USERDATA_1_DATA_SHIFT 0x00000000
#define SQ_THREAD_TRACE_USERDATA_1_DATA_SIZE 32
#define SQ_THREAD_TRACE_USERDATA_1_REG_SIZE 32
#define SQ_THREAD_TRACE_USERDATA_2_DATA_MASK 0xffffffff
#define SQ_THREAD_TRACE_USERDATA_2_DATA_SHIFT 0x00000000
#define SQ_THREAD_TRACE_USERDATA_2_DATA_SIZE 32
#define SQ_THREAD_TRACE_USERDATA_2_REG_SIZE 32
#define SQ_THREAD_TRACE_USERDATA_3_DATA_MASK 0xffffffff
#define SQ_THREAD_TRACE_USERDATA_3_DATA_SHIFT 0x00000000
#define SQ_THREAD_TRACE_USERDATA_3_DATA_SIZE 32
#define SQ_THREAD_TRACE_USERDATA_3_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_CMN_REG_SIZE 16
#define SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_MASK 0x0000fc00
#define SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_SHIFT 10
#define SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_SIZE 6
#define SQ_THREAD_TRACE_WORD_EVENT_REG_SIZE 16
#define SQ_THREAD_TRACE_WORD_EVENT_SH_ID_MASK 0x00000020
#define SQ_THREAD_TRACE_WORD_EVENT_SH_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_EVENT_SH_ID_SIZE 1
#define SQ_THREAD_TRACE_WORD_EVENT_STAGE_MASK 0x000001c0
#define SQ_THREAD_TRACE_WORD_EVENT_STAGE_SHIFT 6
#define SQ_THREAD_TRACE_WORD_EVENT_STAGE_SIZE 3
#define SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_MASK 0xffff0000
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_SHIFT 16
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_SIZE 16
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_MASK 0x00000600
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_SHIFT 9
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_SIZE 2
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_MASK 0x000001e0
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_MASK 0x00ffffff
#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_SIZE 24
#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_INST_REG_SIZE 16
#define SQ_THREAD_TRACE_WORD_INST_SIMD_ID_MASK 0x00000600
#define SQ_THREAD_TRACE_WORD_INST_SIMD_ID_SHIFT 9
#define SQ_THREAD_TRACE_WORD_INST_SIMD_ID_SIZE 2
#define SQ_THREAD_TRACE_WORD_INST_SIZE_MASK__SI__CI 0x00000800
#define SQ_THREAD_TRACE_WORD_INST_SIZE_SHIFT__SI__CI 11
#define SQ_THREAD_TRACE_WORD_INST_SIZE_SIZE__SI__CI 1
#define SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_MASK 0x000003c0
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_SHIFT 6
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_MASK 0xffff0000
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_SHIFT 16
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_SIZE 16
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_MASK 0x00000020
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_SIZE 1
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_MASK 0x0000c000
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_SHIFT 14
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_SIZE 2
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_MASK 0x00003c00
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_SHIFT 10
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_MASK 0x0000ffff
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_SIZE 16
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_REG_SIZE 16
#define SQ_THREAD_TRACE_WORD_INST_WAVE_ID_MASK 0x000001e0
#define SQ_THREAD_TRACE_WORD_INST_WAVE_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_INST_WAVE_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_ISSUE_INST0_MASK 0x00000300
#define SQ_THREAD_TRACE_WORD_ISSUE_INST0_SHIFT 8
#define SQ_THREAD_TRACE_WORD_ISSUE_INST0_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST1_MASK 0x00000c00
#define SQ_THREAD_TRACE_WORD_ISSUE_INST1_SHIFT 10
#define SQ_THREAD_TRACE_WORD_ISSUE_INST1_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST2_MASK 0x00003000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST2_SHIFT 12
#define SQ_THREAD_TRACE_WORD_ISSUE_INST2_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST3_MASK 0x0000c000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST3_SHIFT 14
#define SQ_THREAD_TRACE_WORD_ISSUE_INST3_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST4_MASK 0x00030000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST4_SHIFT 16
#define SQ_THREAD_TRACE_WORD_ISSUE_INST4_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST5_MASK 0x000c0000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST5_SHIFT 18
#define SQ_THREAD_TRACE_WORD_ISSUE_INST5_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST6_MASK 0x00300000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST6_SHIFT 20
#define SQ_THREAD_TRACE_WORD_ISSUE_INST6_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST7_MASK 0x00c00000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST7_SHIFT 22
#define SQ_THREAD_TRACE_WORD_ISSUE_INST7_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST8_MASK 0x03000000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST8_SHIFT 24
#define SQ_THREAD_TRACE_WORD_ISSUE_INST8_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_INST9_MASK 0x0c000000
#define SQ_THREAD_TRACE_WORD_ISSUE_INST9_SHIFT 26
#define SQ_THREAD_TRACE_WORD_ISSUE_INST9_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_MASK 0x00000060
#define SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_SIZE 2
#define SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_MASK__CI__VI 0x0000e000
#define SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_MASK__SI 0x000000c0
#define SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_SHIFT__CI__VI 13
#define SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_SHIFT__SI 6
#define SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_SIZE__CI__VI 3
#define SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_SIZE__SI 2
#define SQ_THREAD_TRACE_WORD_MISC_REG_SIZE 16
#define SQ_THREAD_TRACE_WORD_MISC_SH_ID_MASK__CI__VI 0x00001000
#define SQ_THREAD_TRACE_WORD_MISC_SH_ID_MASK__SI 0x00000020
#define SQ_THREAD_TRACE_WORD_MISC_SH_ID_SHIFT__CI__VI 12
#define SQ_THREAD_TRACE_WORD_MISC_SH_ID_SHIFT__SI 5
#define SQ_THREAD_TRACE_WORD_MISC_SH_ID_SIZE 1
#define SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_MASK__CI__VI 0x00000ff0
#define SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_MASK__SI 0x00000010
#define SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_SIZE__CI__VI 8
#define SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_SIZE__SI 1
#define SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_MASK 0x01fff000
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_SHIFT 12
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_SIZE 13
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_MASK 0xfe000000
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_SHIFT 25
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_SIZE 7
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_MASK 0x00000c00
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_SHIFT 10
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_SIZE 2
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_MASK 0x000003c0
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_SHIFT 6
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_MASK 0x00000020
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_SIZE 1
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_MASK 0x0000003f
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_SIZE 6
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_MASK 0x0007ffc0
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_SHIFT 6
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_SIZE 13
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_MASK 0xfff80000
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_SHIFT 19
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_SIZE 13
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_DISPATCHER_MASK__SI 0x000003e0
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_DISPATCHER_SHIFT__SI 5
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_DISPATCHER_SIZE__SI 5
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_MASK__CI__VI 0x00000180
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_SHIFT__CI__VI 7
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_SIZE__CI__VI 2
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_MASK__CI__VI 0x00000060
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_SHIFT__CI__VI 5
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_SIZE__CI__VI 2
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_MASK 0xffff0000
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_SHIFT 16
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_SIZE 16
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_MASK__CI__VI 0x00000200
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_SHIFT__CI__VI 9
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_SIZE__CI__VI 1
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_MASK 0x00008000
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_SHIFT 15
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_SIZE 1
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_MASK 0x00004000
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_SHIFT 14
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_SIZE 1
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_MASK 0x00001c00
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_SHIFT 10
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_SIZE 3
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_MASK 0xffffffff
#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_SIZE 32
#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_MASK__CI__VI 0xffff0000
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_SHIFT__CI__VI 16
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_SIZE__CI__VI 16
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DEFAULT__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_MASK__CI__VI 0x00000180
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_SHIFT__CI__VI 7
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_SIZE__CI__VI 2
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_MASK__CI__VI 0x00000060
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_SHIFT__CI__VI 5
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_SIZE__CI__VI 2
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_MASK__CI__VI 0x0000fe00
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_SHIFT__CI__VI 9
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_SIZE__CI__VI 7
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_SIZE__CI__VI 32
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_MASK__CI__VI 0x00000010
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_SHIFT__CI__VI 4
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_SIZE__CI__VI 1
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_MASK__CI__VI 0x0000000f
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_SHIFT__CI__VI 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_SIZE__CI__VI 4
#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_MASK__CI__VI 0x0000ffff
#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_SHIFT__CI__VI 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_SIZE__CI__VI 16
#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DEFAULT__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_REG_SIZE__CI__VI 32
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_MASK 0xffff0000
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_SHIFT 16
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_SIZE 16
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_MASK 0xffffffff
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_SIZE 32
#define SQ_THREAD_TRACE_WORD_TIME_DEFAULT__SI 0x00000000
#define SQ_THREAD_TRACE_WORD_TIME_PACKET_LOST_MASK__SI 0x00008000
#define SQ_THREAD_TRACE_WORD_TIME_PACKET_LOST_SHIFT__SI 15
#define SQ_THREAD_TRACE_WORD_TIME_PACKET_LOST_SIZE__SI 1
#define SQ_THREAD_TRACE_WORD_TIME_REG_SIZE__SI 16
#define SQ_THREAD_TRACE_WORD_TIME_TIME_DELTA_MASK__SI 0x00003ff0
#define SQ_THREAD_TRACE_WORD_TIME_TIME_DELTA_SHIFT__SI 4
#define SQ_THREAD_TRACE_WORD_TIME_TIME_DELTA_SIZE__SI 10
#define SQ_THREAD_TRACE_WORD_TIME_TIME_RESET_MASK__SI 0x00004000
#define SQ_THREAD_TRACE_WORD_TIME_TIME_RESET_SHIFT__SI 14
#define SQ_THREAD_TRACE_WORD_TIME_TIME_RESET_SIZE__SI 1
#define SQ_THREAD_TRACE_WORD_TIME_TOKEN_TYPE_MASK__SI 0x0000000f
#define SQ_THREAD_TRACE_WORD_TIME_TOKEN_TYPE_SHIFT__SI 0x00000000
#define SQ_THREAD_TRACE_WORD_TIME_TOKEN_TYPE_SIZE__SI 4
#define SQ_THREAD_TRACE_WORD_WAVE_CU_ID_MASK 0x000003c0
#define SQ_THREAD_TRACE_WORD_WAVE_CU_ID_SHIFT 6
#define SQ_THREAD_TRACE_WORD_WAVE_CU_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_WAVE_REG_SIZE 16
#define SQ_THREAD_TRACE_WORD_WAVE_SH_ID_MASK 0x00000020
#define SQ_THREAD_TRACE_WORD_WAVE_SH_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_WAVE_SH_ID_SIZE 1
#define SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_MASK 0x0000c000
#define SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_SHIFT 14
#define SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_SIZE 2
#define SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_MASK 0x1fc00000
#define SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_SHIFT 22
#define SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_SIZE 7
#define SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_MASK 0x000003c0
#define SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_SHIFT 6
#define SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_MASK 0x001f0000
#define SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_SHIFT 16
#define SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_SIZE 5
#define SQ_THREAD_TRACE_WORD_WAVE_START_REG_SIZE 32
#define SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_MASK 0x00000020
#define SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_SHIFT 5
#define SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_SIZE 1
#define SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_MASK 0x0000c000
#define SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_SHIFT 14
#define SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_SIZE 2
#define SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_MASK 0xe0000000
#define SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_SHIFT 29
#define SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_SIZE 3
#define SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_MASK 0x00200000
#define SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_SHIFT 21
#define SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_SIZE 1
#define SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_MASK 0x00003c00
#define SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_SHIFT 10
#define SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_SIZE 4
#define SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_MASK 0x00000010
#define SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_SHIFT 4
#define SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_SIZE 1
#define SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_MASK 0x0000000f
#define SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_SIZE 4
#define SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_MASK 0x00003c00
#define SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_SHIFT 10
#define SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_SIZE 4
#define SQ_THREAD_TRACE_WPTR_READ_OFFSET_MASK 0xc0000000
#define SQ_THREAD_TRACE_WPTR_READ_OFFSET_SHIFT 30
#define SQ_THREAD_TRACE_WPTR_READ_OFFSET_SIZE 2
#define SQ_THREAD_TRACE_WPTR_REG_SIZE 32
#define SQ_THREAD_TRACE_WPTR_WPTR_MASK 0x3fffffff
#define SQ_THREAD_TRACE_WPTR_WPTR_SHIFT 0x00000000
#define SQ_THREAD_TRACE_WPTR_WPTR_SIZE 30
#define SQ_TIME_HI_DEFAULT 0x00000000
#define SQ_TIME_HI_REG_SIZE 32
#define SQ_TIME_HI_TIME_MASK 0xffffffff
#define SQ_TIME_HI_TIME_SHIFT 0x00000000
#define SQ_TIME_HI_TIME_SIZE 32
#define SQ_TIME_LO_DEFAULT 0x00000000
#define SQ_TIME_LO_REG_SIZE 32
#define SQ_TIME_LO_TIME_MASK 0xffffffff
#define SQ_TIME_LO_TIME_SHIFT 0x00000000
#define SQ_TIME_LO_TIME_SIZE 32
#define SQ_WAVE_EXEC_HI_EXEC_HI_MASK 0xffffffff
#define SQ_WAVE_EXEC_HI_EXEC_HI_SHIFT 0x00000000
#define SQ_WAVE_EXEC_HI_EXEC_HI_SIZE 32
#define SQ_WAVE_EXEC_HI_REG_SIZE 32
#define SQ_WAVE_EXEC_LO_EXEC_LO_MASK 0xffffffff
#define SQ_WAVE_EXEC_LO_EXEC_LO_SHIFT 0x00000000
#define SQ_WAVE_EXEC_LO_EXEC_LO_SIZE 32
#define SQ_WAVE_EXEC_LO_REG_SIZE 32
#define SQ_WAVE_GPR_ALLOC_REG_SIZE 32
#define SQ_WAVE_GPR_ALLOC_SGPR_BASE_MASK 0x003f0000
#define SQ_WAVE_GPR_ALLOC_SGPR_BASE_SHIFT 16
#define SQ_WAVE_GPR_ALLOC_SGPR_BASE_SIZE 6
#define SQ_WAVE_GPR_ALLOC_SGPR_SIZE_MASK 0x0f000000
#define SQ_WAVE_GPR_ALLOC_SGPR_SIZE_SHIFT 24
#define SQ_WAVE_GPR_ALLOC_SGPR_SIZE_SIZE 4
#define SQ_WAVE_GPR_ALLOC_VGPR_BASE_MASK 0x0000003f
#define SQ_WAVE_GPR_ALLOC_VGPR_BASE_SHIFT 0x00000000
#define SQ_WAVE_GPR_ALLOC_VGPR_BASE_SIZE 6
#define SQ_WAVE_GPR_ALLOC_VGPR_SIZE_MASK 0x00003f00
#define SQ_WAVE_GPR_ALLOC_VGPR_SIZE_SHIFT 8
#define SQ_WAVE_GPR_ALLOC_VGPR_SIZE_SIZE 6
#define SQ_WAVE_HW_ID_CU_ID_MASK 0x00000f00
#define SQ_WAVE_HW_ID_CU_ID_SHIFT 8
#define SQ_WAVE_HW_ID_CU_ID_SIZE 4
#define SQ_WAVE_HW_ID_ME_ID_MASK__CI__VI 0xc0000000
#define SQ_WAVE_HW_ID_ME_ID_SHIFT__CI__VI 30
#define SQ_WAVE_HW_ID_ME_ID_SIZE__CI__VI 2
#define SQ_WAVE_HW_ID_PIPE_ID_MASK__CI__VI 0x000000c0
#define SQ_WAVE_HW_ID_PIPE_ID_SHIFT__CI__VI 6
#define SQ_WAVE_HW_ID_PIPE_ID_SIZE__CI__VI 2
#define SQ_WAVE_HW_ID_QUEUE_ID_MASK__CI__VI 0x07000000
#define SQ_WAVE_HW_ID_QUEUE_ID_SHIFT__CI__VI 24
#define SQ_WAVE_HW_ID_QUEUE_ID_SIZE__CI__VI 3
#define SQ_WAVE_HW_ID_REG_SIZE 32
#define SQ_WAVE_HW_ID_RING_ID_MASK__SI 0x07000000
#define SQ_WAVE_HW_ID_RING_ID_SHIFT__SI 24
#define SQ_WAVE_HW_ID_RING_ID_SIZE__SI 3
#define SQ_WAVE_HW_ID_SE_ID_MASK__CI__VI 0x00006000
#define SQ_WAVE_HW_ID_SE_ID_MASK__SI 0x00002000
#define SQ_WAVE_HW_ID_SE_ID_SHIFT 13
#define SQ_WAVE_HW_ID_SE_ID_SIZE__CI__VI 2
#define SQ_WAVE_HW_ID_SE_ID_SIZE__SI 1
#define SQ_WAVE_HW_ID_SH_ID_MASK 0x00001000
#define SQ_WAVE_HW_ID_SH_ID_SHIFT 12
#define SQ_WAVE_HW_ID_SH_ID_SIZE 1
#define SQ_WAVE_HW_ID_SIMD_ID_MASK 0x00000030
#define SQ_WAVE_HW_ID_SIMD_ID_SHIFT 4
#define SQ_WAVE_HW_ID_SIMD_ID_SIZE 2
#define SQ_WAVE_HW_ID_STATE_ID_MASK 0x38000000
#define SQ_WAVE_HW_ID_STATE_ID_SHIFT 27
#define SQ_WAVE_HW_ID_STATE_ID_SIZE 3
#define SQ_WAVE_HW_ID_TG_ID_MASK 0x000f0000
#define SQ_WAVE_HW_ID_TG_ID_SHIFT 16
#define SQ_WAVE_HW_ID_TG_ID_SIZE 4
#define SQ_WAVE_HW_ID_VM_ID_MASK 0x00f00000
#define SQ_WAVE_HW_ID_VM_ID_SHIFT 20
#define SQ_WAVE_HW_ID_VM_ID_SIZE 4
#define SQ_WAVE_HW_ID_WAVE_ID_MASK 0x0000000f
#define SQ_WAVE_HW_ID_WAVE_ID_SHIFT 0x00000000
#define SQ_WAVE_HW_ID_WAVE_ID_SIZE 4
#define SQ_WAVE_IB_DBG0_ECC_ST_SIZE 2
#define SQ_WAVE_IB_DBG0_HYB_CNT_SIZE 2
#define SQ_WAVE_IB_DBG0_IBUF_RPTR_MASK 0x00000300
#define SQ_WAVE_IB_DBG0_IBUF_RPTR_SHIFT 8
#define SQ_WAVE_IB_DBG0_IBUF_RPTR_SIZE 2
#define SQ_WAVE_IB_DBG0_IBUF_ST_MASK 0x00000007
#define SQ_WAVE_IB_DBG0_IBUF_ST_SHIFT 0x00000000
#define SQ_WAVE_IB_DBG0_IBUF_ST_SIZE 3
#define SQ_WAVE_IB_DBG0_IBUF_WPTR_MASK 0x00000c00
#define SQ_WAVE_IB_DBG0_IBUF_WPTR_SHIFT 10
#define SQ_WAVE_IB_DBG0_IBUF_WPTR_SIZE 2
#define SQ_WAVE_IB_DBG0_INST_STR_ST_SHIFT 16
#define SQ_WAVE_IB_DBG0_IS_HYB_SIZE 1
#define SQ_WAVE_IB_DBG0_KILL_MASK__CI 0x08000000
#define SQ_WAVE_IB_DBG0_KILL_SHIFT__CI 27
#define SQ_WAVE_IB_DBG0_KILL_SIZE__CI__VI 1
#define SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_MASK__CI 0x10000000
#define SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_SHIFT__CI 28
#define SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_SIZE__CI__VI 1
#define SQ_WAVE_IB_DBG0_NEED_NEXT_DW_MASK 0x00000010
#define SQ_WAVE_IB_DBG0_NEED_NEXT_DW_SHIFT 4
#define SQ_WAVE_IB_DBG0_NEED_NEXT_DW_SIZE 1
#define SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_MASK 0x000000e0
#define SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_SHIFT 5
#define SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_SIZE 3
#define SQ_WAVE_IB_DBG0_PC_INVALID_MASK 0x00000008
#define SQ_WAVE_IB_DBG0_PC_INVALID_SHIFT 3
#define SQ_WAVE_IB_DBG0_PC_INVALID_SIZE 1
#define SQ_WAVE_IB_DBG0_REG_SIZE 32
#define SQ_WAVE_IB_STS_DEFAULT 0x00000000
#define SQ_WAVE_IB_STS_EXP_CNT_MASK 0x00000070
#define SQ_WAVE_IB_STS_EXP_CNT_SHIFT 4
#define SQ_WAVE_IB_STS_EXP_CNT_SIZE 3
#define SQ_WAVE_IB_STS_LGKM_CNT_MASK__CI__VI 0x00000f00
#define SQ_WAVE_IB_STS_LGKM_CNT_MASK__SI 0x00001f00
#define SQ_WAVE_IB_STS_LGKM_CNT_SHIFT 8
#define SQ_WAVE_IB_STS_LGKM_CNT_SIZE__CI__VI 4
#define SQ_WAVE_IB_STS_LGKM_CNT_SIZE__SI 5
#define SQ_WAVE_IB_STS_REG_SIZE 32
#define SQ_WAVE_IB_STS_VALU_CNT_MASK__CI__VI 0x00007000
#define SQ_WAVE_IB_STS_VALU_CNT_MASK__SI 0x0000e000
#define SQ_WAVE_IB_STS_VALU_CNT_SHIFT__CI__VI 12
#define SQ_WAVE_IB_STS_VALU_CNT_SHIFT__SI 13
#define SQ_WAVE_IB_STS_VALU_CNT_SIZE 3
#define SQ_WAVE_IB_STS_VM_CNT_MASK 0x0000000f
#define SQ_WAVE_IB_STS_VM_CNT_SHIFT 0x00000000
#define SQ_WAVE_IB_STS_VM_CNT_SIZE 4
#define SQ_WAVE_INST_DW0_INST_DW0_MASK 0xffffffff
#define SQ_WAVE_INST_DW0_INST_DW0_SHIFT 0x00000000
#define SQ_WAVE_INST_DW0_INST_DW0_SIZE 32
#define SQ_WAVE_INST_DW0_REG_SIZE 32
#define SQ_WAVE_INST_DW1_INST_DW1_MASK 0xffffffff
#define SQ_WAVE_INST_DW1_INST_DW1_SHIFT 0x00000000
#define SQ_WAVE_INST_DW1_INST_DW1_SIZE 32
#define SQ_WAVE_INST_DW1_REG_SIZE 32
#define SQ_WAVE_LDS_ALLOC_LDS_BASE_MASK 0x000000ff
#define SQ_WAVE_LDS_ALLOC_LDS_BASE_SHIFT 0x00000000
#define SQ_WAVE_LDS_ALLOC_LDS_BASE_SIZE 8
#define SQ_WAVE_LDS_ALLOC_LDS_SIZE_MASK 0x001ff000
#define SQ_WAVE_LDS_ALLOC_LDS_SIZE_SHIFT 12
#define SQ_WAVE_LDS_ALLOC_LDS_SIZE_SIZE 9
#define SQ_WAVE_LDS_ALLOC_REG_SIZE 32
#define SQ_WAVE_M0_M0_MASK 0xffffffff
#define SQ_WAVE_M0_M0_SHIFT 0x00000000
#define SQ_WAVE_M0_M0_SIZE 32
#define SQ_WAVE_M0_REG_SIZE 32
#define SQ_WAVE_MODE_CSP_MASK 0xe0000000
#define SQ_WAVE_MODE_CSP_SHIFT 29
#define SQ_WAVE_MODE_CSP_SIZE 3
#define SQ_WAVE_MODE_DEBUG_EN_MASK 0x00000800
#define SQ_WAVE_MODE_DEBUG_EN_SHIFT 11
#define SQ_WAVE_MODE_DEBUG_EN_SIZE 1
#define SQ_WAVE_MODE_DX10_CLAMP_MASK 0x00000100
#define SQ_WAVE_MODE_DX10_CLAMP_SHIFT 8
#define SQ_WAVE_MODE_DX10_CLAMP_SIZE 1
#define SQ_WAVE_MODE_EXCP_EN_MASK__CI__VI 0x001ff000
#define SQ_WAVE_MODE_EXCP_EN_MASK__SI 0x0007f000
#define SQ_WAVE_MODE_EXCP_EN_SHIFT 12
#define SQ_WAVE_MODE_EXCP_EN_SIZE__CI__VI 9
#define SQ_WAVE_MODE_EXCP_EN_SIZE__SI 7
#define SQ_WAVE_MODE_FP_DENORM_MASK 0x000000f0
#define SQ_WAVE_MODE_FP_DENORM_SHIFT 4
#define SQ_WAVE_MODE_FP_DENORM_SIZE 4
#define SQ_WAVE_MODE_FP_ROUND_MASK 0x0000000f
#define SQ_WAVE_MODE_FP_ROUND_SHIFT 0x00000000
#define SQ_WAVE_MODE_FP_ROUND_SIZE 4
#define SQ_WAVE_MODE_IEEE_MASK 0x00000200
#define SQ_WAVE_MODE_IEEE_SHIFT 9
#define SQ_WAVE_MODE_IEEE_SIZE 1
#define SQ_WAVE_MODE_LOD_CLAMPED_MASK 0x00000400
#define SQ_WAVE_MODE_LOD_CLAMPED_SHIFT 10
#define SQ_WAVE_MODE_LOD_CLAMPED_SIZE 1
#define SQ_WAVE_MODE_REG_SIZE 32
#define SQ_WAVE_MODE_VSKIP_MASK 0x10000000
#define SQ_WAVE_MODE_VSKIP_SHIFT 28
#define SQ_WAVE_MODE_VSKIP_SIZE 1
#define SQ_WAVE_PC_HI_PC_HI_SHIFT 0x00000000
#define SQ_WAVE_PC_HI_REG_SIZE 32
#define SQ_WAVE_PC_LO_PC_LO_MASK 0xffffffff
#define SQ_WAVE_PC_LO_PC_LO_SHIFT 0x00000000
#define SQ_WAVE_PC_LO_PC_LO_SIZE 32
#define SQ_WAVE_PC_LO_REG_SIZE 32
#define SQ_WAVE_STATUS_COND_DBG_SYS_MASK__CI__VI 0x00200000
#define SQ_WAVE_STATUS_COND_DBG_SYS_SHIFT__CI__VI 21
#define SQ_WAVE_STATUS_COND_DBG_SYS_SIZE__CI__VI 1
#define SQ_WAVE_STATUS_COND_DBG_USER_MASK__CI__VI 0x00100000
#define SQ_WAVE_STATUS_COND_DBG_USER_SHIFT__CI__VI 20
#define SQ_WAVE_STATUS_COND_DBG_USER_SIZE__CI__VI 1
#define SQ_WAVE_STATUS_DATA_ATC_MASK__CI 0x00400000
#define SQ_WAVE_STATUS_DATA_ATC_SHIFT__CI 22
#define SQ_WAVE_STATUS_DATA_ATC_SIZE__CI 1
#define SQ_WAVE_STATUS_DISPATCH_CACHE_CTRL_MASK__CI 0x07000000
#define SQ_WAVE_STATUS_DISPATCH_CACHE_CTRL_SHIFT__CI 24
#define SQ_WAVE_STATUS_DISPATCH_CACHE_CTRL_SIZE__CI 3
#define SQ_WAVE_STATUS_ECC_ERR_MASK 0x00020000
#define SQ_WAVE_STATUS_ECC_ERR_SHIFT 17
#define SQ_WAVE_STATUS_ECC_ERR_SIZE 1
#define SQ_WAVE_STATUS_EXECZ_MASK 0x00000200
#define SQ_WAVE_STATUS_EXECZ_SHIFT 9
#define SQ_WAVE_STATUS_EXECZ_SIZE 1
#define SQ_WAVE_STATUS_EXPORT_RDY_MASK 0x00000100
#define SQ_WAVE_STATUS_EXPORT_RDY_SHIFT 8
#define SQ_WAVE_STATUS_EXPORT_RDY_SIZE 1
#define SQ_WAVE_STATUS_HALT_MASK 0x00002000
#define SQ_WAVE_STATUS_HALT_SHIFT 13
#define SQ_WAVE_STATUS_HALT_SIZE 1
#define SQ_WAVE_STATUS_INST_ATC_MASK__CI__VI 0x00800000
#define SQ_WAVE_STATUS_INST_ATC_SHIFT__CI__VI 23
#define SQ_WAVE_STATUS_INST_ATC_SIZE__CI__VI 1
#define SQ_WAVE_STATUS_IN_BARRIER_MASK 0x00001000
#define SQ_WAVE_STATUS_IN_BARRIER_SHIFT 12
#define SQ_WAVE_STATUS_IN_BARRIER_SIZE 1
#define SQ_WAVE_STATUS_IN_TG_MASK 0x00000800
#define SQ_WAVE_STATUS_IN_TG_SHIFT 11
#define SQ_WAVE_STATUS_IN_TG_SIZE 1
#define SQ_WAVE_STATUS_MUST_EXPORT_MASK__CI__VI 0x08000000
#define SQ_WAVE_STATUS_MUST_EXPORT_SHIFT__CI__VI 27
#define SQ_WAVE_STATUS_MUST_EXPORT_SIZE__CI__VI 1
#define SQ_WAVE_STATUS_PERF_EN_MASK 0x00080000
#define SQ_WAVE_STATUS_PERF_EN_SHIFT 19
#define SQ_WAVE_STATUS_PERF_EN_SIZE 1
#define SQ_WAVE_STATUS_PRIV_MASK 0x00000020
#define SQ_WAVE_STATUS_PRIV_SHIFT 5
#define SQ_WAVE_STATUS_PRIV_SIZE 1
#define SQ_WAVE_STATUS_REG_SIZE 32
#define SQ_WAVE_STATUS_SCC_MASK 0x00000001
#define SQ_WAVE_STATUS_SCC_SHIFT 0x00000000
#define SQ_WAVE_STATUS_SCC_SIZE 1
#define SQ_WAVE_STATUS_SKIP_EXPORT_MASK 0x00040000
#define SQ_WAVE_STATUS_SKIP_EXPORT_SHIFT 18
#define SQ_WAVE_STATUS_SKIP_EXPORT_SIZE 1
#define SQ_WAVE_STATUS_SPI_PRIO_MASK 0x00000006
#define SQ_WAVE_STATUS_SPI_PRIO_SHIFT 1
#define SQ_WAVE_STATUS_SPI_PRIO_SIZE 2
#define SQ_WAVE_STATUS_TRAP_EN_MASK 0x00000040
#define SQ_WAVE_STATUS_TRAP_EN_SHIFT 6
#define SQ_WAVE_STATUS_TRAP_EN_SIZE 1
#define SQ_WAVE_STATUS_TRAP_MASK 0x00004000
#define SQ_WAVE_STATUS_TRAP_SHIFT 14
#define SQ_WAVE_STATUS_TRAP_SIZE 1
#define SQ_WAVE_STATUS_TTRACE_CU_EN_MASK 0x00008000
#define SQ_WAVE_STATUS_TTRACE_CU_EN_SHIFT 15
#define SQ_WAVE_STATUS_TTRACE_CU_EN_SIZE 1
#define SQ_WAVE_STATUS_TTRACE_EN_MASK 0x00000080
#define SQ_WAVE_STATUS_TTRACE_EN_SHIFT 7
#define SQ_WAVE_STATUS_TTRACE_EN_SIZE 1
#define SQ_WAVE_STATUS_VALID_MASK 0x00010000
#define SQ_WAVE_STATUS_VALID_SHIFT 16
#define SQ_WAVE_STATUS_VALID_SIZE 1
#define SQ_WAVE_STATUS_VCCZ_MASK 0x00000400
#define SQ_WAVE_STATUS_VCCZ_SHIFT 10
#define SQ_WAVE_STATUS_VCCZ_SIZE 1
#define SQ_WAVE_STATUS_WAVE_PRIO_MASK__SI__CI 0x00000018
#define SQ_WAVE_STATUS_WAVE_PRIO_SHIFT__SI__CI 3
#define SQ_WAVE_STATUS_WAVE_PRIO_SIZE__SI__CI 2
#define SQ_WAVE_TBA_HI_ADDR_HI_MASK 0x000000ff
#define SQ_WAVE_TBA_HI_ADDR_HI_SHIFT 0x00000000
#define SQ_WAVE_TBA_HI_ADDR_HI_SIZE 8
#define SQ_WAVE_TBA_HI_REG_SIZE 32
#define SQ_WAVE_TBA_LO_ADDR_LO_MASK 0xffffffff
#define SQ_WAVE_TBA_LO_ADDR_LO_SHIFT 0x00000000
#define SQ_WAVE_TBA_LO_ADDR_LO_SIZE 32
#define SQ_WAVE_TBA_LO_REG_SIZE 32
#define SQ_WAVE_TMA_HI_ADDR_HI_MASK 0x000000ff
#define SQ_WAVE_TMA_HI_ADDR_HI_SHIFT 0x00000000
#define SQ_WAVE_TMA_HI_ADDR_HI_SIZE 8
#define SQ_WAVE_TMA_HI_REG_SIZE 32
#define SQ_WAVE_TMA_LO_ADDR_LO_MASK 0xffffffff
#define SQ_WAVE_TMA_LO_ADDR_LO_SHIFT 0x00000000
#define SQ_WAVE_TMA_LO_ADDR_LO_SIZE 32
#define SQ_WAVE_TMA_LO_REG_SIZE 32
#define SQ_WAVE_TRAPSTS_DP_RATE_MASK 0xe0000000
#define SQ_WAVE_TRAPSTS_DP_RATE_SHIFT 29
#define SQ_WAVE_TRAPSTS_DP_RATE_SIZE 3
#define SQ_WAVE_TRAPSTS_EXCP_CYCLE_MASK 0x003f0000
#define SQ_WAVE_TRAPSTS_EXCP_CYCLE_SHIFT 16
#define SQ_WAVE_TRAPSTS_EXCP_CYCLE_SIZE 6
#define SQ_WAVE_TRAPSTS_EXCP_MASK__CI__VI 0x000001ff
#define SQ_WAVE_TRAPSTS_EXCP_MASK__SI 0x0000007f
#define SQ_WAVE_TRAPSTS_EXCP_SHIFT 0x00000000
#define SQ_WAVE_TRAPSTS_EXCP_SIZE__CI__VI 9
#define SQ_WAVE_TRAPSTS_EXCP_SIZE__SI 7
#define SQ_WAVE_TRAPSTS_REG_SIZE 32
#define SQ_WAVE_TTMP0_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP0_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP0_DATA_SIZE 32
#define SQ_WAVE_TTMP0_REG_SIZE 32
#define SQ_WAVE_TTMP10_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP10_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP10_DATA_SIZE 32
#define SQ_WAVE_TTMP10_REG_SIZE 32
#define SQ_WAVE_TTMP11_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP11_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP11_DATA_SIZE 32
#define SQ_WAVE_TTMP11_REG_SIZE 32
#define SQ_WAVE_TTMP1_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP1_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP1_DATA_SIZE 32
#define SQ_WAVE_TTMP1_REG_SIZE 32
#define SQ_WAVE_TTMP2_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP2_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP2_DATA_SIZE 32
#define SQ_WAVE_TTMP2_REG_SIZE 32
#define SQ_WAVE_TTMP3_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP3_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP3_DATA_SIZE 32
#define SQ_WAVE_TTMP3_REG_SIZE 32
#define SQ_WAVE_TTMP4_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP4_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP4_DATA_SIZE 32
#define SQ_WAVE_TTMP4_REG_SIZE 32
#define SQ_WAVE_TTMP5_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP5_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP5_DATA_SIZE 32
#define SQ_WAVE_TTMP5_REG_SIZE 32
#define SQ_WAVE_TTMP6_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP6_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP6_DATA_SIZE 32
#define SQ_WAVE_TTMP6_REG_SIZE 32
#define SQ_WAVE_TTMP7_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP7_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP7_DATA_SIZE 32
#define SQ_WAVE_TTMP7_REG_SIZE 32
#define SQ_WAVE_TTMP8_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP8_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP8_DATA_SIZE 32
#define SQ_WAVE_TTMP8_REG_SIZE 32
#define SQ_WAVE_TTMP9_DATA_MASK 0xffffffff
#define SQ_WAVE_TTMP9_DATA_SHIFT 0x00000000
#define SQ_WAVE_TTMP9_DATA_SIZE 32
#define SQ_WAVE_TTMP9_REG_SIZE 32
#define SQ_WAVE_TYPE_PS0 0x00000000
#define USER_SQC_BANK_DISABLE_DEFAULT 0x00000000
#define USER_SQC_BANK_DISABLE_REG_SIZE 32
#define USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK 0x000f0000
#define USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SHIFT 16
#define USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SIZE 4
#define USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK 0x00f00000
#define USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SHIFT 20
#define USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SIZE 4
#define USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK__CI__VI 0x0f000000
#define USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SHIFT__CI__VI 24
#define USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SIZE__CI__VI 4
#define USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK__CI__VI 0xf0000000
#define USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SHIFT__CI__VI 28
#define USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SIZE__CI__VI 4

// Merged Defines

#define CC_GC_SHADER_RATE_CONFIG_DEFAULT__VI 0x00000010
#define CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_MASK__VI 0x00000006
#define CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_SHIFT__VI 1
#define CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_SIZE__VI 2
#define CC_GC_SHADER_RATE_CONFIG_GET_DPFP_RATE__VI(cc_gc_shader_rate_config)                       \
  ((cc_gc_shader_rate_config & CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_MASK) >>                         \
   CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_GET_HALF_LDS__VI(cc_gc_shader_rate_config)                        \
  ((cc_gc_shader_rate_config & CC_GC_SHADER_RATE_CONFIG_HALF_LDS_MASK) >>                          \
   CC_GC_SHADER_RATE_CONFIG_HALF_LDS_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_GET_SQC_BALANCE_DISABLE__VI(cc_gc_shader_rate_config)             \
  ((cc_gc_shader_rate_config & CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK) >>               \
   CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_GET_WRITE_DIS__VI(cc_gc_shader_rate_config)                       \
  ((cc_gc_shader_rate_config & CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_MASK) >>                         \
   CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_HALF_LDS_MASK__VI 0x00000010
#define CC_GC_SHADER_RATE_CONFIG_HALF_LDS_SHIFT__VI 4
#define CC_GC_SHADER_RATE_CONFIG_HALF_LDS_SIZE__VI 1
#define CC_GC_SHADER_RATE_CONFIG_MASK__VI                                                          \
  (CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_MASK | CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_MASK |             \
   CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK | CC_GC_SHADER_RATE_CONFIG_HALF_LDS_MASK)

#define CC_GC_SHADER_RATE_CONFIG_REG_SIZE__VI 32
#define CC_GC_SHADER_RATE_CONFIG_SET_DPFP_RATE__VI(cc_gc_shader_rate_config_reg, dpfp_rate)        \
  cc_gc_shader_rate_config_reg =                                                                   \
      (cc_gc_shader_rate_config_reg & ~CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_MASK) |                  \
      (dpfp_rate << CC_GC_SHADER_RATE_CONFIG_DPFP_RATE_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_SET_HALF_LDS__VI(cc_gc_shader_rate_config_reg, half_lds)          \
  cc_gc_shader_rate_config_reg =                                                                   \
      (cc_gc_shader_rate_config_reg & ~CC_GC_SHADER_RATE_CONFIG_HALF_LDS_MASK) |                   \
      (half_lds << CC_GC_SHADER_RATE_CONFIG_HALF_LDS_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_SET_SQC_BALANCE_DISABLE__VI(cc_gc_shader_rate_config_reg,         \
                                                             sqc_balance_disable)                  \
  cc_gc_shader_rate_config_reg =                                                                   \
      (cc_gc_shader_rate_config_reg & ~CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK) |        \
      (sqc_balance_disable << CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_SET_WRITE_DIS__VI(cc_gc_shader_rate_config_reg, write_dis)        \
  cc_gc_shader_rate_config_reg =                                                                   \
      (cc_gc_shader_rate_config_reg & ~CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_MASK) |                  \
      (write_dis << CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_SHIFT)

#define CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK__VI 0x00000008
#define CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SHIFT__VI 3
#define CC_GC_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SIZE__VI 1
#define CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_MASK__VI 0x00000001
#define CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_SHIFT__VI 0x00000000
#define CC_GC_SHADER_RATE_CONFIG_WRITE_DIS_SIZE__VI 1
#define CC_SQC_BANK_DISABLE_GET_SQC0_BANK_DISABLE__VI(cc_sqc_bank_disable)                         \
  ((cc_sqc_bank_disable & CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK) >>                           \
   CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_GET_SQC1_BANK_DISABLE__VI(cc_sqc_bank_disable)                         \
  ((cc_sqc_bank_disable & CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK) >>                           \
   CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_GET_SQC2_BANK_DISABLE__VI(cc_sqc_bank_disable)                         \
  ((cc_sqc_bank_disable & CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK) >>                           \
   CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_GET_SQC3_BANK_DISABLE__VI(cc_sqc_bank_disable)                         \
  ((cc_sqc_bank_disable & CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK) >>                           \
   CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_GET_WRITE_DIS__VI(cc_sqc_bank_disable)                                 \
  ((cc_sqc_bank_disable & CC_SQC_BANK_DISABLE_WRITE_DIS_MASK) >>                                   \
   CC_SQC_BANK_DISABLE_WRITE_DIS_SHIFT)

#define CC_SQC_BANK_DISABLE_MASK__VI                                                               \
  (CC_SQC_BANK_DISABLE_WRITE_DIS_MASK | CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK |               \
   CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK | CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK |       \
   CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK)

#define CC_SQC_BANK_DISABLE_SET_SQC0_BANK_DISABLE__VI(cc_sqc_bank_disable_reg, sqc0_bank_disable)  \
  cc_sqc_bank_disable_reg =                                                                        \
      (cc_sqc_bank_disable_reg & ~CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK) |                    \
      (sqc0_bank_disable << CC_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_SET_SQC1_BANK_DISABLE__VI(cc_sqc_bank_disable_reg, sqc1_bank_disable)  \
  cc_sqc_bank_disable_reg =                                                                        \
      (cc_sqc_bank_disable_reg & ~CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK) |                    \
      (sqc1_bank_disable << CC_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_SET_SQC2_BANK_DISABLE__VI(cc_sqc_bank_disable_reg, sqc2_bank_disable)  \
  cc_sqc_bank_disable_reg =                                                                        \
      (cc_sqc_bank_disable_reg & ~CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK) |                    \
      (sqc2_bank_disable << CC_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_SET_SQC3_BANK_DISABLE__VI(cc_sqc_bank_disable_reg, sqc3_bank_disable)  \
  cc_sqc_bank_disable_reg =                                                                        \
      (cc_sqc_bank_disable_reg & ~CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK) |                    \
      (sqc3_bank_disable << CC_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SHIFT)

#define CC_SQC_BANK_DISABLE_SET_WRITE_DIS__VI(cc_sqc_bank_disable_reg, write_dis)                  \
  cc_sqc_bank_disable_reg = (cc_sqc_bank_disable_reg & ~CC_SQC_BANK_DISABLE_WRITE_DIS_MASK) |      \
      (write_dis << CC_SQC_BANK_DISABLE_WRITE_DIS_SHIFT)

#define CGTT_SQG_CLK_CTRL_DEFAULT__SI__CI 0x00000200
#define CGTT_SQG_CLK_CTRL_DEFAULT__VI 0x00000100
#define CGTT_SQG_CLK_CTRL_GET_CORE_OVERRIDE__VI(cgtt_sqg_clk_ctrl)                                 \
  ((cgtt_sqg_clk_ctrl & CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_MASK) >>                                   \
   CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_GET_OFF_HYSTERESIS__VI(cgtt_sqg_clk_ctrl)                                \
  ((cgtt_sqg_clk_ctrl & CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_MASK) >>                                  \
   CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_SHIFT)

#define CGTT_SQG_CLK_CTRL_GET_ON_DELAY__VI(cgtt_sqg_clk_ctrl)                                      \
  ((cgtt_sqg_clk_ctrl & CGTT_SQG_CLK_CTRL_ON_DELAY_MASK) >> CGTT_SQG_CLK_CTRL_ON_DELAY_SHIFT)

#define CGTT_SQG_CLK_CTRL_GET_PERFMON_OVERRIDE__VI(cgtt_sqg_clk_ctrl)                              \
  ((cgtt_sqg_clk_ctrl & CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_MASK) >>                                \
   CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_GET_REG_OVERRIDE__VI(cgtt_sqg_clk_ctrl)                                  \
  ((cgtt_sqg_clk_ctrl & CGTT_SQG_CLK_CTRL_REG_OVERRIDE_MASK) >>                                    \
   CGTT_SQG_CLK_CTRL_REG_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_GET_TTRACE_OVERRIDE__VI(cgtt_sqg_clk_ctrl)                               \
  ((cgtt_sqg_clk_ctrl & CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_MASK) >>                                 \
   CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_MASK__VI                                                                 \
  (CGTT_SQG_CLK_CTRL_ON_DELAY_MASK | CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_MASK |                       \
   CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_MASK | CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_MASK |              \
   CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_MASK | CGTT_SQG_CLK_CTRL_REG_OVERRIDE_MASK)

#define CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_MASK__VI 0x20000000
#define CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_SHIFT__VI 29
#define CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_SIZE__VI 1
#define CGTT_SQG_CLK_CTRL_SET_CORE_OVERRIDE__VI(cgtt_sqg_clk_ctrl_reg, core_override)              \
  cgtt_sqg_clk_ctrl_reg = (cgtt_sqg_clk_ctrl_reg & ~CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_MASK) |        \
      (core_override << CGTT_SQG_CLK_CTRL_CORE_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_SET_OFF_HYSTERESIS__VI(cgtt_sqg_clk_ctrl_reg, off_hysteresis)            \
  cgtt_sqg_clk_ctrl_reg = (cgtt_sqg_clk_ctrl_reg & ~CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_MASK) |       \
      (off_hysteresis << CGTT_SQG_CLK_CTRL_OFF_HYSTERESIS_SHIFT)

#define CGTT_SQG_CLK_CTRL_SET_ON_DELAY__VI(cgtt_sqg_clk_ctrl_reg, on_delay)                        \
  cgtt_sqg_clk_ctrl_reg = (cgtt_sqg_clk_ctrl_reg & ~CGTT_SQG_CLK_CTRL_ON_DELAY_MASK) |             \
      (on_delay << CGTT_SQG_CLK_CTRL_ON_DELAY_SHIFT)

#define CGTT_SQG_CLK_CTRL_SET_PERFMON_OVERRIDE__VI(cgtt_sqg_clk_ctrl_reg, perfmon_override)        \
  cgtt_sqg_clk_ctrl_reg = (cgtt_sqg_clk_ctrl_reg & ~CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_MASK) |     \
      (perfmon_override << CGTT_SQG_CLK_CTRL_PERFMON_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_SET_REG_OVERRIDE__VI(cgtt_sqg_clk_ctrl_reg, reg_override)                \
  cgtt_sqg_clk_ctrl_reg = (cgtt_sqg_clk_ctrl_reg & ~CGTT_SQG_CLK_CTRL_REG_OVERRIDE_MASK) |         \
      (reg_override << CGTT_SQG_CLK_CTRL_REG_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_SET_TTRACE_OVERRIDE__VI(cgtt_sqg_clk_ctrl_reg, ttrace_override)          \
  cgtt_sqg_clk_ctrl_reg = (cgtt_sqg_clk_ctrl_reg & ~CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_MASK) |      \
      (ttrace_override << CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_SHIFT)

#define CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_MASK__VI 0x10000000
#define CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_SHIFT__VI 28
#define CGTT_SQG_CLK_CTRL_TTRACE_OVERRIDE_SIZE__VI 1
#define CGTT_SQ_CLK_CTRL_DEFAULT__SI__CI 0x00000200
#define CGTT_SQ_CLK_CTRL_DEFAULT__VI 0x00000100
#define CGTT_SQ_CLK_CTRL_GET_CORE_OVERRIDE__VI(cgtt_sq_clk_ctrl)                                   \
  ((cgtt_sq_clk_ctrl & CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_MASK) >> CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_SHIFT)

#define CGTT_SQ_CLK_CTRL_GET_OFF_HYSTERESIS__VI(cgtt_sq_clk_ctrl)                                  \
  ((cgtt_sq_clk_ctrl & CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_MASK) >>                                    \
   CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_SHIFT)

#define CGTT_SQ_CLK_CTRL_GET_ON_DELAY__VI(cgtt_sq_clk_ctrl)                                        \
  ((cgtt_sq_clk_ctrl & CGTT_SQ_CLK_CTRL_ON_DELAY_MASK) >> CGTT_SQ_CLK_CTRL_ON_DELAY_SHIFT)

#define CGTT_SQ_CLK_CTRL_GET_PERFMON_OVERRIDE__VI(cgtt_sq_clk_ctrl)                                \
  ((cgtt_sq_clk_ctrl & CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_MASK) >>                                  \
   CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_SHIFT)

#define CGTT_SQ_CLK_CTRL_GET_REG_OVERRIDE__VI(cgtt_sq_clk_ctrl)                                    \
  ((cgtt_sq_clk_ctrl & CGTT_SQ_CLK_CTRL_REG_OVERRIDE_MASK) >> CGTT_SQ_CLK_CTRL_REG_OVERRIDE_SHIFT)

#define CGTT_SQ_CLK_CTRL_MASK__VI                                                                  \
  (CGTT_SQ_CLK_CTRL_ON_DELAY_MASK | CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_MASK |                         \
   CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_MASK | CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_MASK |                  \
   CGTT_SQ_CLK_CTRL_REG_OVERRIDE_MASK)

#define CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_MASK__VI 0x20000000
#define CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_SHIFT__VI 29
#define CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_SIZE__VI 1
#define CGTT_SQ_CLK_CTRL_SET_CORE_OVERRIDE__VI(cgtt_sq_clk_ctrl_reg, core_override)                \
  cgtt_sq_clk_ctrl_reg = (cgtt_sq_clk_ctrl_reg & ~CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_MASK) |           \
      (core_override << CGTT_SQ_CLK_CTRL_CORE_OVERRIDE_SHIFT)

#define CGTT_SQ_CLK_CTRL_SET_OFF_HYSTERESIS__VI(cgtt_sq_clk_ctrl_reg, off_hysteresis)              \
  cgtt_sq_clk_ctrl_reg = (cgtt_sq_clk_ctrl_reg & ~CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_MASK) |          \
      (off_hysteresis << CGTT_SQ_CLK_CTRL_OFF_HYSTERESIS_SHIFT)

#define CGTT_SQ_CLK_CTRL_SET_ON_DELAY__VI(cgtt_sq_clk_ctrl_reg, on_delay)                          \
  cgtt_sq_clk_ctrl_reg = (cgtt_sq_clk_ctrl_reg & ~CGTT_SQ_CLK_CTRL_ON_DELAY_MASK) |                \
      (on_delay << CGTT_SQ_CLK_CTRL_ON_DELAY_SHIFT)

#define CGTT_SQ_CLK_CTRL_SET_PERFMON_OVERRIDE__VI(cgtt_sq_clk_ctrl_reg, perfmon_override)          \
  cgtt_sq_clk_ctrl_reg = (cgtt_sq_clk_ctrl_reg & ~CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_MASK) |        \
      (perfmon_override << CGTT_SQ_CLK_CTRL_PERFMON_OVERRIDE_SHIFT)

#define CGTT_SQ_CLK_CTRL_SET_REG_OVERRIDE__VI(cgtt_sq_clk_ctrl_reg, reg_override)                  \
  cgtt_sq_clk_ctrl_reg = (cgtt_sq_clk_ctrl_reg & ~CGTT_SQ_CLK_CTRL_REG_OVERRIDE_MASK) |            \
      (reg_override << CGTT_SQ_CLK_CTRL_REG_OVERRIDE_SHIFT)

#define GC_USER_SHADER_RATE_CONFIG_DEFAULT__VI 0x00000010
#define GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_MASK__VI 0x00000006
#define GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_SHIFT__VI 1
#define GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_SIZE__VI 2
#define GC_USER_SHADER_RATE_CONFIG_GET_DPFP_RATE__VI(gc_user_shader_rate_config)                   \
  ((gc_user_shader_rate_config & GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_MASK) >>                     \
   GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_SHIFT)

#define GC_USER_SHADER_RATE_CONFIG_GET_HALF_LDS__VI(gc_user_shader_rate_config)                    \
  ((gc_user_shader_rate_config & GC_USER_SHADER_RATE_CONFIG_HALF_LDS_MASK) >>                      \
   GC_USER_SHADER_RATE_CONFIG_HALF_LDS_SHIFT)

#define GC_USER_SHADER_RATE_CONFIG_GET_SQC_BALANCE_DISABLE__VI(gc_user_shader_rate_config)         \
  ((gc_user_shader_rate_config & GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK) >>           \
   GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SHIFT)

#define GC_USER_SHADER_RATE_CONFIG_HALF_LDS_MASK__VI 0x00000010
#define GC_USER_SHADER_RATE_CONFIG_HALF_LDS_SHIFT__VI 4
#define GC_USER_SHADER_RATE_CONFIG_HALF_LDS_SIZE__VI 1
#define GC_USER_SHADER_RATE_CONFIG_MASK__VI                                                        \
  (GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_MASK |                                                     \
   GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK | GC_USER_SHADER_RATE_CONFIG_HALF_LDS_MASK)

#define GC_USER_SHADER_RATE_CONFIG_REG_SIZE__VI 32
#define GC_USER_SHADER_RATE_CONFIG_SET_DPFP_RATE__VI(gc_user_shader_rate_config_reg, dpfp_rate)    \
  gc_user_shader_rate_config_reg =                                                                 \
      (gc_user_shader_rate_config_reg & ~GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_MASK) |              \
      (dpfp_rate << GC_USER_SHADER_RATE_CONFIG_DPFP_RATE_SHIFT)

#define GC_USER_SHADER_RATE_CONFIG_SET_HALF_LDS__VI(gc_user_shader_rate_config_reg, half_lds)      \
  gc_user_shader_rate_config_reg =                                                                 \
      (gc_user_shader_rate_config_reg & ~GC_USER_SHADER_RATE_CONFIG_HALF_LDS_MASK) |               \
      (half_lds << GC_USER_SHADER_RATE_CONFIG_HALF_LDS_SHIFT)

#define GC_USER_SHADER_RATE_CONFIG_SET_SQC_BALANCE_DISABLE__VI(gc_user_shader_rate_config_reg,     \
                                                               sqc_balance_disable)                \
  gc_user_shader_rate_config_reg =                                                                 \
      (gc_user_shader_rate_config_reg & ~GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK) |    \
      (sqc_balance_disable << GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SHIFT)

#define GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_MASK__VI 0x00000008
#define GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SHIFT__VI 3
#define GC_USER_SHADER_RATE_CONFIG_SQC_BALANCE_DISABLE_SIZE__VI 1
#define INST_ID_PRIV_START__VI 0x80000000
#define INST_ID_SPI_WREXEC__VI 0xfffffff4
#define SH_MEM_APE1_BASE_GET_BASE__VI(sh_mem_ape1_base)                                            \
  ((sh_mem_ape1_base & SH_MEM_APE1_BASE_BASE_MASK) >> SH_MEM_APE1_BASE_BASE_SHIFT)

#define SH_MEM_APE1_BASE_MASK__VI (SH_MEM_APE1_BASE_BASE_MASK)

#define SH_MEM_APE1_BASE_SET_BASE__VI(sh_mem_ape1_base_reg, base)                                  \
  sh_mem_ape1_base_reg =                                                                           \
      (sh_mem_ape1_base_reg & ~SH_MEM_APE1_BASE_BASE_MASK) | (base << SH_MEM_APE1_BASE_BASE_SHIFT)

#define SH_MEM_APE1_LIMIT_GET_LIMIT__VI(sh_mem_ape1_limit)                                         \
  ((sh_mem_ape1_limit & SH_MEM_APE1_LIMIT_LIMIT_MASK) >> SH_MEM_APE1_LIMIT_LIMIT_SHIFT)

#define SH_MEM_APE1_LIMIT_MASK__VI (SH_MEM_APE1_LIMIT_LIMIT_MASK)

#define SH_MEM_APE1_LIMIT_SET_LIMIT__VI(sh_mem_ape1_limit_reg, limit)                              \
  sh_mem_ape1_limit_reg = (sh_mem_ape1_limit_reg & ~SH_MEM_APE1_LIMIT_LIMIT_MASK) |                \
      (limit << SH_MEM_APE1_LIMIT_LIMIT_SHIFT)

#define SH_MEM_BASES_GET_PRIVATE_BASE__VI(sh_mem_bases)                                            \
  ((sh_mem_bases & SH_MEM_BASES_PRIVATE_BASE_MASK) >> SH_MEM_BASES_PRIVATE_BASE_SHIFT)

#define SH_MEM_BASES_GET_SHARED_BASE__VI(sh_mem_bases)                                             \
  ((sh_mem_bases & SH_MEM_BASES_SHARED_BASE_MASK) >> SH_MEM_BASES_SHARED_BASE_SHIFT)

#define SH_MEM_BASES_MASK__VI (SH_MEM_BASES_PRIVATE_BASE_MASK | SH_MEM_BASES_SHARED_BASE_MASK)

#define SH_MEM_BASES_SET_PRIVATE_BASE__VI(sh_mem_bases_reg, private_base)                          \
  sh_mem_bases_reg = (sh_mem_bases_reg & ~SH_MEM_BASES_PRIVATE_BASE_MASK) |                        \
      (private_base << SH_MEM_BASES_PRIVATE_BASE_SHIFT)

#define SH_MEM_BASES_SET_SHARED_BASE__VI(sh_mem_bases_reg, shared_base)                            \
  sh_mem_bases_reg = (sh_mem_bases_reg & ~SH_MEM_BASES_SHARED_BASE_MASK) |                         \
      (shared_base << SH_MEM_BASES_SHARED_BASE_SHIFT)

#define SH_MEM_CONFIG_ADDRESS_MODE_MASK__VI 0x00000003
#define SH_MEM_CONFIG_ADDRESS_MODE_SHIFT__VI 0x00000000
#define SH_MEM_CONFIG_ADDRESS_MODE_SIZE__VI 2
#define SH_MEM_CONFIG_ALIGNMENT_MODE_MASK__VI 0x00000018
#define SH_MEM_CONFIG_ALIGNMENT_MODE_SHIFT__VI 3
#define SH_MEM_CONFIG_APE1_ATC_MASK__VI 0x00000800
#define SH_MEM_CONFIG_APE1_ATC_SHIFT__VI 11
#define SH_MEM_CONFIG_APE1_ATC_SIZE__VI 1
#define SH_MEM_CONFIG_APE1_MTYPE_MASK__VI 0x00000700
#define SH_MEM_CONFIG_APE1_MTYPE_SHIFT__VI 8
#define SH_MEM_CONFIG_DEFAULT_MTYPE_MASK__VI 0x000000e0
#define SH_MEM_CONFIG_DEFAULT_MTYPE_SHIFT__VI 5
#define SH_MEM_CONFIG_GET_ADDRESS_MODE__VI(sh_mem_config)                                          \
  ((sh_mem_config & SH_MEM_CONFIG_ADDRESS_MODE_MASK) >> SH_MEM_CONFIG_ADDRESS_MODE_SHIFT)

#define SH_MEM_CONFIG_GET_ALIGNMENT_MODE__VI(sh_mem_config)                                        \
  ((sh_mem_config & SH_MEM_CONFIG_ALIGNMENT_MODE_MASK) >> SH_MEM_CONFIG_ALIGNMENT_MODE_SHIFT)

#define SH_MEM_CONFIG_GET_APE1_ATC__VI(sh_mem_config)                                              \
  ((sh_mem_config & SH_MEM_CONFIG_APE1_ATC_MASK) >> SH_MEM_CONFIG_APE1_ATC_SHIFT)

#define SH_MEM_CONFIG_GET_APE1_MTYPE__VI(sh_mem_config)                                            \
  ((sh_mem_config & SH_MEM_CONFIG_APE1_MTYPE_MASK) >> SH_MEM_CONFIG_APE1_MTYPE_SHIFT)

#define SH_MEM_CONFIG_GET_DEFAULT_MTYPE__VI(sh_mem_config)                                         \
  ((sh_mem_config & SH_MEM_CONFIG_DEFAULT_MTYPE_MASK) >> SH_MEM_CONFIG_DEFAULT_MTYPE_SHIFT)

#define SH_MEM_CONFIG_GET_PRIVATE_ATC__VI(sh_mem_config)                                           \
  ((sh_mem_config & SH_MEM_CONFIG_PRIVATE_ATC_MASK) >> SH_MEM_CONFIG_PRIVATE_ATC_SHIFT)

#define SH_MEM_CONFIG_MASK__VI                                                                     \
  (SH_MEM_CONFIG_ADDRESS_MODE_MASK | SH_MEM_CONFIG_PRIVATE_ATC_MASK |                              \
   SH_MEM_CONFIG_ALIGNMENT_MODE_MASK | SH_MEM_CONFIG_DEFAULT_MTYPE_MASK |                          \
   SH_MEM_CONFIG_APE1_MTYPE_MASK | SH_MEM_CONFIG_APE1_ATC_MASK)

#define SH_MEM_CONFIG_PRIVATE_ATC_MASK__VI 0x00000004
#define SH_MEM_CONFIG_PRIVATE_ATC_SHIFT__VI 2
#define SH_MEM_CONFIG_SET_ADDRESS_MODE__VI(sh_mem_config_reg, address_mode)                        \
  sh_mem_config_reg = (sh_mem_config_reg & ~SH_MEM_CONFIG_ADDRESS_MODE_MASK) |                     \
      (address_mode << SH_MEM_CONFIG_ADDRESS_MODE_SHIFT)

#define SH_MEM_CONFIG_SET_ALIGNMENT_MODE__VI(sh_mem_config_reg, alignment_mode)                    \
  sh_mem_config_reg = (sh_mem_config_reg & ~SH_MEM_CONFIG_ALIGNMENT_MODE_MASK) |                   \
      (alignment_mode << SH_MEM_CONFIG_ALIGNMENT_MODE_SHIFT)

#define SH_MEM_CONFIG_SET_APE1_ATC__VI(sh_mem_config_reg, ape1_atc)                                \
  sh_mem_config_reg = (sh_mem_config_reg & ~SH_MEM_CONFIG_APE1_ATC_MASK) |                         \
      (ape1_atc << SH_MEM_CONFIG_APE1_ATC_SHIFT)

#define SH_MEM_CONFIG_SET_APE1_MTYPE__VI(sh_mem_config_reg, ape1_mtype)                            \
  sh_mem_config_reg = (sh_mem_config_reg & ~SH_MEM_CONFIG_APE1_MTYPE_MASK) |                       \
      (ape1_mtype << SH_MEM_CONFIG_APE1_MTYPE_SHIFT)

#define SH_MEM_CONFIG_SET_DEFAULT_MTYPE__VI(sh_mem_config_reg, default_mtype)                      \
  sh_mem_config_reg = (sh_mem_config_reg & ~SH_MEM_CONFIG_DEFAULT_MTYPE_MASK) |                    \
      (default_mtype << SH_MEM_CONFIG_DEFAULT_MTYPE_SHIFT)

#define SH_MEM_CONFIG_SET_PRIVATE_ATC__VI(sh_mem_config_reg, private_atc)                          \
  sh_mem_config_reg = (sh_mem_config_reg & ~SH_MEM_CONFIG_PRIVATE_ATC_MASK) |                      \
      (private_atc << SH_MEM_CONFIG_PRIVATE_ATC_SHIFT)

#define SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_MASK__VI 0x00ff0000
#define SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_SHIFT__VI 16
#define SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_SIZE__VI 8
#define SQC_ATC_EDC_GATCL1_CNT_DEFAULT__VI 0x00000000
#define SQC_ATC_EDC_GATCL1_CNT_GET_DCACHE_DATA_SEC__VI(sqc_atc_edc_gatcl1_cnt)                     \
  ((sqc_atc_edc_gatcl1_cnt & SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_MASK) >>                       \
   SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_SHIFT)

#define SQC_ATC_EDC_GATCL1_CNT_GET_ICACHE_DATA_SEC__VI(sqc_atc_edc_gatcl1_cnt)                     \
  ((sqc_atc_edc_gatcl1_cnt & SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_MASK) >>                       \
   SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_SHIFT)

#define SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_MASK__VI 0x000000ff
#define SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_SHIFT__VI 0x00000000
#define SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_SIZE__VI 8
#define SQC_ATC_EDC_GATCL1_CNT_MASK__VI                                                            \
  (SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_MASK | SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_MASK)

#define SQC_ATC_EDC_GATCL1_CNT_REG_SIZE__VI 32
#define SQC_ATC_EDC_GATCL1_CNT_SET_DCACHE_DATA_SEC__VI(sqc_atc_edc_gatcl1_cnt_reg,                 \
                                                       dcache_data_sec)                            \
  sqc_atc_edc_gatcl1_cnt_reg =                                                                     \
      (sqc_atc_edc_gatcl1_cnt_reg & ~SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_MASK) |                \
      (dcache_data_sec << SQC_ATC_EDC_GATCL1_CNT_DCACHE_DATA_SEC_SHIFT)

#define SQC_ATC_EDC_GATCL1_CNT_SET_ICACHE_DATA_SEC__VI(sqc_atc_edc_gatcl1_cnt_reg,                 \
                                                       icache_data_sec)                            \
  sqc_atc_edc_gatcl1_cnt_reg =                                                                     \
      (sqc_atc_edc_gatcl1_cnt_reg & ~SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_MASK) |                \
      (icache_data_sec << SQC_ATC_EDC_GATCL1_CNT_ICACHE_DATA_SEC_SHIFT)

#define SQC_CACHES_COMPLETE_MASK__VI 0x00010000
#define SQC_CACHES_COMPLETE_SHIFT__VI 16
#define SQC_CACHES_COMPLETE_SIZE__VI 1
#define SQC_CACHES_GET_COMPLETE__VI(sqc_caches)                                                    \
  ((sqc_caches & SQC_CACHES_COMPLETE_MASK) >> SQC_CACHES_COMPLETE_SHIFT)

#define SQC_CACHES_GET_INVALIDATE__VI(sqc_caches)                                                  \
  ((sqc_caches & SQC_CACHES_INVALIDATE_MASK) >> SQC_CACHES_INVALIDATE_SHIFT)

#define SQC_CACHES_GET_TARGET_DATA__VI(sqc_caches)                                                 \
  ((sqc_caches & SQC_CACHES_TARGET_DATA_MASK) >> SQC_CACHES_TARGET_DATA_SHIFT)

#define SQC_CACHES_GET_TARGET_INST__VI(sqc_caches)                                                 \
  ((sqc_caches & SQC_CACHES_TARGET_INST_MASK) >> SQC_CACHES_TARGET_INST_SHIFT)

#define SQC_CACHES_GET_VOL__VI(sqc_caches)                                                         \
  ((sqc_caches & SQC_CACHES_VOL_MASK) >> SQC_CACHES_VOL_SHIFT)

#define SQC_CACHES_GET_WRITEBACK__VI(sqc_caches)                                                   \
  ((sqc_caches & SQC_CACHES_WRITEBACK_MASK) >> SQC_CACHES_WRITEBACK_SHIFT)

#define SQC_CACHES_INVALIDATE_MASK__VI 0x00000004
#define SQC_CACHES_INVALIDATE_SHIFT__VI 2
#define SQC_CACHES_INVALIDATE_SIZE__VI 1
#define SQC_CACHES_MASK__VI                                                                        \
  (SQC_CACHES_TARGET_INST_MASK | SQC_CACHES_TARGET_DATA_MASK | SQC_CACHES_INVALIDATE_MASK |        \
   SQC_CACHES_WRITEBACK_MASK | SQC_CACHES_VOL_MASK | SQC_CACHES_COMPLETE_MASK)

#define SQC_CACHES_SET_COMPLETE__VI(sqc_caches_reg, complete)                                      \
  sqc_caches_reg =                                                                                 \
      (sqc_caches_reg & ~SQC_CACHES_COMPLETE_MASK) | (complete << SQC_CACHES_COMPLETE_SHIFT)

#define SQC_CACHES_SET_INVALIDATE__VI(sqc_caches_reg, invalidate)                                  \
  sqc_caches_reg =                                                                                 \
      (sqc_caches_reg & ~SQC_CACHES_INVALIDATE_MASK) | (invalidate << SQC_CACHES_INVALIDATE_SHIFT)

#define SQC_CACHES_SET_TARGET_DATA__VI(sqc_caches_reg, target_data)                                \
  sqc_caches_reg = (sqc_caches_reg & ~SQC_CACHES_TARGET_DATA_MASK) |                               \
      (target_data << SQC_CACHES_TARGET_DATA_SHIFT)

#define SQC_CACHES_SET_TARGET_INST__VI(sqc_caches_reg, target_inst)                                \
  sqc_caches_reg = (sqc_caches_reg & ~SQC_CACHES_TARGET_INST_MASK) |                               \
      (target_inst << SQC_CACHES_TARGET_INST_SHIFT)

#define SQC_CACHES_SET_VOL__VI(sqc_caches_reg, vol)                                                \
  sqc_caches_reg = (sqc_caches_reg & ~SQC_CACHES_VOL_MASK) | (vol << SQC_CACHES_VOL_SHIFT)

#define SQC_CACHES_SET_WRITEBACK__VI(sqc_caches_reg, writeback)                                    \
  sqc_caches_reg =                                                                                 \
      (sqc_caches_reg & ~SQC_CACHES_WRITEBACK_MASK) | (writeback << SQC_CACHES_WRITEBACK_SHIFT)

#define SQC_CACHES_TARGET_DATA_MASK__VI 0x00000002
#define SQC_CACHES_TARGET_DATA_SHIFT__VI 1
#define SQC_CACHES_TARGET_DATA_SIZE__VI 1
#define SQC_CACHES_TARGET_INST_MASK__VI 0x00000001
#define SQC_CACHES_TARGET_INST_SHIFT__VI 0x00000000
#define SQC_CACHES_TARGET_INST_SIZE__VI 1
#define SQC_CACHES_VOL_MASK__VI 0x00000010
#define SQC_CACHES_VOL_SHIFT__VI 4
#define SQC_CACHES_VOL_SIZE__VI 1
#define SQC_CACHES_WRITEBACK_MASK__VI 0x00000008
#define SQC_CACHES_WRITEBACK_SHIFT__VI 3
#define SQC_CACHES_WRITEBACK_SIZE__VI 1
#define SQC_CONFIG_DEFAULT__SI__CI 0x00000000
#define SQC_CONFIG_DEFAULT__VI 0x000a2000
#define SQC_CONFIG_EVICT_LRU_MASK__VI 0x00003000
#define SQC_CONFIG_EVICT_LRU_SHIFT__VI 12
#define SQC_CONFIG_EVICT_LRU_SIZE__VI 2
#define SQC_CONFIG_FORCE_1_BANK_MASK__VI 0x00008000
#define SQC_CONFIG_FORCE_1_BANK_SHIFT__VI 15
#define SQC_CONFIG_FORCE_1_BANK_SIZE__VI 1
#define SQC_CONFIG_FORCE_2_BANK_MASK__VI 0x00004000
#define SQC_CONFIG_FORCE_2_BANK_SHIFT__VI 14
#define SQC_CONFIG_FORCE_2_BANK_SIZE__VI 1
#define SQC_CONFIG_GET_DATA_CACHE_SIZE__VI(sqc_config)                                             \
  ((sqc_config & SQC_CONFIG_DATA_CACHE_SIZE_MASK) >> SQC_CONFIG_DATA_CACHE_SIZE_SHIFT)

#define SQC_CONFIG_GET_EVICT_LRU__VI(sqc_config)                                                   \
  ((sqc_config & SQC_CONFIG_EVICT_LRU_MASK) >> SQC_CONFIG_EVICT_LRU_SHIFT)

#define SQC_CONFIG_GET_FORCE_1_BANK__VI(sqc_config)                                                \
  ((sqc_config & SQC_CONFIG_FORCE_1_BANK_MASK) >> SQC_CONFIG_FORCE_1_BANK_SHIFT)

#define SQC_CONFIG_GET_FORCE_2_BANK__VI(sqc_config)                                                \
  ((sqc_config & SQC_CONFIG_FORCE_2_BANK_MASK) >> SQC_CONFIG_FORCE_2_BANK_SHIFT)

#define SQC_CONFIG_GET_FORCE_ALWAYS_MISS__VI(sqc_config)                                           \
  ((sqc_config & SQC_CONFIG_FORCE_ALWAYS_MISS_MASK) >> SQC_CONFIG_FORCE_ALWAYS_MISS_SHIFT)

#define SQC_CONFIG_GET_FORCE_IN_ORDER__VI(sqc_config)                                              \
  ((sqc_config & SQC_CONFIG_FORCE_IN_ORDER_MASK) >> SQC_CONFIG_FORCE_IN_ORDER_SHIFT)

#define SQC_CONFIG_GET_HIT_FIFO_DEPTH__VI(sqc_config)                                              \
  ((sqc_config & SQC_CONFIG_HIT_FIFO_DEPTH_MASK) >> SQC_CONFIG_HIT_FIFO_DEPTH_SHIFT)

#define SQC_CONFIG_GET_IDENTITY_HASH_BANK__VI(sqc_config)                                          \
  ((sqc_config & SQC_CONFIG_IDENTITY_HASH_BANK_MASK) >> SQC_CONFIG_IDENTITY_HASH_BANK_SHIFT)

#define SQC_CONFIG_GET_IDENTITY_HASH_SET__VI(sqc_config)                                           \
  ((sqc_config & SQC_CONFIG_IDENTITY_HASH_SET_MASK) >> SQC_CONFIG_IDENTITY_HASH_SET_SHIFT)

#define SQC_CONFIG_GET_INST_CACHE_SIZE__VI(sqc_config)                                             \
  ((sqc_config & SQC_CONFIG_INST_CACHE_SIZE_MASK) >> SQC_CONFIG_INST_CACHE_SIZE_SHIFT)

#define SQC_CONFIG_GET_LS_DISABLE_CLOCKS__VI(sqc_config)                                           \
  ((sqc_config & SQC_CONFIG_LS_DISABLE_CLOCKS_MASK) >> SQC_CONFIG_LS_DISABLE_CLOCKS_SHIFT)

#define SQC_CONFIG_GET_MISS_FIFO_DEPTH__VI(sqc_config)                                             \
  ((sqc_config & SQC_CONFIG_MISS_FIFO_DEPTH_MASK) >> SQC_CONFIG_MISS_FIFO_DEPTH_SHIFT)

#define SQC_CONFIG_GET_PER_VMID_INV_DISABLE__VI(sqc_config)                                        \
  ((sqc_config & SQC_CONFIG_PER_VMID_INV_DISABLE_MASK) >> SQC_CONFIG_PER_VMID_INV_DISABLE_SHIFT)

#define SQC_CONFIG_LS_DISABLE_CLOCKS_MASK__VI 0x00ff0000
#define SQC_CONFIG_LS_DISABLE_CLOCKS_SHIFT__VI 16
#define SQC_CONFIG_LS_DISABLE_CLOCKS_SIZE__VI 8
#define SQC_CONFIG_MASK__VI                                                                        \
  (SQC_CONFIG_INST_CACHE_SIZE_MASK | SQC_CONFIG_DATA_CACHE_SIZE_MASK |                             \
   SQC_CONFIG_MISS_FIFO_DEPTH_MASK | SQC_CONFIG_HIT_FIFO_DEPTH_MASK |                              \
   SQC_CONFIG_FORCE_ALWAYS_MISS_MASK | SQC_CONFIG_FORCE_IN_ORDER_MASK |                            \
   SQC_CONFIG_IDENTITY_HASH_BANK_MASK | SQC_CONFIG_IDENTITY_HASH_SET_MASK |                        \
   SQC_CONFIG_PER_VMID_INV_DISABLE_MASK | SQC_CONFIG_EVICT_LRU_MASK |                              \
   SQC_CONFIG_FORCE_2_BANK_MASK | SQC_CONFIG_FORCE_1_BANK_MASK |                                   \
   SQC_CONFIG_LS_DISABLE_CLOCKS_MASK)

#define SQC_CONFIG_SET_DATA_CACHE_SIZE__VI(sqc_config_reg, data_cache_size)                        \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_DATA_CACHE_SIZE_MASK) |                           \
      (data_cache_size << SQC_CONFIG_DATA_CACHE_SIZE_SHIFT)

#define SQC_CONFIG_SET_EVICT_LRU__VI(sqc_config_reg, evict_lru)                                    \
  sqc_config_reg =                                                                                 \
      (sqc_config_reg & ~SQC_CONFIG_EVICT_LRU_MASK) | (evict_lru << SQC_CONFIG_EVICT_LRU_SHIFT)

#define SQC_CONFIG_SET_FORCE_1_BANK__VI(sqc_config_reg, force_1_bank)                              \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_FORCE_1_BANK_MASK) |                              \
      (force_1_bank << SQC_CONFIG_FORCE_1_BANK_SHIFT)

#define SQC_CONFIG_SET_FORCE_2_BANK__VI(sqc_config_reg, force_2_bank)                              \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_FORCE_2_BANK_MASK) |                              \
      (force_2_bank << SQC_CONFIG_FORCE_2_BANK_SHIFT)

#define SQC_CONFIG_SET_FORCE_ALWAYS_MISS__VI(sqc_config_reg, force_always_miss)                    \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_FORCE_ALWAYS_MISS_MASK) |                         \
      (force_always_miss << SQC_CONFIG_FORCE_ALWAYS_MISS_SHIFT)

#define SQC_CONFIG_SET_FORCE_IN_ORDER__VI(sqc_config_reg, force_in_order)                          \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_FORCE_IN_ORDER_MASK) |                            \
      (force_in_order << SQC_CONFIG_FORCE_IN_ORDER_SHIFT)

#define SQC_CONFIG_SET_HIT_FIFO_DEPTH__VI(sqc_config_reg, hit_fifo_depth)                          \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_HIT_FIFO_DEPTH_MASK) |                            \
      (hit_fifo_depth << SQC_CONFIG_HIT_FIFO_DEPTH_SHIFT)

#define SQC_CONFIG_SET_IDENTITY_HASH_BANK__VI(sqc_config_reg, identity_hash_bank)                  \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_IDENTITY_HASH_BANK_MASK) |                        \
      (identity_hash_bank << SQC_CONFIG_IDENTITY_HASH_BANK_SHIFT)

#define SQC_CONFIG_SET_IDENTITY_HASH_SET__VI(sqc_config_reg, identity_hash_set)                    \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_IDENTITY_HASH_SET_MASK) |                         \
      (identity_hash_set << SQC_CONFIG_IDENTITY_HASH_SET_SHIFT)

#define SQC_CONFIG_SET_INST_CACHE_SIZE__VI(sqc_config_reg, inst_cache_size)                        \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_INST_CACHE_SIZE_MASK) |                           \
      (inst_cache_size << SQC_CONFIG_INST_CACHE_SIZE_SHIFT)

#define SQC_CONFIG_SET_LS_DISABLE_CLOCKS__VI(sqc_config_reg, ls_disable_clocks)                    \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_LS_DISABLE_CLOCKS_MASK) |                         \
      (ls_disable_clocks << SQC_CONFIG_LS_DISABLE_CLOCKS_SHIFT)

#define SQC_CONFIG_SET_MISS_FIFO_DEPTH__VI(sqc_config_reg, miss_fifo_depth)                        \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_MISS_FIFO_DEPTH_MASK) |                           \
      (miss_fifo_depth << SQC_CONFIG_MISS_FIFO_DEPTH_SHIFT)

#define SQC_CONFIG_SET_PER_VMID_INV_DISABLE__VI(sqc_config_reg, per_vmid_inv_disable)              \
  sqc_config_reg = (sqc_config_reg & ~SQC_CONFIG_PER_VMID_INV_DISABLE_MASK) |                      \
      (per_vmid_inv_disable << SQC_CONFIG_PER_VMID_INV_DISABLE_SHIFT)

#define SQC_DSM_CNTL_DEFAULT__VI 0x00000000
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_MASK__VI 0x00020000
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_SHIFT__VI 17
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_MASK__VI 0x00100000
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_SHIFT__VI 20
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_MASK__VI 0x00800000
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_SHIFT__VI 23
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_MASK__VI 0x04000000
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_SHIFT__VI 26
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_MASK__VI 0x20000000
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_SHIFT__VI 29
#define SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_MASK__VI 0x00000004
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_SHIFT__VI 2
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_MASK__VI 0x00000020
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_SHIFT__VI 5
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_MASK__VI 0x00000100
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_SHIFT__VI 8
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_MASK__VI 0x00000800
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_SHIFT__VI 11
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_SIZE__VI 1
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_MASK__VI 0x00004000
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_SHIFT__VI 14
#define SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_SIZE__VI 1
#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_DCACHE_BANKA__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_DCACHE_BANKB__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_DCACHE_BANKC__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_DCACHE_BANKD__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_DCACHE_GATCL1__VI(sqc_dsm_cntl)                              \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_MASK) >>                                \
   SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_ICACHE_BANKA__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_ICACHE_BANKB__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_ICACHE_BANKC__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_ICACHE_BANKD__VI(sqc_dsm_cntl)                               \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_MASK) >>                                 \
   SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_GET_EN_SINGLE_WR_ICACHE_GATCL1__VI(sqc_dsm_cntl)                              \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_MASK) >>                                \
   SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_DCACHE_BANKA__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_DCACHE_BANKB__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_DCACHE_BANKC__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_DCACHE_BANKD__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_DCACHE_GATCL1__VI(sqc_dsm_cntl)                                  \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_MASK) >>                                    \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_ICACHE_BANKA__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_ICACHE_BANKB__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_ICACHE_BANKC__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_ICACHE_BANKD__VI(sqc_dsm_cntl)                                   \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_MASK) >>                                     \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_GET_SEL_DATA_ICACHE_GATCL1__VI(sqc_dsm_cntl)                                  \
  ((sqc_dsm_cntl & SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_MASK) >>                                    \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_SHIFT)

#define SQC_DSM_CNTL_MASK__VI                                                                      \
  (SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_MASK |       \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_MASK |         \
   SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_MASK | SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_MASK)

#define SQC_DSM_CNTL_REG_SIZE__VI 32
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_MASK__VI 0x00018000
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_SHIFT__VI 15
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_MASK__VI 0x000c0000
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_SHIFT__VI 18
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_MASK__VI 0x00600000
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_SHIFT__VI 21
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_MASK__VI 0x03000000
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_SHIFT__VI 24
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_MASK__VI 0x18000000
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_SHIFT__VI 27
#define SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_MASK__VI 0x00000003
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_SHIFT__VI 0x00000000
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_MASK__VI 0x00000018
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_SHIFT__VI 3
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_MASK__VI 0x000000c0
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_SHIFT__VI 6
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_MASK__VI 0x00000600
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_SHIFT__VI 9
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_SIZE__VI 2
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_MASK__VI 0x00003000
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_SHIFT__VI 12
#define SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_SIZE__VI 2
#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_DCACHE_BANKA__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_dcache_banka)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_MASK) |           \
      (en_single_wr_dcache_banka << SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_DCACHE_BANKB__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_dcache_bankb)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_MASK) |           \
      (en_single_wr_dcache_bankb << SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_DCACHE_BANKC__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_dcache_bankc)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_MASK) |           \
      (en_single_wr_dcache_bankc << SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_DCACHE_BANKD__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_dcache_bankd)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_MASK) |           \
      (en_single_wr_dcache_bankd << SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_DCACHE_GATCL1__VI(sqc_dsm_cntl_reg,                          \
                                                        en_single_wr_dcache_gatcl1)                \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_MASK) |          \
      (en_single_wr_dcache_gatcl1 << SQC_DSM_CNTL_EN_SINGLE_WR_DCACHE_GATCL1_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_ICACHE_BANKA__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_icache_banka)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_MASK) |           \
      (en_single_wr_icache_banka << SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_ICACHE_BANKB__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_icache_bankb)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_MASK) |           \
      (en_single_wr_icache_bankb << SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_ICACHE_BANKC__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_icache_bankc)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_MASK) |           \
      (en_single_wr_icache_bankc << SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_ICACHE_BANKD__VI(sqc_dsm_cntl_reg,                           \
                                                       en_single_wr_icache_bankd)                  \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_MASK) |           \
      (en_single_wr_icache_bankd << SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_SET_EN_SINGLE_WR_ICACHE_GATCL1__VI(sqc_dsm_cntl_reg,                          \
                                                        en_single_wr_icache_gatcl1)                \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_MASK) |          \
      (en_single_wr_icache_gatcl1 << SQC_DSM_CNTL_EN_SINGLE_WR_ICACHE_GATCL1_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_DCACHE_BANKA__VI(sqc_dsm_cntl_reg, sel_data_dcache_banka)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_MASK) |               \
      (sel_data_dcache_banka << SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_DCACHE_BANKB__VI(sqc_dsm_cntl_reg, sel_data_dcache_bankb)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_MASK) |               \
      (sel_data_dcache_bankb << SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_DCACHE_BANKC__VI(sqc_dsm_cntl_reg, sel_data_dcache_bankc)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_MASK) |               \
      (sel_data_dcache_bankc << SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_DCACHE_BANKD__VI(sqc_dsm_cntl_reg, sel_data_dcache_bankd)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_MASK) |               \
      (sel_data_dcache_bankd << SQC_DSM_CNTL_SEL_DATA_DCACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_DCACHE_GATCL1__VI(sqc_dsm_cntl_reg, sel_data_dcache_gatcl1)      \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_MASK) |              \
      (sel_data_dcache_gatcl1 << SQC_DSM_CNTL_SEL_DATA_DCACHE_GATCL1_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_ICACHE_BANKA__VI(sqc_dsm_cntl_reg, sel_data_icache_banka)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_MASK) |               \
      (sel_data_icache_banka << SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKA_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_ICACHE_BANKB__VI(sqc_dsm_cntl_reg, sel_data_icache_bankb)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_MASK) |               \
      (sel_data_icache_bankb << SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKB_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_ICACHE_BANKC__VI(sqc_dsm_cntl_reg, sel_data_icache_bankc)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_MASK) |               \
      (sel_data_icache_bankc << SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKC_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_ICACHE_BANKD__VI(sqc_dsm_cntl_reg, sel_data_icache_bankd)        \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_MASK) |               \
      (sel_data_icache_bankd << SQC_DSM_CNTL_SEL_DATA_ICACHE_BANKD_SHIFT)

#define SQC_DSM_CNTL_SET_SEL_DATA_ICACHE_GATCL1__VI(sqc_dsm_cntl_reg, sel_data_icache_gatcl1)      \
  sqc_dsm_cntl_reg = (sqc_dsm_cntl_reg & ~SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_MASK) |              \
      (sel_data_icache_gatcl1 << SQC_DSM_CNTL_SEL_DATA_ICACHE_GATCL1_SHIFT)

#define SQC_EDC_CNT_DATA_DED_MASK__VI 0xff000000
#define SQC_EDC_CNT_DATA_DED_SHIFT__VI 24
#define SQC_EDC_CNT_DATA_DED_SIZE__VI 8
#define SQC_EDC_CNT_DATA_SEC_MASK__VI 0x00ff0000
#define SQC_EDC_CNT_DATA_SEC_SHIFT__VI 16
#define SQC_EDC_CNT_DATA_SEC_SIZE__VI 8
#define SQC_EDC_CNT_DEFAULT__VI 0x00000000
#define SQC_EDC_CNT_GET_DATA_DED__VI(sqc_edc_cnt)                                                  \
  ((sqc_edc_cnt & SQC_EDC_CNT_DATA_DED_MASK) >> SQC_EDC_CNT_DATA_DED_SHIFT)

#define SQC_EDC_CNT_GET_DATA_SEC__VI(sqc_edc_cnt)                                                  \
  ((sqc_edc_cnt & SQC_EDC_CNT_DATA_SEC_MASK) >> SQC_EDC_CNT_DATA_SEC_SHIFT)

#define SQC_EDC_CNT_GET_INST_DED__VI(sqc_edc_cnt)                                                  \
  ((sqc_edc_cnt & SQC_EDC_CNT_INST_DED_MASK) >> SQC_EDC_CNT_INST_DED_SHIFT)

#define SQC_EDC_CNT_GET_INST_SEC__VI(sqc_edc_cnt)                                                  \
  ((sqc_edc_cnt & SQC_EDC_CNT_INST_SEC_MASK) >> SQC_EDC_CNT_INST_SEC_SHIFT)

#define SQC_EDC_CNT_INST_DED_MASK__VI 0x0000ff00
#define SQC_EDC_CNT_INST_DED_SHIFT__VI 8
#define SQC_EDC_CNT_INST_DED_SIZE__VI 8
#define SQC_EDC_CNT_INST_SEC_MASK__VI 0x000000ff
#define SQC_EDC_CNT_INST_SEC_SHIFT__VI 0x00000000
#define SQC_EDC_CNT_INST_SEC_SIZE__VI 8
#define SQC_EDC_CNT_MASK__VI                                                                       \
  (SQC_EDC_CNT_INST_SEC_MASK | SQC_EDC_CNT_INST_DED_MASK | SQC_EDC_CNT_DATA_SEC_MASK |             \
   SQC_EDC_CNT_DATA_DED_MASK)

#define SQC_EDC_CNT_REG_SIZE__VI 32
#define SQC_EDC_CNT_SET_DATA_DED__VI(sqc_edc_cnt_reg, data_ded)                                    \
  sqc_edc_cnt_reg =                                                                                \
      (sqc_edc_cnt_reg & ~SQC_EDC_CNT_DATA_DED_MASK) | (data_ded << SQC_EDC_CNT_DATA_DED_SHIFT)

#define SQC_EDC_CNT_SET_DATA_SEC__VI(sqc_edc_cnt_reg, data_sec)                                    \
  sqc_edc_cnt_reg =                                                                                \
      (sqc_edc_cnt_reg & ~SQC_EDC_CNT_DATA_SEC_MASK) | (data_sec << SQC_EDC_CNT_DATA_SEC_SHIFT)

#define SQC_EDC_CNT_SET_INST_DED__VI(sqc_edc_cnt_reg, inst_ded)                                    \
  sqc_edc_cnt_reg =                                                                                \
      (sqc_edc_cnt_reg & ~SQC_EDC_CNT_INST_DED_MASK) | (inst_ded << SQC_EDC_CNT_INST_DED_SHIFT)

#define SQC_EDC_CNT_SET_INST_SEC__VI(sqc_edc_cnt_reg, inst_sec)                                    \
  sqc_edc_cnt_reg =                                                                                \
      (sqc_edc_cnt_reg & ~SQC_EDC_CNT_INST_SEC_MASK) | (inst_sec << SQC_EDC_CNT_INST_SEC_SHIFT)

#define SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_MASK__VI 0x00100000
#define SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_SHIFT__VI 20
#define SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_SIZE__VI 1
#define SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_MASK__VI 0x00080000
#define SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_SHIFT__VI 19
#define SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_SIZE__VI 1
#define SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_MASK__VI 0x00040000
#define SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_SHIFT__VI 18
#define SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_SIZE__VI 1
#define SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_MASK__VI 0x01800000
#define SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_SHIFT__VI 23
#define SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_SIZE__VI 2
#define SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_MASK__VI 0x00600000
#define SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_SHIFT__VI 21
#define SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_SIZE__VI 2
#define SQC_GATCL1_CNTL_DEFAULT__VI 0x00000000
#define SQC_GATCL1_CNTL_GET_DCACHE_FORCE_IN_ORDER__VI(sqc_gatcl1_cntl)                             \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_MASK) >>                               \
   SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_SHIFT)

#define SQC_GATCL1_CNTL_GET_DCACHE_FORCE_MISS__VI(sqc_gatcl1_cntl)                                 \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_MASK) >>                                   \
   SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_SHIFT)

#define SQC_GATCL1_CNTL_GET_DCACHE_INVALIDATE_ALL_VMID__VI(sqc_gatcl1_cntl)                        \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_MASK) >>                          \
   SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_SHIFT)

#define SQC_GATCL1_CNTL_GET_DCACHE_REDUCE_CACHE_SIZE_BY_2__VI(sqc_gatcl1_cntl)                     \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_MASK) >>                       \
   SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_GET_DCACHE_REDUCE_FIFO_DEPTH_BY_2__VI(sqc_gatcl1_cntl)                     \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_MASK) >>                       \
   SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_GET_ICACHE_FORCE_IN_ORDER__VI(sqc_gatcl1_cntl)                             \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_MASK) >>                               \
   SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_SHIFT)

#define SQC_GATCL1_CNTL_GET_ICACHE_FORCE_MISS__VI(sqc_gatcl1_cntl)                                 \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_MASK) >>                                   \
   SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_SHIFT)

#define SQC_GATCL1_CNTL_GET_ICACHE_INVALIDATE_ALL_VMID__VI(sqc_gatcl1_cntl)                        \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_MASK) >>                          \
   SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_SHIFT)

#define SQC_GATCL1_CNTL_GET_ICACHE_REDUCE_CACHE_SIZE_BY_2__VI(sqc_gatcl1_cntl)                     \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_MASK) >>                       \
   SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_GET_ICACHE_REDUCE_FIFO_DEPTH_BY_2__VI(sqc_gatcl1_cntl)                     \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_MASK) >>                       \
   SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_GET_RESERVED__VI(sqc_gatcl1_cntl)                                          \
  ((sqc_gatcl1_cntl & SQC_GATCL1_CNTL_RESERVED_MASK) >> SQC_GATCL1_CNTL_RESERVED_SHIFT)

#define SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_MASK__VI 0x08000000
#define SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_SHIFT__VI 27
#define SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_SIZE__VI 1
#define SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_MASK__VI 0x04000000
#define SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_SHIFT__VI 26
#define SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_SIZE__VI 1
#define SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_MASK__VI 0x02000000
#define SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_SHIFT__VI 25
#define SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_SIZE__VI 1
#define SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_MASK__VI 0xc0000000
#define SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_SHIFT__VI 30
#define SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_SIZE__VI 2
#define SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_MASK__VI 0x30000000
#define SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_SHIFT__VI 28
#define SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_SIZE__VI 2
#define SQC_GATCL1_CNTL_MASK__VI                                                                   \
  (SQC_GATCL1_CNTL_RESERVED_MASK | SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_MASK |               \
   SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_MASK | SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_MASK |           \
   SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_MASK |                                            \
   SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_MASK |                                            \
   SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_MASK | SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_MASK |      \
   SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_MASK |                                                    \
   SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_MASK |                                            \
   SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_MASK)

#define SQC_GATCL1_CNTL_REG_SIZE__VI 32
#define SQC_GATCL1_CNTL_RESERVED_MASK__VI 0x0003ffff
#define SQC_GATCL1_CNTL_RESERVED_SHIFT__VI 0x00000000
#define SQC_GATCL1_CNTL_RESERVED_SIZE__VI 18
#define SQC_GATCL1_CNTL_SET_DCACHE_FORCE_IN_ORDER__VI(sqc_gatcl1_cntl_reg, dcache_force_in_order)  \
  sqc_gatcl1_cntl_reg = (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_MASK) |      \
      (dcache_force_in_order << SQC_GATCL1_CNTL_DCACHE_FORCE_IN_ORDER_SHIFT)

#define SQC_GATCL1_CNTL_SET_DCACHE_FORCE_MISS__VI(sqc_gatcl1_cntl_reg, dcache_force_miss)          \
  sqc_gatcl1_cntl_reg = (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_MASK) |          \
      (dcache_force_miss << SQC_GATCL1_CNTL_DCACHE_FORCE_MISS_SHIFT)

#define SQC_GATCL1_CNTL_SET_DCACHE_INVALIDATE_ALL_VMID__VI(sqc_gatcl1_cntl_reg,                    \
                                                           dcache_invalidate_all_vmid)             \
  sqc_gatcl1_cntl_reg = (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_MASK) | \
      (dcache_invalidate_all_vmid << SQC_GATCL1_CNTL_DCACHE_INVALIDATE_ALL_VMID_SHIFT)

#define SQC_GATCL1_CNTL_SET_DCACHE_REDUCE_CACHE_SIZE_BY_2__VI(sqc_gatcl1_cntl_reg,                 \
                                                              dcache_reduce_cache_size_by_2)       \
  sqc_gatcl1_cntl_reg =                                                                            \
      (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_MASK) |                \
      (dcache_reduce_cache_size_by_2 << SQC_GATCL1_CNTL_DCACHE_REDUCE_CACHE_SIZE_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_SET_DCACHE_REDUCE_FIFO_DEPTH_BY_2__VI(sqc_gatcl1_cntl_reg,                 \
                                                              dcache_reduce_fifo_depth_by_2)       \
  sqc_gatcl1_cntl_reg =                                                                            \
      (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_MASK) |                \
      (dcache_reduce_fifo_depth_by_2 << SQC_GATCL1_CNTL_DCACHE_REDUCE_FIFO_DEPTH_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_SET_ICACHE_FORCE_IN_ORDER__VI(sqc_gatcl1_cntl_reg, icache_force_in_order)  \
  sqc_gatcl1_cntl_reg = (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_MASK) |      \
      (icache_force_in_order << SQC_GATCL1_CNTL_ICACHE_FORCE_IN_ORDER_SHIFT)

#define SQC_GATCL1_CNTL_SET_ICACHE_FORCE_MISS__VI(sqc_gatcl1_cntl_reg, icache_force_miss)          \
  sqc_gatcl1_cntl_reg = (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_MASK) |          \
      (icache_force_miss << SQC_GATCL1_CNTL_ICACHE_FORCE_MISS_SHIFT)

#define SQC_GATCL1_CNTL_SET_ICACHE_INVALIDATE_ALL_VMID__VI(sqc_gatcl1_cntl_reg,                    \
                                                           icache_invalidate_all_vmid)             \
  sqc_gatcl1_cntl_reg = (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_MASK) | \
      (icache_invalidate_all_vmid << SQC_GATCL1_CNTL_ICACHE_INVALIDATE_ALL_VMID_SHIFT)

#define SQC_GATCL1_CNTL_SET_ICACHE_REDUCE_CACHE_SIZE_BY_2__VI(sqc_gatcl1_cntl_reg,                 \
                                                              icache_reduce_cache_size_by_2)       \
  sqc_gatcl1_cntl_reg =                                                                            \
      (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_MASK) |                \
      (icache_reduce_cache_size_by_2 << SQC_GATCL1_CNTL_ICACHE_REDUCE_CACHE_SIZE_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_SET_ICACHE_REDUCE_FIFO_DEPTH_BY_2__VI(sqc_gatcl1_cntl_reg,                 \
                                                              icache_reduce_fifo_depth_by_2)       \
  sqc_gatcl1_cntl_reg =                                                                            \
      (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_MASK) |                \
      (icache_reduce_fifo_depth_by_2 << SQC_GATCL1_CNTL_ICACHE_REDUCE_FIFO_DEPTH_BY_2_SHIFT)

#define SQC_GATCL1_CNTL_SET_RESERVED__VI(sqc_gatcl1_cntl_reg, reserved)                            \
  sqc_gatcl1_cntl_reg = (sqc_gatcl1_cntl_reg & ~SQC_GATCL1_CNTL_RESERVED_MASK) |                   \
      (reserved << SQC_GATCL1_CNTL_RESERVED_SHIFT)

#define SQC_WRITEBACK_DEFAULT__VI 0x00000000
#define SQC_WRITEBACK_DIRTY_MASK__VI 0x00000002
#define SQC_WRITEBACK_DIRTY_SHIFT__VI 1
#define SQC_WRITEBACK_DIRTY_SIZE__VI 1
#define SQC_WRITEBACK_DWB_MASK__VI 0x00000001
#define SQC_WRITEBACK_DWB_SHIFT__VI 0x00000000
#define SQC_WRITEBACK_DWB_SIZE__VI 1
#define SQC_WRITEBACK_GET_DIRTY__VI(sqc_writeback)                                                 \
  ((sqc_writeback & SQC_WRITEBACK_DIRTY_MASK) >> SQC_WRITEBACK_DIRTY_SHIFT)

#define SQC_WRITEBACK_GET_DWB__VI(sqc_writeback)                                                   \
  ((sqc_writeback & SQC_WRITEBACK_DWB_MASK) >> SQC_WRITEBACK_DWB_SHIFT)

#define SQC_WRITEBACK_MASK__VI (SQC_WRITEBACK_DWB_MASK | SQC_WRITEBACK_DIRTY_MASK)

#define SQC_WRITEBACK_REG_SIZE__VI 32
#define SQC_WRITEBACK_SET_DIRTY__VI(sqc_writeback_reg, dirty)                                      \
  sqc_writeback_reg =                                                                              \
      (sqc_writeback_reg & ~SQC_WRITEBACK_DIRTY_MASK) | (dirty << SQC_WRITEBACK_DIRTY_SHIFT)

#define SQC_WRITEBACK_SET_DWB__VI(sqc_writeback_reg, dwb)                                          \
  sqc_writeback_reg =                                                                              \
      (sqc_writeback_reg & ~SQC_WRITEBACK_DWB_MASK) | (dwb << SQC_WRITEBACK_DWB_SHIFT)

#define SQGFXUDEC_BEGIN__VI 0x0000c330
#define SQ_ALU_CLK_CTRL_GET_FORCE_CU_ON_SH0__VI(sq_alu_clk_ctrl)                                   \
  ((sq_alu_clk_ctrl & SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_MASK) >>                                     \
   SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT)

#define SQ_ALU_CLK_CTRL_GET_FORCE_CU_ON_SH1__VI(sq_alu_clk_ctrl)                                   \
  ((sq_alu_clk_ctrl & SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_MASK) >>                                     \
   SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT)

#define SQ_ALU_CLK_CTRL_MASK__VI                                                                   \
  (SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_MASK | SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_MASK)

#define SQ_ALU_CLK_CTRL_SET_FORCE_CU_ON_SH0__VI(sq_alu_clk_ctrl_reg, force_cu_on_sh0)              \
  sq_alu_clk_ctrl_reg = (sq_alu_clk_ctrl_reg & ~SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_MASK) |            \
      (force_cu_on_sh0 << SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT)

#define SQ_ALU_CLK_CTRL_SET_FORCE_CU_ON_SH1__VI(sq_alu_clk_ctrl_reg, force_cu_on_sh1)              \
  sq_alu_clk_ctrl_reg = (sq_alu_clk_ctrl_reg & ~SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_MASK) |            \
      (force_cu_on_sh1 << SQ_ALU_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT)

#define SQ_BUF_RSRC_WORD0_DEFAULT__SI__CI 0x00000000
#define SQ_BUF_RSRC_WORD0_DEFAULT__VI 0xcdcdcdcd
#define SQ_BUF_RSRC_WORD0_GET_BASE_ADDRESS__VI(sq_buf_rsrc_word0)                                  \
  ((sq_buf_rsrc_word0 & SQ_BUF_RSRC_WORD0_BASE_ADDRESS_MASK) >>                                    \
   SQ_BUF_RSRC_WORD0_BASE_ADDRESS_SHIFT)

#define SQ_BUF_RSRC_WORD0_MASK__VI (SQ_BUF_RSRC_WORD0_BASE_ADDRESS_MASK)

#define SQ_BUF_RSRC_WORD0_SET_BASE_ADDRESS__VI(sq_buf_rsrc_word0_reg, base_address)                \
  sq_buf_rsrc_word0_reg = (sq_buf_rsrc_word0_reg & ~SQ_BUF_RSRC_WORD0_BASE_ADDRESS_MASK) |         \
      (base_address << SQ_BUF_RSRC_WORD0_BASE_ADDRESS_SHIFT)

#define SQ_BUF_RSRC_WORD1_DEFAULT__SI__CI 0x00000000
#define SQ_BUF_RSRC_WORD1_DEFAULT__VI 0xcdcdcdcd
#define SQ_BUF_RSRC_WORD1_GET_BASE_ADDRESS_HI__VI(sq_buf_rsrc_word1)                               \
  ((sq_buf_rsrc_word1 & SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_MASK) >>                                 \
   SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_SHIFT)

#define SQ_BUF_RSRC_WORD1_GET_CACHE_SWIZZLE__VI(sq_buf_rsrc_word1)                                 \
  ((sq_buf_rsrc_word1 & SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_MASK) >>                                   \
   SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_SHIFT)

#define SQ_BUF_RSRC_WORD1_GET_STRIDE__VI(sq_buf_rsrc_word1)                                        \
  ((sq_buf_rsrc_word1 & SQ_BUF_RSRC_WORD1_STRIDE_MASK) >> SQ_BUF_RSRC_WORD1_STRIDE_SHIFT)

#define SQ_BUF_RSRC_WORD1_GET_SWIZZLE_ENABLE__VI(sq_buf_rsrc_word1)                                \
  ((sq_buf_rsrc_word1 & SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_MASK) >>                                  \
   SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_SHIFT)

#define SQ_BUF_RSRC_WORD1_MASK__VI                                                                 \
  (SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_MASK | SQ_BUF_RSRC_WORD1_STRIDE_MASK |                        \
   SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_MASK | SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_MASK)

#define SQ_BUF_RSRC_WORD1_SET_BASE_ADDRESS_HI__VI(sq_buf_rsrc_word1_reg, base_address_hi)          \
  sq_buf_rsrc_word1_reg = (sq_buf_rsrc_word1_reg & ~SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_MASK) |      \
      (base_address_hi << SQ_BUF_RSRC_WORD1_BASE_ADDRESS_HI_SHIFT)

#define SQ_BUF_RSRC_WORD1_SET_CACHE_SWIZZLE__VI(sq_buf_rsrc_word1_reg, cache_swizzle)              \
  sq_buf_rsrc_word1_reg = (sq_buf_rsrc_word1_reg & ~SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_MASK) |        \
      (cache_swizzle << SQ_BUF_RSRC_WORD1_CACHE_SWIZZLE_SHIFT)

#define SQ_BUF_RSRC_WORD1_SET_STRIDE__VI(sq_buf_rsrc_word1_reg, stride)                            \
  sq_buf_rsrc_word1_reg = (sq_buf_rsrc_word1_reg & ~SQ_BUF_RSRC_WORD1_STRIDE_MASK) |               \
      (stride << SQ_BUF_RSRC_WORD1_STRIDE_SHIFT)

#define SQ_BUF_RSRC_WORD1_SET_SWIZZLE_ENABLE__VI(sq_buf_rsrc_word1_reg, swizzle_enable)            \
  sq_buf_rsrc_word1_reg = (sq_buf_rsrc_word1_reg & ~SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_MASK) |       \
      (swizzle_enable << SQ_BUF_RSRC_WORD1_SWIZZLE_ENABLE_SHIFT)

#define SQ_BUF_RSRC_WORD2_DEFAULT__SI__CI 0x00000000
#define SQ_BUF_RSRC_WORD2_DEFAULT__VI 0xcdcdcdcd
#define SQ_BUF_RSRC_WORD2_GET_NUM_RECORDS__VI(sq_buf_rsrc_word2)                                   \
  ((sq_buf_rsrc_word2 & SQ_BUF_RSRC_WORD2_NUM_RECORDS_MASK) >> SQ_BUF_RSRC_WORD2_NUM_RECORDS_SHIFT)

#define SQ_BUF_RSRC_WORD2_MASK__VI (SQ_BUF_RSRC_WORD2_NUM_RECORDS_MASK)

#define SQ_BUF_RSRC_WORD2_SET_NUM_RECORDS__VI(sq_buf_rsrc_word2_reg, num_records)                  \
  sq_buf_rsrc_word2_reg = (sq_buf_rsrc_word2_reg & ~SQ_BUF_RSRC_WORD2_NUM_RECORDS_MASK) |          \
      (num_records << SQ_BUF_RSRC_WORD2_NUM_RECORDS_SHIFT)

#define SQ_BUF_RSRC_WORD3_DEFAULT__SI__CI 0x00000000
#define SQ_BUF_RSRC_WORD3_DEFAULT__VI 0xcdcdcdcd
#define SQ_BUF_RSRC_WORD3_GET_ADD_TID_ENABLE__VI(sq_buf_rsrc_word3)                                \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_MASK) >>                                  \
   SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_ATC__VI(sq_buf_rsrc_word3)                                           \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_ATC_MASK) >> SQ_BUF_RSRC_WORD3_ATC_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_DATA_FORMAT__VI(sq_buf_rsrc_word3)                                   \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_DATA_FORMAT_MASK) >> SQ_BUF_RSRC_WORD3_DATA_FORMAT_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_DST_SEL_W__VI(sq_buf_rsrc_word3)                                     \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_DST_SEL_W_MASK) >> SQ_BUF_RSRC_WORD3_DST_SEL_W_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_DST_SEL_X__VI(sq_buf_rsrc_word3)                                     \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_DST_SEL_X_MASK) >> SQ_BUF_RSRC_WORD3_DST_SEL_X_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_DST_SEL_Y__VI(sq_buf_rsrc_word3)                                     \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_DST_SEL_Y_MASK) >> SQ_BUF_RSRC_WORD3_DST_SEL_Y_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_DST_SEL_Z__VI(sq_buf_rsrc_word3)                                     \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_DST_SEL_Z_MASK) >> SQ_BUF_RSRC_WORD3_DST_SEL_Z_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_ELEMENT_SIZE__VI(sq_buf_rsrc_word3)                                  \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_MASK) >>                                    \
   SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_HASH_ENABLE__VI(sq_buf_rsrc_word3)                                   \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_HASH_ENABLE_MASK) >> SQ_BUF_RSRC_WORD3_HASH_ENABLE_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_HEAP__VI(sq_buf_rsrc_word3)                                          \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_HEAP_MASK) >> SQ_BUF_RSRC_WORD3_HEAP_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_INDEX_STRIDE__VI(sq_buf_rsrc_word3)                                  \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_INDEX_STRIDE_MASK) >>                                    \
   SQ_BUF_RSRC_WORD3_INDEX_STRIDE_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_MTYPE__VI(sq_buf_rsrc_word3)                                         \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_MTYPE_MASK) >> SQ_BUF_RSRC_WORD3_MTYPE_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_NUM_FORMAT__VI(sq_buf_rsrc_word3)                                    \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_NUM_FORMAT_MASK) >> SQ_BUF_RSRC_WORD3_NUM_FORMAT_SHIFT)

#define SQ_BUF_RSRC_WORD3_GET_TYPE__VI(sq_buf_rsrc_word3)                                          \
  ((sq_buf_rsrc_word3 & SQ_BUF_RSRC_WORD3_TYPE_MASK) >> SQ_BUF_RSRC_WORD3_TYPE_SHIFT)

#define SQ_BUF_RSRC_WORD3_MASK__VI                                                                 \
  (SQ_BUF_RSRC_WORD3_DST_SEL_X_MASK | SQ_BUF_RSRC_WORD3_DST_SEL_Y_MASK |                           \
   SQ_BUF_RSRC_WORD3_DST_SEL_Z_MASK | SQ_BUF_RSRC_WORD3_DST_SEL_W_MASK |                           \
   SQ_BUF_RSRC_WORD3_NUM_FORMAT_MASK | SQ_BUF_RSRC_WORD3_DATA_FORMAT_MASK |                        \
   SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_MASK | SQ_BUF_RSRC_WORD3_INDEX_STRIDE_MASK |                     \
   SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_MASK | SQ_BUF_RSRC_WORD3_ATC_MASK |                            \
   SQ_BUF_RSRC_WORD3_HASH_ENABLE_MASK | SQ_BUF_RSRC_WORD3_HEAP_MASK |                              \
   SQ_BUF_RSRC_WORD3_MTYPE_MASK | SQ_BUF_RSRC_WORD3_TYPE_MASK)

#define SQ_BUF_RSRC_WORD3_SET_ADD_TID_ENABLE__VI(sq_buf_rsrc_word3_reg, add_tid_enable)            \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_MASK) |       \
      (add_tid_enable << SQ_BUF_RSRC_WORD3_ADD_TID_ENABLE_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_ATC__VI(sq_buf_rsrc_word3_reg, atc)                                  \
  sq_buf_rsrc_word3_reg =                                                                          \
      (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_ATC_MASK) | (atc << SQ_BUF_RSRC_WORD3_ATC_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_DATA_FORMAT__VI(sq_buf_rsrc_word3_reg, data_format)                  \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_DATA_FORMAT_MASK) |          \
      (data_format << SQ_BUF_RSRC_WORD3_DATA_FORMAT_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_DST_SEL_W__VI(sq_buf_rsrc_word3_reg, dst_sel_w)                      \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_DST_SEL_W_MASK) |            \
      (dst_sel_w << SQ_BUF_RSRC_WORD3_DST_SEL_W_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_DST_SEL_X__VI(sq_buf_rsrc_word3_reg, dst_sel_x)                      \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_DST_SEL_X_MASK) |            \
      (dst_sel_x << SQ_BUF_RSRC_WORD3_DST_SEL_X_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_DST_SEL_Y__VI(sq_buf_rsrc_word3_reg, dst_sel_y)                      \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_DST_SEL_Y_MASK) |            \
      (dst_sel_y << SQ_BUF_RSRC_WORD3_DST_SEL_Y_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_DST_SEL_Z__VI(sq_buf_rsrc_word3_reg, dst_sel_z)                      \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_DST_SEL_Z_MASK) |            \
      (dst_sel_z << SQ_BUF_RSRC_WORD3_DST_SEL_Z_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_ELEMENT_SIZE__VI(sq_buf_rsrc_word3_reg, element_size)                \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_MASK) |         \
      (element_size << SQ_BUF_RSRC_WORD3_ELEMENT_SIZE_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_HASH_ENABLE__VI(sq_buf_rsrc_word3_reg, hash_enable)                  \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_HASH_ENABLE_MASK) |          \
      (hash_enable << SQ_BUF_RSRC_WORD3_HASH_ENABLE_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_HEAP__VI(sq_buf_rsrc_word3_reg, heap)                                \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_HEAP_MASK) |                 \
      (heap << SQ_BUF_RSRC_WORD3_HEAP_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_INDEX_STRIDE__VI(sq_buf_rsrc_word3_reg, index_stride)                \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_INDEX_STRIDE_MASK) |         \
      (index_stride << SQ_BUF_RSRC_WORD3_INDEX_STRIDE_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_MTYPE__VI(sq_buf_rsrc_word3_reg, mtype)                              \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_MTYPE_MASK) |                \
      (mtype << SQ_BUF_RSRC_WORD3_MTYPE_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_NUM_FORMAT__VI(sq_buf_rsrc_word3_reg, num_format)                    \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_NUM_FORMAT_MASK) |           \
      (num_format << SQ_BUF_RSRC_WORD3_NUM_FORMAT_SHIFT)

#define SQ_BUF_RSRC_WORD3_SET_TYPE__VI(sq_buf_rsrc_word3_reg, type)                                \
  sq_buf_rsrc_word3_reg = (sq_buf_rsrc_word3_reg & ~SQ_BUF_RSRC_WORD3_TYPE_MASK) |                 \
      (type << SQ_BUF_RSRC_WORD3_TYPE_SHIFT)

#define SQ_CMD_DATA_MASK__VI 0x00000700
#define SQ_CMD_DATA_SHIFT__VI 8
#define SQ_CMD_DATA_SIZE__VI 3
#define SQ_CMD_DEFAULT__VI 0xc50d05c5
#define SQ_CMD_GET_CHECK_VMID__VI(sq_cmd)                                                          \
  ((sq_cmd & SQ_CMD_CHECK_VMID_MASK) >> SQ_CMD_CHECK_VMID_SHIFT)

#define SQ_CMD_GET_CMD__VI(sq_cmd) ((sq_cmd & SQ_CMD_CMD_MASK) >> SQ_CMD_CMD_SHIFT)

#define SQ_CMD_GET_DATA__VI(sq_cmd) ((sq_cmd & SQ_CMD_DATA_MASK) >> SQ_CMD_DATA_SHIFT)

#define SQ_CMD_GET_MODE__VI(sq_cmd) ((sq_cmd & SQ_CMD_MODE_MASK) >> SQ_CMD_MODE_SHIFT)

#define SQ_CMD_GET_QUEUE_ID__VI(sq_cmd) ((sq_cmd & SQ_CMD_QUEUE_ID_MASK) >> SQ_CMD_QUEUE_ID_SHIFT)

#define SQ_CMD_GET_SIMD_ID__VI(sq_cmd) ((sq_cmd & SQ_CMD_SIMD_ID_MASK) >> SQ_CMD_SIMD_ID_SHIFT)

#define SQ_CMD_GET_VM_ID__VI(sq_cmd) ((sq_cmd & SQ_CMD_VM_ID_MASK) >> SQ_CMD_VM_ID_SHIFT)

#define SQ_CMD_GET_WAVE_ID__VI(sq_cmd) ((sq_cmd & SQ_CMD_WAVE_ID_MASK) >> SQ_CMD_WAVE_ID_SHIFT)

#define SQ_CMD_MASK__VI                                                                            \
  (SQ_CMD_CMD_MASK | SQ_CMD_MODE_MASK | SQ_CMD_CHECK_VMID_MASK | SQ_CMD_DATA_MASK |                \
   SQ_CMD_WAVE_ID_MASK | SQ_CMD_SIMD_ID_MASK | SQ_CMD_QUEUE_ID_MASK | SQ_CMD_VM_ID_MASK)

#define SQ_CMD_SET_CHECK_VMID__VI(sq_cmd_reg, check_vmid)                                          \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_CHECK_VMID_MASK) | (check_vmid << SQ_CMD_CHECK_VMID_SHIFT)

#define SQ_CMD_SET_CMD__VI(sq_cmd_reg, cmd)                                                        \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_CMD_MASK) | (cmd << SQ_CMD_CMD_SHIFT)

#define SQ_CMD_SET_DATA__VI(sq_cmd_reg, data)                                                      \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_DATA_MASK) | (data << SQ_CMD_DATA_SHIFT)

#define SQ_CMD_SET_MODE__VI(sq_cmd_reg, mode)                                                      \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_MODE_MASK) | (mode << SQ_CMD_MODE_SHIFT)

#define SQ_CMD_SET_QUEUE_ID__VI(sq_cmd_reg, queue_id)                                              \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_QUEUE_ID_MASK) | (queue_id << SQ_CMD_QUEUE_ID_SHIFT)

#define SQ_CMD_SET_SIMD_ID__VI(sq_cmd_reg, simd_id)                                                \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_SIMD_ID_MASK) | (simd_id << SQ_CMD_SIMD_ID_SHIFT)

#define SQ_CMD_SET_VM_ID__VI(sq_cmd_reg, vm_id)                                                    \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_VM_ID_MASK) | (vm_id << SQ_CMD_VM_ID_SHIFT)

#define SQ_CMD_SET_WAVE_ID__VI(sq_cmd_reg, wave_id)                                                \
  sq_cmd_reg = (sq_cmd_reg & ~SQ_CMD_WAVE_ID_MASK) | (wave_id << SQ_CMD_WAVE_ID_SHIFT)

#define SQ_CMD_TIMESTAMP_GET_TIMESTAMP__VI(sq_cmd_timestamp)                                       \
  ((sq_cmd_timestamp & SQ_CMD_TIMESTAMP_TIMESTAMP_MASK) >> SQ_CMD_TIMESTAMP_TIMESTAMP_SHIFT)

#define SQ_CMD_TIMESTAMP_MASK__VI (SQ_CMD_TIMESTAMP_TIMESTAMP_MASK)

#define SQ_CMD_TIMESTAMP_SET_TIMESTAMP__VI(sq_cmd_timestamp_reg, timestamp)                        \
  sq_cmd_timestamp_reg = (sq_cmd_timestamp_reg & ~SQ_CMD_TIMESTAMP_TIMESTAMP_MASK) |               \
      (timestamp << SQ_CMD_TIMESTAMP_TIMESTAMP_SHIFT)

#define SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_MASK__VI 0x00000400
#define SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_SHIFT__VI 10
#define SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_SIZE__VI 1
#define SQ_CONFIG_DEBUG_SINGLE_MEMOP_MASK__VI 0x00000200
#define SQ_CONFIG_DEBUG_SINGLE_MEMOP_SHIFT__VI 9
#define SQ_CONFIG_DEBUG_SINGLE_MEMOP_SIZE__VI 1
#define SQ_CONFIG_DEFAULT__SI__CI 0x00000000
#define SQ_CONFIG_DEFAULT__VI 0x01180000
#define SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_MASK__VI 0x00020000
#define SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_SHIFT__VI 17
#define SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_SIZE__VI 1
#define SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_MASK__VI 0x00010000
#define SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_SHIFT__VI 16
#define SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_SIZE__VI 1
#define SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_MASK__VI 0x00040000
#define SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_SHIFT__VI 18
#define SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_SIZE__VI 1
#define SQ_CONFIG_GET_DEBUG_EN__VI(sq_config)                                                      \
  ((sq_config & SQ_CONFIG_DEBUG_EN_MASK) >> SQ_CONFIG_DEBUG_EN_SHIFT)

#define SQ_CONFIG_GET_DEBUG_ONE_INST_CLAUSE__VI(sq_config)                                         \
  ((sq_config & SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_MASK) >> SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_SHIFT)

#define SQ_CONFIG_GET_DEBUG_SINGLE_MEMOP__VI(sq_config)                                            \
  ((sq_config & SQ_CONFIG_DEBUG_SINGLE_MEMOP_MASK) >> SQ_CONFIG_DEBUG_SINGLE_MEMOP_SHIFT)

#define SQ_CONFIG_GET_DISABLE_SMEM_SOFT_CLAUSE__VI(sq_config)                                      \
  ((sq_config & SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_MASK) >>                                        \
   SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_SHIFT)

#define SQ_CONFIG_GET_DISABLE_VMEM_SOFT_CLAUSE__VI(sq_config)                                      \
  ((sq_config & SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_MASK) >>                                        \
   SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_SHIFT)

#define SQ_CONFIG_GET_DUA_FLAT_LDS_PINGPONG_DISABLE__VI(sq_config)                                 \
  ((sq_config & SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_MASK) >>                                   \
   SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_SHIFT)

#define SQ_CONFIG_GET_DUA_FLAT_LOCK_ENABLE__VI(sq_config)                                          \
  ((sq_config & SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_MASK) >> SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_SHIFT)

#define SQ_CONFIG_GET_DUA_LDS_BYPASS_DISABLE__VI(sq_config)                                        \
  ((sq_config & SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_MASK) >> SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_SHIFT)

#define SQ_CONFIG_GET_EARLY_TA_DONE_DISABLE__VI(sq_config)                                         \
  ((sq_config & SQ_CONFIG_EARLY_TA_DONE_DISABLE_MASK) >> SQ_CONFIG_EARLY_TA_DONE_DISABLE_SHIFT)

#define SQ_CONFIG_GET_ENABLE_HIPRIO_ON_EXP_RDY_VS__VI(sq_config)                                   \
  ((sq_config & SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_MASK) >>                                     \
   SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_SHIFT)

#define SQ_CONFIG_GET_PRIO_VAL_ON_EXP_RDY_VS__VI(sq_config)                                        \
  ((sq_config & SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_MASK) >> SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_SHIFT)

#define SQ_CONFIG_GET_REPLAY_SLEEP_CNT__VI(sq_config)                                              \
  ((sq_config & SQ_CONFIG_REPLAY_SLEEP_CNT_MASK) >> SQ_CONFIG_REPLAY_SLEEP_CNT_SHIFT)

#define SQ_CONFIG_GET_UNUSED__VI(sq_config)                                                        \
  ((sq_config & SQ_CONFIG_UNUSED_MASK) >> SQ_CONFIG_UNUSED_SHIFT)

#define SQ_CONFIG_MASK__VI                                                                         \
  (SQ_CONFIG_UNUSED_MASK | SQ_CONFIG_DEBUG_EN_MASK | SQ_CONFIG_DEBUG_SINGLE_MEMOP_MASK |           \
   SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_MASK | SQ_CONFIG_EARLY_TA_DONE_DISABLE_MASK |                   \
   SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_MASK | SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_MASK |                   \
   SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_MASK | SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_MASK |        \
   SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_MASK | SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_MASK |          \
   SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_MASK | SQ_CONFIG_REPLAY_SLEEP_CNT_MASK)

#define SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_MASK__VI 0x00180000
#define SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_SHIFT__VI 19
#define SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_SIZE__VI 2
#define SQ_CONFIG_REPLAY_SLEEP_CNT_MASK__VI 0x01e00000
#define SQ_CONFIG_REPLAY_SLEEP_CNT_SHIFT__VI 21
#define SQ_CONFIG_REPLAY_SLEEP_CNT_SIZE__VI 4
#define SQ_CONFIG_SET_DEBUG_EN__VI(sq_config_reg, debug_en)                                        \
  sq_config_reg =                                                                                  \
      (sq_config_reg & ~SQ_CONFIG_DEBUG_EN_MASK) | (debug_en << SQ_CONFIG_DEBUG_EN_SHIFT)

#define SQ_CONFIG_SET_DEBUG_ONE_INST_CLAUSE__VI(sq_config_reg, debug_one_inst_clause)              \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_MASK) |                        \
      (debug_one_inst_clause << SQ_CONFIG_DEBUG_ONE_INST_CLAUSE_SHIFT)

#define SQ_CONFIG_SET_DEBUG_SINGLE_MEMOP__VI(sq_config_reg, debug_single_memop)                    \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_DEBUG_SINGLE_MEMOP_MASK) |                           \
      (debug_single_memop << SQ_CONFIG_DEBUG_SINGLE_MEMOP_SHIFT)

#define SQ_CONFIG_SET_DISABLE_SMEM_SOFT_CLAUSE__VI(sq_config_reg, disable_smem_soft_clause)        \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_MASK) |                     \
      (disable_smem_soft_clause << SQ_CONFIG_DISABLE_SMEM_SOFT_CLAUSE_SHIFT)

#define SQ_CONFIG_SET_DISABLE_VMEM_SOFT_CLAUSE__VI(sq_config_reg, disable_vmem_soft_clause)        \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_MASK) |                     \
      (disable_vmem_soft_clause << SQ_CONFIG_DISABLE_VMEM_SOFT_CLAUSE_SHIFT)

#define SQ_CONFIG_SET_DUA_FLAT_LDS_PINGPONG_DISABLE__VI(sq_config_reg,                             \
                                                        dua_flat_lds_pingpong_disable)             \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_MASK) |                \
      (dua_flat_lds_pingpong_disable << SQ_CONFIG_DUA_FLAT_LDS_PINGPONG_DISABLE_SHIFT)

#define SQ_CONFIG_SET_DUA_FLAT_LOCK_ENABLE__VI(sq_config_reg, dua_flat_lock_enable)                \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_MASK) |                         \
      (dua_flat_lock_enable << SQ_CONFIG_DUA_FLAT_LOCK_ENABLE_SHIFT)

#define SQ_CONFIG_SET_DUA_LDS_BYPASS_DISABLE__VI(sq_config_reg, dua_lds_bypass_disable)            \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_MASK) |                       \
      (dua_lds_bypass_disable << SQ_CONFIG_DUA_LDS_BYPASS_DISABLE_SHIFT)

#define SQ_CONFIG_SET_EARLY_TA_DONE_DISABLE__VI(sq_config_reg, early_ta_done_disable)              \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_EARLY_TA_DONE_DISABLE_MASK) |                        \
      (early_ta_done_disable << SQ_CONFIG_EARLY_TA_DONE_DISABLE_SHIFT)

#define SQ_CONFIG_SET_ENABLE_HIPRIO_ON_EXP_RDY_VS__VI(sq_config_reg, enable_hiprio_on_exp_rdy_vs)  \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_MASK) |                  \
      (enable_hiprio_on_exp_rdy_vs << SQ_CONFIG_ENABLE_HIPRIO_ON_EXP_RDY_VS_SHIFT)

#define SQ_CONFIG_SET_PRIO_VAL_ON_EXP_RDY_VS__VI(sq_config_reg, prio_val_on_exp_rdy_vs)            \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_MASK) |                       \
      (prio_val_on_exp_rdy_vs << SQ_CONFIG_PRIO_VAL_ON_EXP_RDY_VS_SHIFT)

#define SQ_CONFIG_SET_REPLAY_SLEEP_CNT__VI(sq_config_reg, replay_sleep_cnt)                        \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_REPLAY_SLEEP_CNT_MASK) |                             \
      (replay_sleep_cnt << SQ_CONFIG_REPLAY_SLEEP_CNT_SHIFT)

#define SQ_CONFIG_SET_UNUSED__VI(sq_config_reg, unused)                                            \
  sq_config_reg = (sq_config_reg & ~SQ_CONFIG_UNUSED_MASK) | (unused << SQ_CONFIG_UNUSED_SHIFT)

#define SQ_DEBUG_CTRL_LOCAL_DEFAULT__SI__CI 0x00000000
#define SQ_DEBUG_CTRL_LOCAL_DEFAULT__VI 0x000000cd
#define SQ_DEBUG_CTRL_LOCAL_GET_UNUSED__VI(sq_debug_ctrl_local)                                    \
  ((sq_debug_ctrl_local & SQ_DEBUG_CTRL_LOCAL_UNUSED_MASK) >> SQ_DEBUG_CTRL_LOCAL_UNUSED_SHIFT)

#define SQ_DEBUG_CTRL_LOCAL_MASK__VI (SQ_DEBUG_CTRL_LOCAL_UNUSED_MASK)

#define SQ_DEBUG_CTRL_LOCAL_SET_UNUSED__VI(sq_debug_ctrl_local_reg, unused)                        \
  sq_debug_ctrl_local_reg = (sq_debug_ctrl_local_reg & ~SQ_DEBUG_CTRL_LOCAL_UNUSED_MASK) |         \
      (unused << SQ_DEBUG_CTRL_LOCAL_UNUSED_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_GET_FIFO_LEVEL_GFX0__VI(sq_debug_sts_global2)                         \
  ((sq_debug_sts_global2 & SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_MASK) >>                           \
   SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_GET_FIFO_LEVEL_GFX1__VI(sq_debug_sts_global2)                         \
  ((sq_debug_sts_global2 & SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_MASK) >>                           \
   SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_GET_FIFO_LEVEL_HOST__VI(sq_debug_sts_global2)                         \
  ((sq_debug_sts_global2 & SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_MASK) >>                           \
   SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_GET_FIFO_LEVEL_IMMED__VI(sq_debug_sts_global2)                        \
  ((sq_debug_sts_global2 & SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_MASK) >>                          \
   SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_MASK__VI                                                              \
  (SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_MASK | SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_MASK |         \
   SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_MASK | SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_MASK)

#define SQ_DEBUG_STS_GLOBAL2_SET_FIFO_LEVEL_GFX0__VI(sq_debug_sts_global2_reg, fifo_level_gfx0)    \
  sq_debug_sts_global2_reg =                                                                       \
      (sq_debug_sts_global2_reg & ~SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_MASK) |                    \
      (fifo_level_gfx0 << SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX0_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_SET_FIFO_LEVEL_GFX1__VI(sq_debug_sts_global2_reg, fifo_level_gfx1)    \
  sq_debug_sts_global2_reg =                                                                       \
      (sq_debug_sts_global2_reg & ~SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_MASK) |                    \
      (fifo_level_gfx1 << SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_GFX1_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_SET_FIFO_LEVEL_HOST__VI(sq_debug_sts_global2_reg, fifo_level_host)    \
  sq_debug_sts_global2_reg =                                                                       \
      (sq_debug_sts_global2_reg & ~SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_MASK) |                    \
      (fifo_level_host << SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_HOST_SHIFT)

#define SQ_DEBUG_STS_GLOBAL2_SET_FIFO_LEVEL_IMMED__VI(sq_debug_sts_global2_reg, fifo_level_immed)  \
  sq_debug_sts_global2_reg =                                                                       \
      (sq_debug_sts_global2_reg & ~SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_MASK) |                   \
      (fifo_level_immed << SQ_DEBUG_STS_GLOBAL2_FIFO_LEVEL_IMMED_SHIFT)

#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_MASK__VI 0x000003f0
#define SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_SIZE__VI 6
#define SQ_DEBUG_STS_GLOBAL3_GET_FIFO_LEVEL_HOST_CMD__VI(sq_debug_sts_global3)                     \
  ((sq_debug_sts_global3 & SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_MASK) >>                       \
   SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_SHIFT)

#define SQ_DEBUG_STS_GLOBAL3_GET_FIFO_LEVEL_HOST_REG__VI(sq_debug_sts_global3)                     \
  ((sq_debug_sts_global3 & SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_MASK) >>                       \
   SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_SHIFT)

#define SQ_DEBUG_STS_GLOBAL3_MASK__VI                                                              \
  (SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_MASK | SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_MASK)

#define SQ_DEBUG_STS_GLOBAL3_SET_FIFO_LEVEL_HOST_CMD__VI(sq_debug_sts_global3_reg,                 \
                                                         fifo_level_host_cmd)                      \
  sq_debug_sts_global3_reg =                                                                       \
      (sq_debug_sts_global3_reg & ~SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_MASK) |                \
      (fifo_level_host_cmd << SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_CMD_SHIFT)

#define SQ_DEBUG_STS_GLOBAL3_SET_FIFO_LEVEL_HOST_REG__VI(sq_debug_sts_global3_reg,                 \
                                                         fifo_level_host_reg)                      \
  sq_debug_sts_global3_reg =                                                                       \
      (sq_debug_sts_global3_reg & ~SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_MASK) |                \
      (fifo_level_host_reg << SQ_DEBUG_STS_GLOBAL3_FIFO_LEVEL_HOST_REG_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_GET_BUSY__VI(sq_debug_sts_global)                                      \
  ((sq_debug_sts_global & SQ_DEBUG_STS_GLOBAL_BUSY_MASK) >> SQ_DEBUG_STS_GLOBAL_BUSY_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_GET_INTERRUPT_MSG_BUSY__VI(sq_debug_sts_global)                        \
  ((sq_debug_sts_global & SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_MASK) >>                          \
   SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_GET_WAVE_LEVEL_SH0__VI(sq_debug_sts_global)                            \
  ((sq_debug_sts_global & SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_MASK) >>                              \
   SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_GET_WAVE_LEVEL_SH1__VI(sq_debug_sts_global)                            \
  ((sq_debug_sts_global & SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_MASK) >>                              \
   SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_MASK__VI                                                               \
  (SQ_DEBUG_STS_GLOBAL_BUSY_MASK | SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_MASK |                   \
   SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_MASK | SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_MASK)

#define SQ_DEBUG_STS_GLOBAL_SET_BUSY__VI(sq_debug_sts_global_reg, busy)                            \
  sq_debug_sts_global_reg = (sq_debug_sts_global_reg & ~SQ_DEBUG_STS_GLOBAL_BUSY_MASK) |           \
      (busy << SQ_DEBUG_STS_GLOBAL_BUSY_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_SET_INTERRUPT_MSG_BUSY__VI(sq_debug_sts_global_reg,                    \
                                                       interrupt_msg_busy)                         \
  sq_debug_sts_global_reg =                                                                        \
      (sq_debug_sts_global_reg & ~SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_MASK) |                   \
      (interrupt_msg_busy << SQ_DEBUG_STS_GLOBAL_INTERRUPT_MSG_BUSY_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_SET_WAVE_LEVEL_SH0__VI(sq_debug_sts_global_reg, wave_level_sh0)        \
  sq_debug_sts_global_reg = (sq_debug_sts_global_reg & ~SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_MASK) | \
      (wave_level_sh0 << SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH0_SHIFT)

#define SQ_DEBUG_STS_GLOBAL_SET_WAVE_LEVEL_SH1__VI(sq_debug_sts_global_reg, wave_level_sh1)        \
  sq_debug_sts_global_reg = (sq_debug_sts_global_reg & ~SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_MASK) | \
      (wave_level_sh1 << SQ_DEBUG_STS_GLOBAL_WAVE_LEVEL_SH1_SHIFT)

#define SQ_DEBUG_STS_LOCAL_GET_BUSY__VI(sq_debug_sts_local)                                        \
  ((sq_debug_sts_local & SQ_DEBUG_STS_LOCAL_BUSY_MASK) >> SQ_DEBUG_STS_LOCAL_BUSY_SHIFT)

#define SQ_DEBUG_STS_LOCAL_GET_WAVE_LEVEL__VI(sq_debug_sts_local)                                  \
  ((sq_debug_sts_local & SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_MASK) >> SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_SHIFT)

#define SQ_DEBUG_STS_LOCAL_MASK__VI                                                                \
  (SQ_DEBUG_STS_LOCAL_BUSY_MASK | SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_MASK)

#define SQ_DEBUG_STS_LOCAL_SET_BUSY__VI(sq_debug_sts_local_reg, busy)                              \
  sq_debug_sts_local_reg = (sq_debug_sts_local_reg & ~SQ_DEBUG_STS_LOCAL_BUSY_MASK) |              \
      (busy << SQ_DEBUG_STS_LOCAL_BUSY_SHIFT)

#define SQ_DEBUG_STS_LOCAL_SET_WAVE_LEVEL__VI(sq_debug_sts_local_reg, wave_level)                  \
  sq_debug_sts_local_reg = (sq_debug_sts_local_reg & ~SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_MASK) |        \
      (wave_level << SQ_DEBUG_STS_LOCAL_WAVE_LEVEL_SHIFT)

#define SQ_DSM_CNTL_DEFAULT__VI 0x00000000
#define SQ_DSM_CNTL_GET_LDS_ENABLE_SINGLE_WRITE01__VI(sq_dsm_cntl)                                 \
  ((sq_dsm_cntl & SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_MASK) >>                                   \
   SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_SHIFT)

#define SQ_DSM_CNTL_GET_LDS_ENABLE_SINGLE_WRITE23__VI(sq_dsm_cntl)                                 \
  ((sq_dsm_cntl & SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_MASK) >>                                   \
   SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_LDS_IRRITATOR_DATA0__VI(sq_dsm_cntl)                               \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_MASK) >>                                 \
   SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_LDS_IRRITATOR_DATA1__VI(sq_dsm_cntl)                               \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_MASK) >>                                 \
   SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_LDS_IRRITATOR_DATA2__VI(sq_dsm_cntl)                               \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_MASK) >>                                 \
   SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_LDS_IRRITATOR_DATA3__VI(sq_dsm_cntl)                               \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_MASK) >>                                 \
   SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_SGPR_IRRITATOR_DATA0__VI(sq_dsm_cntl)                              \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_MASK) >>                                \
   SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_SGPR_IRRITATOR_DATA1__VI(sq_dsm_cntl)                              \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_MASK) >>                                \
   SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_SP_IRRITATOR_DATA0__VI(sq_dsm_cntl)                                \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_MASK) >>                                  \
   SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_SHIFT)

#define SQ_DSM_CNTL_GET_SEL_DSM_SP_IRRITATOR_DATA1__VI(sq_dsm_cntl)                                \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_MASK) >>                                  \
   SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_SHIFT)

#define SQ_DSM_CNTL_GET_SGPR_ENABLE_SINGLE_WRITE__VI(sq_dsm_cntl)                                  \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_MASK) >>                                    \
   SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_SHIFT)

#define SQ_DSM_CNTL_GET_SPI_BACKPRESSURE_0__VI(sq_dsm_cntl)                                        \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SPI_BACKPRESSURE_0_MASK) >> SQ_DSM_CNTL_SPI_BACKPRESSURE_0_SHIFT)

#define SQ_DSM_CNTL_GET_SPI_BACKPRESSURE_1__VI(sq_dsm_cntl)                                        \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SPI_BACKPRESSURE_1_MASK) >> SQ_DSM_CNTL_SPI_BACKPRESSURE_1_SHIFT)

#define SQ_DSM_CNTL_GET_SP_ENABLE_SINGLE_WRITE__VI(sq_dsm_cntl)                                    \
  ((sq_dsm_cntl & SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_MASK) >>                                      \
   SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_SHIFT)

#define SQ_DSM_CNTL_GET_WAVEFRONT_STALL_0__VI(sq_dsm_cntl)                                         \
  ((sq_dsm_cntl & SQ_DSM_CNTL_WAVEFRONT_STALL_0_MASK) >> SQ_DSM_CNTL_WAVEFRONT_STALL_0_SHIFT)

#define SQ_DSM_CNTL_GET_WAVEFRONT_STALL_1__VI(sq_dsm_cntl)                                         \
  ((sq_dsm_cntl & SQ_DSM_CNTL_WAVEFRONT_STALL_1_MASK) >> SQ_DSM_CNTL_WAVEFRONT_STALL_1_SHIFT)

#define SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_MASK__VI 0x00040000
#define SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_SHIFT__VI 18
#define SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_SIZE__VI 1
#define SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_MASK__VI 0x00200000
#define SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_SHIFT__VI 21
#define SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_SIZE__VI 1
#define SQ_DSM_CNTL_MASK__VI                                                                       \
  (SQ_DSM_CNTL_WAVEFRONT_STALL_0_MASK | SQ_DSM_CNTL_WAVEFRONT_STALL_1_MASK |                       \
   SQ_DSM_CNTL_SPI_BACKPRESSURE_0_MASK | SQ_DSM_CNTL_SPI_BACKPRESSURE_1_MASK |                     \
   SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_MASK | SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_MASK | \
   SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_MASK | SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_MASK |      \
   SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_MASK | SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_MASK |     \
   SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_MASK | SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_MASK |   \
   SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_MASK | SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_MASK |      \
   SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_MASK | SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_MASK)

#define SQ_DSM_CNTL_REG_SIZE__VI 32
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_MASK__VI 0x00010000
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_SHIFT__VI 16
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_SIZE__VI 1
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_MASK__VI 0x00020000
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_SHIFT__VI 17
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_SIZE__VI 1
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_MASK__VI 0x00080000
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_SHIFT__VI 19
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_SIZE__VI 1
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_MASK__VI 0x00100000
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_SHIFT__VI 20
#define SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_SIZE__VI 1
#define SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_MASK__VI 0x00000100
#define SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_SHIFT__VI 8
#define SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_SIZE__VI 1
#define SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_MASK__VI 0x00000200
#define SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_SHIFT__VI 9
#define SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_SIZE__VI 1
#define SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_MASK__VI 0x01000000
#define SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_SHIFT__VI 24
#define SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_SIZE__VI 1
#define SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_MASK__VI 0x02000000
#define SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_SHIFT__VI 25
#define SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_SIZE__VI 1
#define SQ_DSM_CNTL_SET_LDS_ENABLE_SINGLE_WRITE01__VI(sq_dsm_cntl_reg, lds_enable_single_write01)  \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_MASK) |              \
      (lds_enable_single_write01 << SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE01_SHIFT)

#define SQ_DSM_CNTL_SET_LDS_ENABLE_SINGLE_WRITE23__VI(sq_dsm_cntl_reg, lds_enable_single_write23)  \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_MASK) |              \
      (lds_enable_single_write23 << SQ_DSM_CNTL_LDS_ENABLE_SINGLE_WRITE23_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_LDS_IRRITATOR_DATA0__VI(sq_dsm_cntl_reg,                           \
                                                        sel_dsm_lds_irritator_data0)               \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_MASK) |            \
      (sel_dsm_lds_irritator_data0 << SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA0_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_LDS_IRRITATOR_DATA1__VI(sq_dsm_cntl_reg,                           \
                                                        sel_dsm_lds_irritator_data1)               \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_MASK) |            \
      (sel_dsm_lds_irritator_data1 << SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA1_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_LDS_IRRITATOR_DATA2__VI(sq_dsm_cntl_reg,                           \
                                                        sel_dsm_lds_irritator_data2)               \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_MASK) |            \
      (sel_dsm_lds_irritator_data2 << SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA2_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_LDS_IRRITATOR_DATA3__VI(sq_dsm_cntl_reg,                           \
                                                        sel_dsm_lds_irritator_data3)               \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_MASK) |            \
      (sel_dsm_lds_irritator_data3 << SQ_DSM_CNTL_SEL_DSM_LDS_IRRITATOR_DATA3_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_SGPR_IRRITATOR_DATA0__VI(sq_dsm_cntl_reg,                          \
                                                         sel_dsm_sgpr_irritator_data0)             \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_MASK) |           \
      (sel_dsm_sgpr_irritator_data0 << SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA0_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_SGPR_IRRITATOR_DATA1__VI(sq_dsm_cntl_reg,                          \
                                                         sel_dsm_sgpr_irritator_data1)             \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_MASK) |           \
      (sel_dsm_sgpr_irritator_data1 << SQ_DSM_CNTL_SEL_DSM_SGPR_IRRITATOR_DATA1_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_SP_IRRITATOR_DATA0__VI(sq_dsm_cntl_reg,                            \
                                                       sel_dsm_sp_irritator_data0)                 \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_MASK) |             \
      (sel_dsm_sp_irritator_data0 << SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA0_SHIFT)

#define SQ_DSM_CNTL_SET_SEL_DSM_SP_IRRITATOR_DATA1__VI(sq_dsm_cntl_reg,                            \
                                                       sel_dsm_sp_irritator_data1)                 \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_MASK) |             \
      (sel_dsm_sp_irritator_data1 << SQ_DSM_CNTL_SEL_DSM_SP_IRRITATOR_DATA1_SHIFT)

#define SQ_DSM_CNTL_SET_SGPR_ENABLE_SINGLE_WRITE__VI(sq_dsm_cntl_reg, sgpr_enable_single_write)    \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_MASK) |               \
      (sgpr_enable_single_write << SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_SHIFT)

#define SQ_DSM_CNTL_SET_SPI_BACKPRESSURE_0__VI(sq_dsm_cntl_reg, spi_backpressure_0)                \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SPI_BACKPRESSURE_0_MASK) |                     \
      (spi_backpressure_0 << SQ_DSM_CNTL_SPI_BACKPRESSURE_0_SHIFT)

#define SQ_DSM_CNTL_SET_SPI_BACKPRESSURE_1__VI(sq_dsm_cntl_reg, spi_backpressure_1)                \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SPI_BACKPRESSURE_1_MASK) |                     \
      (spi_backpressure_1 << SQ_DSM_CNTL_SPI_BACKPRESSURE_1_SHIFT)

#define SQ_DSM_CNTL_SET_SP_ENABLE_SINGLE_WRITE__VI(sq_dsm_cntl_reg, sp_enable_single_write)        \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_MASK) |                 \
      (sp_enable_single_write << SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_SHIFT)

#define SQ_DSM_CNTL_SET_WAVEFRONT_STALL_0__VI(sq_dsm_cntl_reg, wavefront_stall_0)                  \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_WAVEFRONT_STALL_0_MASK) |                      \
      (wavefront_stall_0 << SQ_DSM_CNTL_WAVEFRONT_STALL_0_SHIFT)

#define SQ_DSM_CNTL_SET_WAVEFRONT_STALL_1__VI(sq_dsm_cntl_reg, wavefront_stall_1)                  \
  sq_dsm_cntl_reg = (sq_dsm_cntl_reg & ~SQ_DSM_CNTL_WAVEFRONT_STALL_1_MASK) |                      \
      (wavefront_stall_1 << SQ_DSM_CNTL_WAVEFRONT_STALL_1_SHIFT)

#define SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_MASK__VI 0x00000400
#define SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_SHIFT__VI 10
#define SQ_DSM_CNTL_SGPR_ENABLE_SINGLE_WRITE_SIZE__VI 1
#define SQ_DSM_CNTL_SPI_BACKPRESSURE_0_MASK__VI 0x00000004
#define SQ_DSM_CNTL_SPI_BACKPRESSURE_0_SHIFT__VI 2
#define SQ_DSM_CNTL_SPI_BACKPRESSURE_0_SIZE__VI 1
#define SQ_DSM_CNTL_SPI_BACKPRESSURE_1_MASK__VI 0x00000008
#define SQ_DSM_CNTL_SPI_BACKPRESSURE_1_SHIFT__VI 3
#define SQ_DSM_CNTL_SPI_BACKPRESSURE_1_SIZE__VI 1
#define SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_MASK__VI 0x04000000
#define SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_SHIFT__VI 26
#define SQ_DSM_CNTL_SP_ENABLE_SINGLE_WRITE_SIZE__VI 1
#define SQ_DSM_CNTL_WAVEFRONT_STALL_0_MASK__VI 0x00000001
#define SQ_DSM_CNTL_WAVEFRONT_STALL_0_SHIFT__VI 0x00000000
#define SQ_DSM_CNTL_WAVEFRONT_STALL_0_SIZE__VI 1
#define SQ_DSM_CNTL_WAVEFRONT_STALL_1_MASK__VI 0x00000002
#define SQ_DSM_CNTL_WAVEFRONT_STALL_1_SHIFT__VI 1
#define SQ_DSM_CNTL_WAVEFRONT_STALL_1_SIZE__VI 1
#define SQ_EDC_DED_CNT_DEFAULT__VI 0x00000000
#define SQ_EDC_DED_CNT_GET_LDS_DED__VI(sq_edc_ded_cnt)                                             \
  ((sq_edc_ded_cnt & SQ_EDC_DED_CNT_LDS_DED_MASK) >> SQ_EDC_DED_CNT_LDS_DED_SHIFT)

#define SQ_EDC_DED_CNT_GET_SGPR_DED__VI(sq_edc_ded_cnt)                                            \
  ((sq_edc_ded_cnt & SQ_EDC_DED_CNT_SGPR_DED_MASK) >> SQ_EDC_DED_CNT_SGPR_DED_SHIFT)

#define SQ_EDC_DED_CNT_GET_VGPR_DED__VI(sq_edc_ded_cnt)                                            \
  ((sq_edc_ded_cnt & SQ_EDC_DED_CNT_VGPR_DED_MASK) >> SQ_EDC_DED_CNT_VGPR_DED_SHIFT)

#define SQ_EDC_DED_CNT_LDS_DED_MASK__VI 0x000000ff
#define SQ_EDC_DED_CNT_LDS_DED_SHIFT__VI 0x00000000
#define SQ_EDC_DED_CNT_LDS_DED_SIZE__VI 8
#define SQ_EDC_DED_CNT_MASK__VI                                                                    \
  (SQ_EDC_DED_CNT_LDS_DED_MASK | SQ_EDC_DED_CNT_SGPR_DED_MASK | SQ_EDC_DED_CNT_VGPR_DED_MASK)

#define SQ_EDC_DED_CNT_REG_SIZE__VI 32
#define SQ_EDC_DED_CNT_SET_LDS_DED__VI(sq_edc_ded_cnt_reg, lds_ded)                                \
  sq_edc_ded_cnt_reg = (sq_edc_ded_cnt_reg & ~SQ_EDC_DED_CNT_LDS_DED_MASK) |                       \
      (lds_ded << SQ_EDC_DED_CNT_LDS_DED_SHIFT)

#define SQ_EDC_DED_CNT_SET_SGPR_DED__VI(sq_edc_ded_cnt_reg, sgpr_ded)                              \
  sq_edc_ded_cnt_reg = (sq_edc_ded_cnt_reg & ~SQ_EDC_DED_CNT_SGPR_DED_MASK) |                      \
      (sgpr_ded << SQ_EDC_DED_CNT_SGPR_DED_SHIFT)

#define SQ_EDC_DED_CNT_SET_VGPR_DED__VI(sq_edc_ded_cnt_reg, vgpr_ded)                              \
  sq_edc_ded_cnt_reg = (sq_edc_ded_cnt_reg & ~SQ_EDC_DED_CNT_VGPR_DED_MASK) |                      \
      (vgpr_ded << SQ_EDC_DED_CNT_VGPR_DED_SHIFT)

#define SQ_EDC_DED_CNT_SGPR_DED_MASK__VI 0x0000ff00
#define SQ_EDC_DED_CNT_SGPR_DED_SHIFT__VI 8
#define SQ_EDC_DED_CNT_SGPR_DED_SIZE__VI 8
#define SQ_EDC_DED_CNT_VGPR_DED_MASK__VI 0x00ff0000
#define SQ_EDC_DED_CNT_VGPR_DED_SHIFT__VI 16
#define SQ_EDC_DED_CNT_VGPR_DED_SIZE__VI 8
#define SQ_EDC_INFO_DEFAULT__VI 0x00000000
#define SQ_EDC_INFO_GET_SIMD_ID__VI(sq_edc_info)                                                   \
  ((sq_edc_info & SQ_EDC_INFO_SIMD_ID_MASK) >> SQ_EDC_INFO_SIMD_ID_SHIFT)

#define SQ_EDC_INFO_GET_SOURCE__VI(sq_edc_info)                                                    \
  ((sq_edc_info & SQ_EDC_INFO_SOURCE_MASK) >> SQ_EDC_INFO_SOURCE_SHIFT)

#define SQ_EDC_INFO_GET_VM_ID__VI(sq_edc_info)                                                     \
  ((sq_edc_info & SQ_EDC_INFO_VM_ID_MASK) >> SQ_EDC_INFO_VM_ID_SHIFT)

#define SQ_EDC_INFO_GET_WAVE_ID__VI(sq_edc_info)                                                   \
  ((sq_edc_info & SQ_EDC_INFO_WAVE_ID_MASK) >> SQ_EDC_INFO_WAVE_ID_SHIFT)

#define SQ_EDC_INFO_MASK__VI                                                                       \
  (SQ_EDC_INFO_WAVE_ID_MASK | SQ_EDC_INFO_SIMD_ID_MASK | SQ_EDC_INFO_SOURCE_MASK |                 \
   SQ_EDC_INFO_VM_ID_MASK)

#define SQ_EDC_INFO_REG_SIZE__VI 32
#define SQ_EDC_INFO_SET_SIMD_ID__VI(sq_edc_info_reg, simd_id)                                      \
  sq_edc_info_reg =                                                                                \
      (sq_edc_info_reg & ~SQ_EDC_INFO_SIMD_ID_MASK) | (simd_id << SQ_EDC_INFO_SIMD_ID_SHIFT)

#define SQ_EDC_INFO_SET_SOURCE__VI(sq_edc_info_reg, source)                                        \
  sq_edc_info_reg =                                                                                \
      (sq_edc_info_reg & ~SQ_EDC_INFO_SOURCE_MASK) | (source << SQ_EDC_INFO_SOURCE_SHIFT)

#define SQ_EDC_INFO_SET_VM_ID__VI(sq_edc_info_reg, vm_id)                                          \
  sq_edc_info_reg = (sq_edc_info_reg & ~SQ_EDC_INFO_VM_ID_MASK) | (vm_id << SQ_EDC_INFO_VM_ID_SHIFT)

#define SQ_EDC_INFO_SET_WAVE_ID__VI(sq_edc_info_reg, wave_id)                                      \
  sq_edc_info_reg =                                                                                \
      (sq_edc_info_reg & ~SQ_EDC_INFO_WAVE_ID_MASK) | (wave_id << SQ_EDC_INFO_WAVE_ID_SHIFT)

#define SQ_EDC_INFO_SIMD_ID_MASK__VI 0x00000030
#define SQ_EDC_INFO_SIMD_ID_SHIFT__VI 4
#define SQ_EDC_INFO_SIMD_ID_SIZE__VI 2
#define SQ_EDC_INFO_SOURCE_MASK__VI 0x000001c0
#define SQ_EDC_INFO_SOURCE_SHIFT__VI 6
#define SQ_EDC_INFO_SOURCE_SIZE__VI 3
#define SQ_EDC_INFO_VM_ID_MASK__VI 0x00001e00
#define SQ_EDC_INFO_VM_ID_SHIFT__VI 9
#define SQ_EDC_INFO_VM_ID_SIZE__VI 4
#define SQ_EDC_INFO_WAVE_ID_MASK__VI 0x0000000f
#define SQ_EDC_INFO_WAVE_ID_SHIFT__VI 0x00000000
#define SQ_EDC_INFO_WAVE_ID_SIZE__VI 4
#define SQ_EDC_SEC_CNT_DEFAULT__VI 0x00000000
#define SQ_EDC_SEC_CNT_GET_LDS_SEC__VI(sq_edc_sec_cnt)                                             \
  ((sq_edc_sec_cnt & SQ_EDC_SEC_CNT_LDS_SEC_MASK) >> SQ_EDC_SEC_CNT_LDS_SEC_SHIFT)

#define SQ_EDC_SEC_CNT_GET_SGPR_SEC__VI(sq_edc_sec_cnt)                                            \
  ((sq_edc_sec_cnt & SQ_EDC_SEC_CNT_SGPR_SEC_MASK) >> SQ_EDC_SEC_CNT_SGPR_SEC_SHIFT)

#define SQ_EDC_SEC_CNT_GET_VGPR_SEC__VI(sq_edc_sec_cnt)                                            \
  ((sq_edc_sec_cnt & SQ_EDC_SEC_CNT_VGPR_SEC_MASK) >> SQ_EDC_SEC_CNT_VGPR_SEC_SHIFT)

#define SQ_EDC_SEC_CNT_LDS_SEC_MASK__VI 0x000000ff
#define SQ_EDC_SEC_CNT_LDS_SEC_SHIFT__VI 0x00000000
#define SQ_EDC_SEC_CNT_LDS_SEC_SIZE__VI 8
#define SQ_EDC_SEC_CNT_MASK__VI                                                                    \
  (SQ_EDC_SEC_CNT_LDS_SEC_MASK | SQ_EDC_SEC_CNT_SGPR_SEC_MASK | SQ_EDC_SEC_CNT_VGPR_SEC_MASK)

#define SQ_EDC_SEC_CNT_REG_SIZE__VI 32
#define SQ_EDC_SEC_CNT_SET_LDS_SEC__VI(sq_edc_sec_cnt_reg, lds_sec)                                \
  sq_edc_sec_cnt_reg = (sq_edc_sec_cnt_reg & ~SQ_EDC_SEC_CNT_LDS_SEC_MASK) |                       \
      (lds_sec << SQ_EDC_SEC_CNT_LDS_SEC_SHIFT)

#define SQ_EDC_SEC_CNT_SET_SGPR_SEC__VI(sq_edc_sec_cnt_reg, sgpr_sec)                              \
  sq_edc_sec_cnt_reg = (sq_edc_sec_cnt_reg & ~SQ_EDC_SEC_CNT_SGPR_SEC_MASK) |                      \
      (sgpr_sec << SQ_EDC_SEC_CNT_SGPR_SEC_SHIFT)

#define SQ_EDC_SEC_CNT_SET_VGPR_SEC__VI(sq_edc_sec_cnt_reg, vgpr_sec)                              \
  sq_edc_sec_cnt_reg = (sq_edc_sec_cnt_reg & ~SQ_EDC_SEC_CNT_VGPR_SEC_MASK) |                      \
      (vgpr_sec << SQ_EDC_SEC_CNT_VGPR_SEC_SHIFT)

#define SQ_EDC_SEC_CNT_SGPR_SEC_MASK__VI 0x0000ff00
#define SQ_EDC_SEC_CNT_SGPR_SEC_SHIFT__VI 8
#define SQ_EDC_SEC_CNT_SGPR_SEC_SIZE__VI 8
#define SQ_EDC_SEC_CNT_VGPR_SEC_MASK__VI 0x00ff0000
#define SQ_EDC_SEC_CNT_VGPR_SEC_SHIFT__VI 16
#define SQ_EDC_SEC_CNT_VGPR_SEC_SIZE__VI 8
#define SQ_FIFO_SIZES_DEFAULT__SI__CI 0x00000f0f
#define SQ_FIFO_SIZES_DEFAULT__VI 0x00000f01
#define SQ_FIFO_SIZES_GET_EXPORT_BUF_SIZE__VI(sq_fifo_sizes)                                       \
  ((sq_fifo_sizes & SQ_FIFO_SIZES_EXPORT_BUF_SIZE_MASK) >> SQ_FIFO_SIZES_EXPORT_BUF_SIZE_SHIFT)

#define SQ_FIFO_SIZES_GET_INTERRUPT_FIFO_SIZE__VI(sq_fifo_sizes)                                   \
  ((sq_fifo_sizes & SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_MASK) >>                                     \
   SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_SHIFT)

#define SQ_FIFO_SIZES_GET_TTRACE_FIFO_SIZE__VI(sq_fifo_sizes)                                      \
  ((sq_fifo_sizes & SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_MASK) >> SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_SHIFT)

#define SQ_FIFO_SIZES_GET_VMEM_DATA_FIFO_SIZE__VI(sq_fifo_sizes)                                   \
  ((sq_fifo_sizes & SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_MASK) >>                                     \
   SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_SHIFT)

#define SQ_FIFO_SIZES_MASK__VI                                                                     \
  (SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_MASK | SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_MASK |                  \
   SQ_FIFO_SIZES_EXPORT_BUF_SIZE_MASK | SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_MASK)

#define SQ_FIFO_SIZES_SET_EXPORT_BUF_SIZE__VI(sq_fifo_sizes_reg, export_buf_size)                  \
  sq_fifo_sizes_reg = (sq_fifo_sizes_reg & ~SQ_FIFO_SIZES_EXPORT_BUF_SIZE_MASK) |                  \
      (export_buf_size << SQ_FIFO_SIZES_EXPORT_BUF_SIZE_SHIFT)

#define SQ_FIFO_SIZES_SET_INTERRUPT_FIFO_SIZE__VI(sq_fifo_sizes_reg, interrupt_fifo_size)          \
  sq_fifo_sizes_reg = (sq_fifo_sizes_reg & ~SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_MASK) |              \
      (interrupt_fifo_size << SQ_FIFO_SIZES_INTERRUPT_FIFO_SIZE_SHIFT)

#define SQ_FIFO_SIZES_SET_TTRACE_FIFO_SIZE__VI(sq_fifo_sizes_reg, ttrace_fifo_size)                \
  sq_fifo_sizes_reg = (sq_fifo_sizes_reg & ~SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_MASK) |                 \
      (ttrace_fifo_size << SQ_FIFO_SIZES_TTRACE_FIFO_SIZE_SHIFT)

#define SQ_FIFO_SIZES_SET_VMEM_DATA_FIFO_SIZE__VI(sq_fifo_sizes_reg, vmem_data_fifo_size)          \
  sq_fifo_sizes_reg = (sq_fifo_sizes_reg & ~SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_MASK) |              \
      (vmem_data_fifo_size << SQ_FIFO_SIZES_VMEM_DATA_FIFO_SIZE_SHIFT)

#define SQ_FLAT_SCRATCH_WORD0_DEFAULT__VI 0x0005cdcd
#define SQ_FLAT_SCRATCH_WORD0_GET_SIZE__VI(sq_flat_scratch_word0)                                  \
  ((sq_flat_scratch_word0 & SQ_FLAT_SCRATCH_WORD0_SIZE_MASK) >> SQ_FLAT_SCRATCH_WORD0_SIZE_SHIFT)

#define SQ_FLAT_SCRATCH_WORD0_MASK__VI (SQ_FLAT_SCRATCH_WORD0_SIZE_MASK)

#define SQ_FLAT_SCRATCH_WORD0_SET_SIZE__VI(sq_flat_scratch_word0_reg, size)                        \
  sq_flat_scratch_word0_reg = (sq_flat_scratch_word0_reg & ~SQ_FLAT_SCRATCH_WORD0_SIZE_MASK) |     \
      (size << SQ_FLAT_SCRATCH_WORD0_SIZE_SHIFT)

#define SQ_FLAT_SCRATCH_WORD1_DEFAULT__VI 0x00cdcdcd
#define SQ_FLAT_SCRATCH_WORD1_GET_OFFSET__VI(sq_flat_scratch_word1)                                \
  ((sq_flat_scratch_word1 & SQ_FLAT_SCRATCH_WORD1_OFFSET_MASK) >>                                  \
   SQ_FLAT_SCRATCH_WORD1_OFFSET_SHIFT)

#define SQ_FLAT_SCRATCH_WORD1_MASK__VI (SQ_FLAT_SCRATCH_WORD1_OFFSET_MASK)

#define SQ_FLAT_SCRATCH_WORD1_SET_OFFSET__VI(sq_flat_scratch_word1_reg, offset)                    \
  sq_flat_scratch_word1_reg = (sq_flat_scratch_word1_reg & ~SQ_FLAT_SCRATCH_WORD1_OFFSET_MASK) |   \
      (offset << SQ_FLAT_SCRATCH_WORD1_OFFSET_SHIFT)

#define SQ_HV_VMID_CTRL_GET_ALLOWED_VMID_MASK__VI(sq_hv_vmid_ctrl)                                 \
  ((sq_hv_vmid_ctrl & SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_MASK) >>                                   \
   SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_SHIFT)

#define SQ_HV_VMID_CTRL_GET_DEFAULT_VMID__VI(sq_hv_vmid_ctrl)                                      \
  ((sq_hv_vmid_ctrl & SQ_HV_VMID_CTRL_DEFAULT_VMID_MASK) >> SQ_HV_VMID_CTRL_DEFAULT_VMID_SHIFT)

#define SQ_HV_VMID_CTRL_MASK__VI                                                                   \
  (SQ_HV_VMID_CTRL_DEFAULT_VMID_MASK | SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_MASK)

#define SQ_HV_VMID_CTRL_SET_ALLOWED_VMID_MASK__VI(sq_hv_vmid_ctrl_reg, allowed_vmid_mask)          \
  sq_hv_vmid_ctrl_reg = (sq_hv_vmid_ctrl_reg & ~SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_MASK) |          \
      (allowed_vmid_mask << SQ_HV_VMID_CTRL_ALLOWED_VMID_MASK_SHIFT)

#define SQ_HV_VMID_CTRL_SET_DEFAULT_VMID__VI(sq_hv_vmid_ctrl_reg, default_vmid)                    \
  sq_hv_vmid_ctrl_reg = (sq_hv_vmid_ctrl_reg & ~SQ_HV_VMID_CTRL_DEFAULT_VMID_MASK) |               \
      (default_vmid << SQ_HV_VMID_CTRL_DEFAULT_VMID_SHIFT)

#define SQ_IMG_RSRC_WORD0_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD0_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_RSRC_WORD0_GET_BASE_ADDRESS__VI(sq_img_rsrc_word0)                                  \
  ((sq_img_rsrc_word0 & SQ_IMG_RSRC_WORD0_BASE_ADDRESS_MASK) >>                                    \
   SQ_IMG_RSRC_WORD0_BASE_ADDRESS_SHIFT)

#define SQ_IMG_RSRC_WORD0_MASK__VI (SQ_IMG_RSRC_WORD0_BASE_ADDRESS_MASK)

#define SQ_IMG_RSRC_WORD0_SET_BASE_ADDRESS__VI(sq_img_rsrc_word0_reg, base_address)                \
  sq_img_rsrc_word0_reg = (sq_img_rsrc_word0_reg & ~SQ_IMG_RSRC_WORD0_BASE_ADDRESS_MASK) |         \
      (base_address << SQ_IMG_RSRC_WORD0_BASE_ADDRESS_SHIFT)

#define SQ_IMG_RSRC_WORD1_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD1_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_RSRC_WORD1_GET_BASE_ADDRESS_HI__VI(sq_img_rsrc_word1)                               \
  ((sq_img_rsrc_word1 & SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_MASK) >>                                 \
   SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_SHIFT)

#define SQ_IMG_RSRC_WORD1_GET_DATA_FORMAT__VI(sq_img_rsrc_word1)                                   \
  ((sq_img_rsrc_word1 & SQ_IMG_RSRC_WORD1_DATA_FORMAT_MASK) >> SQ_IMG_RSRC_WORD1_DATA_FORMAT_SHIFT)

#define SQ_IMG_RSRC_WORD1_GET_MIN_LOD__VI(sq_img_rsrc_word1)                                       \
  ((sq_img_rsrc_word1 & SQ_IMG_RSRC_WORD1_MIN_LOD_MASK) >> SQ_IMG_RSRC_WORD1_MIN_LOD_SHIFT)

#define SQ_IMG_RSRC_WORD1_GET_MTYPE__VI(sq_img_rsrc_word1)                                         \
  ((sq_img_rsrc_word1 & SQ_IMG_RSRC_WORD1_MTYPE_MASK) >> SQ_IMG_RSRC_WORD1_MTYPE_SHIFT)

#define SQ_IMG_RSRC_WORD1_GET_NUM_FORMAT__VI(sq_img_rsrc_word1)                                    \
  ((sq_img_rsrc_word1 & SQ_IMG_RSRC_WORD1_NUM_FORMAT_MASK) >> SQ_IMG_RSRC_WORD1_NUM_FORMAT_SHIFT)

#define SQ_IMG_RSRC_WORD1_MASK__VI                                                                 \
  (SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_MASK | SQ_IMG_RSRC_WORD1_MIN_LOD_MASK |                       \
   SQ_IMG_RSRC_WORD1_DATA_FORMAT_MASK | SQ_IMG_RSRC_WORD1_NUM_FORMAT_MASK |                        \
   SQ_IMG_RSRC_WORD1_MTYPE_MASK)

#define SQ_IMG_RSRC_WORD1_SET_BASE_ADDRESS_HI__VI(sq_img_rsrc_word1_reg, base_address_hi)          \
  sq_img_rsrc_word1_reg = (sq_img_rsrc_word1_reg & ~SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_MASK) |      \
      (base_address_hi << SQ_IMG_RSRC_WORD1_BASE_ADDRESS_HI_SHIFT)

#define SQ_IMG_RSRC_WORD1_SET_DATA_FORMAT__VI(sq_img_rsrc_word1_reg, data_format)                  \
  sq_img_rsrc_word1_reg = (sq_img_rsrc_word1_reg & ~SQ_IMG_RSRC_WORD1_DATA_FORMAT_MASK) |          \
      (data_format << SQ_IMG_RSRC_WORD1_DATA_FORMAT_SHIFT)

#define SQ_IMG_RSRC_WORD1_SET_MIN_LOD__VI(sq_img_rsrc_word1_reg, min_lod)                          \
  sq_img_rsrc_word1_reg = (sq_img_rsrc_word1_reg & ~SQ_IMG_RSRC_WORD1_MIN_LOD_MASK) |              \
      (min_lod << SQ_IMG_RSRC_WORD1_MIN_LOD_SHIFT)

#define SQ_IMG_RSRC_WORD1_SET_MTYPE__VI(sq_img_rsrc_word1_reg, mtype)                              \
  sq_img_rsrc_word1_reg = (sq_img_rsrc_word1_reg & ~SQ_IMG_RSRC_WORD1_MTYPE_MASK) |                \
      (mtype << SQ_IMG_RSRC_WORD1_MTYPE_SHIFT)

#define SQ_IMG_RSRC_WORD1_SET_NUM_FORMAT__VI(sq_img_rsrc_word1_reg, num_format)                    \
  sq_img_rsrc_word1_reg = (sq_img_rsrc_word1_reg & ~SQ_IMG_RSRC_WORD1_NUM_FORMAT_MASK) |           \
      (num_format << SQ_IMG_RSRC_WORD1_NUM_FORMAT_SHIFT)

#define SQ_IMG_RSRC_WORD2_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD2_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_RSRC_WORD2_GET_HEIGHT__VI(sq_img_rsrc_word2)                                        \
  ((sq_img_rsrc_word2 & SQ_IMG_RSRC_WORD2_HEIGHT_MASK) >> SQ_IMG_RSRC_WORD2_HEIGHT_SHIFT)

#define SQ_IMG_RSRC_WORD2_GET_INTERLACED__VI(sq_img_rsrc_word2)                                    \
  ((sq_img_rsrc_word2 & SQ_IMG_RSRC_WORD2_INTERLACED_MASK) >> SQ_IMG_RSRC_WORD2_INTERLACED_SHIFT)

#define SQ_IMG_RSRC_WORD2_GET_PERF_MOD__VI(sq_img_rsrc_word2)                                      \
  ((sq_img_rsrc_word2 & SQ_IMG_RSRC_WORD2_PERF_MOD_MASK) >> SQ_IMG_RSRC_WORD2_PERF_MOD_SHIFT)

#define SQ_IMG_RSRC_WORD2_GET_WIDTH__VI(sq_img_rsrc_word2)                                         \
  ((sq_img_rsrc_word2 & SQ_IMG_RSRC_WORD2_WIDTH_MASK) >> SQ_IMG_RSRC_WORD2_WIDTH_SHIFT)

#define SQ_IMG_RSRC_WORD2_MASK__VI                                                                 \
  (SQ_IMG_RSRC_WORD2_WIDTH_MASK | SQ_IMG_RSRC_WORD2_HEIGHT_MASK |                                  \
   SQ_IMG_RSRC_WORD2_PERF_MOD_MASK | SQ_IMG_RSRC_WORD2_INTERLACED_MASK)

#define SQ_IMG_RSRC_WORD2_SET_HEIGHT__VI(sq_img_rsrc_word2_reg, height)                            \
  sq_img_rsrc_word2_reg = (sq_img_rsrc_word2_reg & ~SQ_IMG_RSRC_WORD2_HEIGHT_MASK) |               \
      (height << SQ_IMG_RSRC_WORD2_HEIGHT_SHIFT)

#define SQ_IMG_RSRC_WORD2_SET_INTERLACED__VI(sq_img_rsrc_word2_reg, interlaced)                    \
  sq_img_rsrc_word2_reg = (sq_img_rsrc_word2_reg & ~SQ_IMG_RSRC_WORD2_INTERLACED_MASK) |           \
      (interlaced << SQ_IMG_RSRC_WORD2_INTERLACED_SHIFT)

#define SQ_IMG_RSRC_WORD2_SET_PERF_MOD__VI(sq_img_rsrc_word2_reg, perf_mod)                        \
  sq_img_rsrc_word2_reg = (sq_img_rsrc_word2_reg & ~SQ_IMG_RSRC_WORD2_PERF_MOD_MASK) |             \
      (perf_mod << SQ_IMG_RSRC_WORD2_PERF_MOD_SHIFT)

#define SQ_IMG_RSRC_WORD2_SET_WIDTH__VI(sq_img_rsrc_word2_reg, width)                              \
  sq_img_rsrc_word2_reg = (sq_img_rsrc_word2_reg & ~SQ_IMG_RSRC_WORD2_WIDTH_MASK) |                \
      (width << SQ_IMG_RSRC_WORD2_WIDTH_SHIFT)

#define SQ_IMG_RSRC_WORD3_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD3_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_RSRC_WORD3_GET_ATC__VI(sq_img_rsrc_word3)                                           \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_ATC_MASK) >> SQ_IMG_RSRC_WORD3_ATC_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_BASE_LEVEL__VI(sq_img_rsrc_word3)                                    \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_BASE_LEVEL_MASK) >> SQ_IMG_RSRC_WORD3_BASE_LEVEL_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_DST_SEL_W__VI(sq_img_rsrc_word3)                                     \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_DST_SEL_W_MASK) >> SQ_IMG_RSRC_WORD3_DST_SEL_W_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_DST_SEL_X__VI(sq_img_rsrc_word3)                                     \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_DST_SEL_X_MASK) >> SQ_IMG_RSRC_WORD3_DST_SEL_X_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_DST_SEL_Y__VI(sq_img_rsrc_word3)                                     \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_DST_SEL_Y_MASK) >> SQ_IMG_RSRC_WORD3_DST_SEL_Y_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_DST_SEL_Z__VI(sq_img_rsrc_word3)                                     \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_DST_SEL_Z_MASK) >> SQ_IMG_RSRC_WORD3_DST_SEL_Z_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_LAST_LEVEL__VI(sq_img_rsrc_word3)                                    \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_LAST_LEVEL_MASK) >> SQ_IMG_RSRC_WORD3_LAST_LEVEL_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_MTYPE__VI(sq_img_rsrc_word3)                                         \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_MTYPE_MASK) >> SQ_IMG_RSRC_WORD3_MTYPE_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_POW2_PAD__VI(sq_img_rsrc_word3)                                      \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_POW2_PAD_MASK) >> SQ_IMG_RSRC_WORD3_POW2_PAD_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_TILING_INDEX__VI(sq_img_rsrc_word3)                                  \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_TILING_INDEX_MASK) >>                                    \
   SQ_IMG_RSRC_WORD3_TILING_INDEX_SHIFT)

#define SQ_IMG_RSRC_WORD3_GET_TYPE__VI(sq_img_rsrc_word3)                                          \
  ((sq_img_rsrc_word3 & SQ_IMG_RSRC_WORD3_TYPE_MASK) >> SQ_IMG_RSRC_WORD3_TYPE_SHIFT)

#define SQ_IMG_RSRC_WORD3_MASK__VI                                                                 \
  (SQ_IMG_RSRC_WORD3_DST_SEL_X_MASK | SQ_IMG_RSRC_WORD3_DST_SEL_Y_MASK |                           \
   SQ_IMG_RSRC_WORD3_DST_SEL_Z_MASK | SQ_IMG_RSRC_WORD3_DST_SEL_W_MASK |                           \
   SQ_IMG_RSRC_WORD3_BASE_LEVEL_MASK | SQ_IMG_RSRC_WORD3_LAST_LEVEL_MASK |                         \
   SQ_IMG_RSRC_WORD3_TILING_INDEX_MASK | SQ_IMG_RSRC_WORD3_POW2_PAD_MASK |                         \
   SQ_IMG_RSRC_WORD3_MTYPE_MASK | SQ_IMG_RSRC_WORD3_ATC_MASK | SQ_IMG_RSRC_WORD3_TYPE_MASK)

#define SQ_IMG_RSRC_WORD3_SET_ATC__VI(sq_img_rsrc_word3_reg, atc)                                  \
  sq_img_rsrc_word3_reg =                                                                          \
      (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_ATC_MASK) | (atc << SQ_IMG_RSRC_WORD3_ATC_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_BASE_LEVEL__VI(sq_img_rsrc_word3_reg, base_level)                    \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_BASE_LEVEL_MASK) |           \
      (base_level << SQ_IMG_RSRC_WORD3_BASE_LEVEL_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_DST_SEL_W__VI(sq_img_rsrc_word3_reg, dst_sel_w)                      \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_DST_SEL_W_MASK) |            \
      (dst_sel_w << SQ_IMG_RSRC_WORD3_DST_SEL_W_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_DST_SEL_X__VI(sq_img_rsrc_word3_reg, dst_sel_x)                      \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_DST_SEL_X_MASK) |            \
      (dst_sel_x << SQ_IMG_RSRC_WORD3_DST_SEL_X_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_DST_SEL_Y__VI(sq_img_rsrc_word3_reg, dst_sel_y)                      \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_DST_SEL_Y_MASK) |            \
      (dst_sel_y << SQ_IMG_RSRC_WORD3_DST_SEL_Y_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_DST_SEL_Z__VI(sq_img_rsrc_word3_reg, dst_sel_z)                      \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_DST_SEL_Z_MASK) |            \
      (dst_sel_z << SQ_IMG_RSRC_WORD3_DST_SEL_Z_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_LAST_LEVEL__VI(sq_img_rsrc_word3_reg, last_level)                    \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_LAST_LEVEL_MASK) |           \
      (last_level << SQ_IMG_RSRC_WORD3_LAST_LEVEL_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_MTYPE__VI(sq_img_rsrc_word3_reg, mtype)                              \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_MTYPE_MASK) |                \
      (mtype << SQ_IMG_RSRC_WORD3_MTYPE_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_POW2_PAD__VI(sq_img_rsrc_word3_reg, pow2_pad)                        \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_POW2_PAD_MASK) |             \
      (pow2_pad << SQ_IMG_RSRC_WORD3_POW2_PAD_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_TILING_INDEX__VI(sq_img_rsrc_word3_reg, tiling_index)                \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_TILING_INDEX_MASK) |         \
      (tiling_index << SQ_IMG_RSRC_WORD3_TILING_INDEX_SHIFT)

#define SQ_IMG_RSRC_WORD3_SET_TYPE__VI(sq_img_rsrc_word3_reg, type)                                \
  sq_img_rsrc_word3_reg = (sq_img_rsrc_word3_reg & ~SQ_IMG_RSRC_WORD3_TYPE_MASK) |                 \
      (type << SQ_IMG_RSRC_WORD3_TYPE_SHIFT)

#define SQ_IMG_RSRC_WORD4_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD4_DEFAULT__VI 0x05cdcdcd
#define SQ_IMG_RSRC_WORD4_GET_DEPTH__VI(sq_img_rsrc_word4)                                         \
  ((sq_img_rsrc_word4 & SQ_IMG_RSRC_WORD4_DEPTH_MASK) >> SQ_IMG_RSRC_WORD4_DEPTH_SHIFT)

#define SQ_IMG_RSRC_WORD4_GET_PITCH__VI(sq_img_rsrc_word4)                                         \
  ((sq_img_rsrc_word4 & SQ_IMG_RSRC_WORD4_PITCH_MASK) >> SQ_IMG_RSRC_WORD4_PITCH_SHIFT)

#define SQ_IMG_RSRC_WORD4_MASK__VI (SQ_IMG_RSRC_WORD4_DEPTH_MASK | SQ_IMG_RSRC_WORD4_PITCH_MASK)

#define SQ_IMG_RSRC_WORD4_SET_DEPTH__VI(sq_img_rsrc_word4_reg, depth)                              \
  sq_img_rsrc_word4_reg = (sq_img_rsrc_word4_reg & ~SQ_IMG_RSRC_WORD4_DEPTH_MASK) |                \
      (depth << SQ_IMG_RSRC_WORD4_DEPTH_SHIFT)

#define SQ_IMG_RSRC_WORD4_SET_PITCH__VI(sq_img_rsrc_word4_reg, pitch)                              \
  sq_img_rsrc_word4_reg = (sq_img_rsrc_word4_reg & ~SQ_IMG_RSRC_WORD4_PITCH_MASK) |                \
      (pitch << SQ_IMG_RSRC_WORD4_PITCH_SHIFT)

#define SQ_IMG_RSRC_WORD5_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD5_DEFAULT__VI 0x01cdcdcd
#define SQ_IMG_RSRC_WORD5_GET_BASE_ARRAY__VI(sq_img_rsrc_word5)                                    \
  ((sq_img_rsrc_word5 & SQ_IMG_RSRC_WORD5_BASE_ARRAY_MASK) >> SQ_IMG_RSRC_WORD5_BASE_ARRAY_SHIFT)

#define SQ_IMG_RSRC_WORD5_GET_LAST_ARRAY__VI(sq_img_rsrc_word5)                                    \
  ((sq_img_rsrc_word5 & SQ_IMG_RSRC_WORD5_LAST_ARRAY_MASK) >> SQ_IMG_RSRC_WORD5_LAST_ARRAY_SHIFT)

#define SQ_IMG_RSRC_WORD5_MASK__VI                                                                 \
  (SQ_IMG_RSRC_WORD5_BASE_ARRAY_MASK | SQ_IMG_RSRC_WORD5_LAST_ARRAY_MASK)

#define SQ_IMG_RSRC_WORD5_SET_BASE_ARRAY__VI(sq_img_rsrc_word5_reg, base_array)                    \
  sq_img_rsrc_word5_reg = (sq_img_rsrc_word5_reg & ~SQ_IMG_RSRC_WORD5_BASE_ARRAY_MASK) |           \
      (base_array << SQ_IMG_RSRC_WORD5_BASE_ARRAY_SHIFT)

#define SQ_IMG_RSRC_WORD5_SET_LAST_ARRAY__VI(sq_img_rsrc_word5_reg, last_array)                    \
  sq_img_rsrc_word5_reg = (sq_img_rsrc_word5_reg & ~SQ_IMG_RSRC_WORD5_LAST_ARRAY_MASK) |           \
      (last_array << SQ_IMG_RSRC_WORD5_LAST_ARRAY_SHIFT)

#define SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_MASK__VI 0x00400000
#define SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_SHIFT__VI 22
#define SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_SIZE__VI 1
#define SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_MASK__VI 0x00800000
#define SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_SHIFT__VI 23
#define SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_SIZE__VI 1
#define SQ_IMG_RSRC_WORD6_COMPRESSION_EN_MASK__VI 0x00200000
#define SQ_IMG_RSRC_WORD6_COMPRESSION_EN_SHIFT__VI 21
#define SQ_IMG_RSRC_WORD6_COMPRESSION_EN_SIZE__VI 1
#define SQ_IMG_RSRC_WORD6_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD6_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_RSRC_WORD6_GET_ALPHA_IS_ON_MSB__VI(sq_img_rsrc_word6)                               \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_MASK) >>                                 \
   SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_SHIFT)

#define SQ_IMG_RSRC_WORD6_GET_COLOR_TRANSFORM__VI(sq_img_rsrc_word6)                               \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_MASK) >>                                 \
   SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_SHIFT)

#define SQ_IMG_RSRC_WORD6_GET_COMPRESSION_EN__VI(sq_img_rsrc_word6)                                \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_COMPRESSION_EN_MASK) >>                                  \
   SQ_IMG_RSRC_WORD6_COMPRESSION_EN_SHIFT)

#define SQ_IMG_RSRC_WORD6_GET_COUNTER_BANK_ID__VI(sq_img_rsrc_word6)                               \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_MASK) >>                                 \
   SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_SHIFT)

#define SQ_IMG_RSRC_WORD6_GET_LOD_HDW_CNT_EN__VI(sq_img_rsrc_word6)                                \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_MASK) >>                                  \
   SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_SHIFT)

#define SQ_IMG_RSRC_WORD6_GET_LOST_ALPHA_BITS__VI(sq_img_rsrc_word6)                               \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_MASK) >>                                 \
   SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_SHIFT)

#define SQ_IMG_RSRC_WORD6_GET_LOST_COLOR_BITS__VI(sq_img_rsrc_word6)                               \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_MASK) >>                                 \
   SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_SHIFT)

#define SQ_IMG_RSRC_WORD6_GET_MIN_LOD_WARN__VI(sq_img_rsrc_word6)                                  \
  ((sq_img_rsrc_word6 & SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_MASK) >>                                    \
   SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_SHIFT)

#define SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_MASK__VI 0x0f000000
#define SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_SHIFT__VI 24
#define SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_SIZE__VI 4
#define SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_MASK__VI 0xf0000000
#define SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_SHIFT__VI 28
#define SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_SIZE__VI 4
#define SQ_IMG_RSRC_WORD6_MASK__VI                                                                 \
  (SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_MASK | SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_MASK |                  \
   SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_MASK | SQ_IMG_RSRC_WORD6_COMPRESSION_EN_MASK |                 \
   SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_MASK | SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_MASK |               \
   SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_MASK | SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_MASK)

#define SQ_IMG_RSRC_WORD6_SET_ALPHA_IS_ON_MSB__VI(sq_img_rsrc_word6_reg, alpha_is_on_msb)          \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_MASK) |      \
      (alpha_is_on_msb << SQ_IMG_RSRC_WORD6_ALPHA_IS_ON_MSB_SHIFT)

#define SQ_IMG_RSRC_WORD6_SET_COLOR_TRANSFORM__VI(sq_img_rsrc_word6_reg, color_transform)          \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_MASK) |      \
      (color_transform << SQ_IMG_RSRC_WORD6_COLOR_TRANSFORM_SHIFT)

#define SQ_IMG_RSRC_WORD6_SET_COMPRESSION_EN__VI(sq_img_rsrc_word6_reg, compression_en)            \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_COMPRESSION_EN_MASK) |       \
      (compression_en << SQ_IMG_RSRC_WORD6_COMPRESSION_EN_SHIFT)

#define SQ_IMG_RSRC_WORD6_SET_COUNTER_BANK_ID__VI(sq_img_rsrc_word6_reg, counter_bank_id)          \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_MASK) |      \
      (counter_bank_id << SQ_IMG_RSRC_WORD6_COUNTER_BANK_ID_SHIFT)

#define SQ_IMG_RSRC_WORD6_SET_LOD_HDW_CNT_EN__VI(sq_img_rsrc_word6_reg, lod_hdw_cnt_en)            \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_MASK) |       \
      (lod_hdw_cnt_en << SQ_IMG_RSRC_WORD6_LOD_HDW_CNT_EN_SHIFT)

#define SQ_IMG_RSRC_WORD6_SET_LOST_ALPHA_BITS__VI(sq_img_rsrc_word6_reg, lost_alpha_bits)          \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_MASK) |      \
      (lost_alpha_bits << SQ_IMG_RSRC_WORD6_LOST_ALPHA_BITS_SHIFT)

#define SQ_IMG_RSRC_WORD6_SET_LOST_COLOR_BITS__VI(sq_img_rsrc_word6_reg, lost_color_bits)          \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_MASK) |      \
      (lost_color_bits << SQ_IMG_RSRC_WORD6_LOST_COLOR_BITS_SHIFT)

#define SQ_IMG_RSRC_WORD6_SET_MIN_LOD_WARN__VI(sq_img_rsrc_word6_reg, min_lod_warn)                \
  sq_img_rsrc_word6_reg = (sq_img_rsrc_word6_reg & ~SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_MASK) |         \
      (min_lod_warn << SQ_IMG_RSRC_WORD6_MIN_LOD_WARN_SHIFT)

#define SQ_IMG_RSRC_WORD7_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_RSRC_WORD7_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_RSRC_WORD7_GET_META_DATA_ADDRESS__VI(sq_img_rsrc_word7)                             \
  ((sq_img_rsrc_word7 & SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_MASK) >>                               \
   SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_SHIFT)

#define SQ_IMG_RSRC_WORD7_MASK__VI (SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_MASK)

#define SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_MASK__VI 0xffffffff
#define SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_SHIFT__VI 0x00000000
#define SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_SIZE__VI 32
#define SQ_IMG_RSRC_WORD7_SET_META_DATA_ADDRESS__VI(sq_img_rsrc_word7_reg, meta_data_address)      \
  sq_img_rsrc_word7_reg = (sq_img_rsrc_word7_reg & ~SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_MASK) |    \
      (meta_data_address << SQ_IMG_RSRC_WORD7_META_DATA_ADDRESS_SHIFT)

#define SQ_IMG_SAMP_WORD0_COMPAT_MODE_MASK__VI 0x80000000
#define SQ_IMG_SAMP_WORD0_COMPAT_MODE_SHIFT__VI 31
#define SQ_IMG_SAMP_WORD0_COMPAT_MODE_SIZE__VI 1
#define SQ_IMG_SAMP_WORD0_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_SAMP_WORD0_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_SAMP_WORD0_GET_ANISO_BIAS__VI(sq_img_samp_word0)                                    \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_ANISO_BIAS_MASK) >> SQ_IMG_SAMP_WORD0_ANISO_BIAS_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_ANISO_THRESHOLD__VI(sq_img_samp_word0)                               \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_MASK) >>                                 \
   SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_CLAMP_X__VI(sq_img_samp_word0)                                       \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_CLAMP_X_MASK) >> SQ_IMG_SAMP_WORD0_CLAMP_X_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_CLAMP_Y__VI(sq_img_samp_word0)                                       \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_CLAMP_Y_MASK) >> SQ_IMG_SAMP_WORD0_CLAMP_Y_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_CLAMP_Z__VI(sq_img_samp_word0)                                       \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_CLAMP_Z_MASK) >> SQ_IMG_SAMP_WORD0_CLAMP_Z_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_COMPAT_MODE__VI(sq_img_samp_word0)                                   \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_COMPAT_MODE_MASK) >> SQ_IMG_SAMP_WORD0_COMPAT_MODE_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_DEPTH_COMPARE_FUNC__VI(sq_img_samp_word0)                            \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_MASK) >>                              \
   SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_DISABLE_CUBE_WRAP__VI(sq_img_samp_word0)                             \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_MASK) >>                               \
   SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_FILTER_MODE__VI(sq_img_samp_word0)                                   \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_FILTER_MODE_MASK) >> SQ_IMG_SAMP_WORD0_FILTER_MODE_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_FORCE_DEGAMMA__VI(sq_img_samp_word0)                                 \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_MASK) >>                                   \
   SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_FORCE_UNNORMALIZED__VI(sq_img_samp_word0)                            \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_MASK) >>                              \
   SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_MAX_ANISO_RATIO__VI(sq_img_samp_word0)                               \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_MASK) >>                                 \
   SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_MC_COORD_TRUNC__VI(sq_img_samp_word0)                                \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_MASK) >>                                  \
   SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_SHIFT)

#define SQ_IMG_SAMP_WORD0_GET_TRUNC_COORD__VI(sq_img_samp_word0)                                   \
  ((sq_img_samp_word0 & SQ_IMG_SAMP_WORD0_TRUNC_COORD_MASK) >> SQ_IMG_SAMP_WORD0_TRUNC_COORD_SHIFT)

#define SQ_IMG_SAMP_WORD0_MASK__VI                                                                 \
  (SQ_IMG_SAMP_WORD0_CLAMP_X_MASK | SQ_IMG_SAMP_WORD0_CLAMP_Y_MASK |                               \
   SQ_IMG_SAMP_WORD0_CLAMP_Z_MASK | SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_MASK |                       \
   SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_MASK | SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_MASK |         \
   SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_MASK | SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_MASK |                \
   SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_MASK | SQ_IMG_SAMP_WORD0_ANISO_BIAS_MASK |                      \
   SQ_IMG_SAMP_WORD0_TRUNC_COORD_MASK | SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_MASK |                 \
   SQ_IMG_SAMP_WORD0_FILTER_MODE_MASK | SQ_IMG_SAMP_WORD0_COMPAT_MODE_MASK)

#define SQ_IMG_SAMP_WORD0_SET_ANISO_BIAS__VI(sq_img_samp_word0_reg, aniso_bias)                    \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_ANISO_BIAS_MASK) |           \
      (aniso_bias << SQ_IMG_SAMP_WORD0_ANISO_BIAS_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_ANISO_THRESHOLD__VI(sq_img_samp_word0_reg, aniso_threshold)          \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_MASK) |      \
      (aniso_threshold << SQ_IMG_SAMP_WORD0_ANISO_THRESHOLD_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_CLAMP_X__VI(sq_img_samp_word0_reg, clamp_x)                          \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_CLAMP_X_MASK) |              \
      (clamp_x << SQ_IMG_SAMP_WORD0_CLAMP_X_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_CLAMP_Y__VI(sq_img_samp_word0_reg, clamp_y)                          \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_CLAMP_Y_MASK) |              \
      (clamp_y << SQ_IMG_SAMP_WORD0_CLAMP_Y_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_CLAMP_Z__VI(sq_img_samp_word0_reg, clamp_z)                          \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_CLAMP_Z_MASK) |              \
      (clamp_z << SQ_IMG_SAMP_WORD0_CLAMP_Z_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_COMPAT_MODE__VI(sq_img_samp_word0_reg, compat_mode)                  \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_COMPAT_MODE_MASK) |          \
      (compat_mode << SQ_IMG_SAMP_WORD0_COMPAT_MODE_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_DEPTH_COMPARE_FUNC__VI(sq_img_samp_word0_reg, depth_compare_func)    \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_MASK) |   \
      (depth_compare_func << SQ_IMG_SAMP_WORD0_DEPTH_COMPARE_FUNC_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_DISABLE_CUBE_WRAP__VI(sq_img_samp_word0_reg, disable_cube_wrap)      \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_MASK) |    \
      (disable_cube_wrap << SQ_IMG_SAMP_WORD0_DISABLE_CUBE_WRAP_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_FILTER_MODE__VI(sq_img_samp_word0_reg, filter_mode)                  \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_FILTER_MODE_MASK) |          \
      (filter_mode << SQ_IMG_SAMP_WORD0_FILTER_MODE_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_FORCE_DEGAMMA__VI(sq_img_samp_word0_reg, force_degamma)              \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_MASK) |        \
      (force_degamma << SQ_IMG_SAMP_WORD0_FORCE_DEGAMMA_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_FORCE_UNNORMALIZED__VI(sq_img_samp_word0_reg, force_unnormalized)    \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_MASK) |   \
      (force_unnormalized << SQ_IMG_SAMP_WORD0_FORCE_UNNORMALIZED_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_MAX_ANISO_RATIO__VI(sq_img_samp_word0_reg, max_aniso_ratio)          \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_MASK) |      \
      (max_aniso_ratio << SQ_IMG_SAMP_WORD0_MAX_ANISO_RATIO_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_MC_COORD_TRUNC__VI(sq_img_samp_word0_reg, mc_coord_trunc)            \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_MASK) |       \
      (mc_coord_trunc << SQ_IMG_SAMP_WORD0_MC_COORD_TRUNC_SHIFT)

#define SQ_IMG_SAMP_WORD0_SET_TRUNC_COORD__VI(sq_img_samp_word0_reg, trunc_coord)                  \
  sq_img_samp_word0_reg = (sq_img_samp_word0_reg & ~SQ_IMG_SAMP_WORD0_TRUNC_COORD_MASK) |          \
      (trunc_coord << SQ_IMG_SAMP_WORD0_TRUNC_COORD_SHIFT)

#define SQ_IMG_SAMP_WORD1_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_SAMP_WORD1_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_SAMP_WORD1_GET_MAX_LOD__VI(sq_img_samp_word1)                                       \
  ((sq_img_samp_word1 & SQ_IMG_SAMP_WORD1_MAX_LOD_MASK) >> SQ_IMG_SAMP_WORD1_MAX_LOD_SHIFT)

#define SQ_IMG_SAMP_WORD1_GET_MIN_LOD__VI(sq_img_samp_word1)                                       \
  ((sq_img_samp_word1 & SQ_IMG_SAMP_WORD1_MIN_LOD_MASK) >> SQ_IMG_SAMP_WORD1_MIN_LOD_SHIFT)

#define SQ_IMG_SAMP_WORD1_GET_PERF_MIP__VI(sq_img_samp_word1)                                      \
  ((sq_img_samp_word1 & SQ_IMG_SAMP_WORD1_PERF_MIP_MASK) >> SQ_IMG_SAMP_WORD1_PERF_MIP_SHIFT)

#define SQ_IMG_SAMP_WORD1_GET_PERF_Z__VI(sq_img_samp_word1)                                        \
  ((sq_img_samp_word1 & SQ_IMG_SAMP_WORD1_PERF_Z_MASK) >> SQ_IMG_SAMP_WORD1_PERF_Z_SHIFT)

#define SQ_IMG_SAMP_WORD1_MASK__VI                                                                 \
  (SQ_IMG_SAMP_WORD1_MIN_LOD_MASK | SQ_IMG_SAMP_WORD1_MAX_LOD_MASK |                               \
   SQ_IMG_SAMP_WORD1_PERF_MIP_MASK | SQ_IMG_SAMP_WORD1_PERF_Z_MASK)

#define SQ_IMG_SAMP_WORD1_SET_MAX_LOD__VI(sq_img_samp_word1_reg, max_lod)                          \
  sq_img_samp_word1_reg = (sq_img_samp_word1_reg & ~SQ_IMG_SAMP_WORD1_MAX_LOD_MASK) |              \
      (max_lod << SQ_IMG_SAMP_WORD1_MAX_LOD_SHIFT)

#define SQ_IMG_SAMP_WORD1_SET_MIN_LOD__VI(sq_img_samp_word1_reg, min_lod)                          \
  sq_img_samp_word1_reg = (sq_img_samp_word1_reg & ~SQ_IMG_SAMP_WORD1_MIN_LOD_MASK) |              \
      (min_lod << SQ_IMG_SAMP_WORD1_MIN_LOD_SHIFT)

#define SQ_IMG_SAMP_WORD1_SET_PERF_MIP__VI(sq_img_samp_word1_reg, perf_mip)                        \
  sq_img_samp_word1_reg = (sq_img_samp_word1_reg & ~SQ_IMG_SAMP_WORD1_PERF_MIP_MASK) |             \
      (perf_mip << SQ_IMG_SAMP_WORD1_PERF_MIP_SHIFT)

#define SQ_IMG_SAMP_WORD1_SET_PERF_Z__VI(sq_img_samp_word1_reg, perf_z)                            \
  sq_img_samp_word1_reg = (sq_img_samp_word1_reg & ~SQ_IMG_SAMP_WORD1_PERF_Z_MASK) |               \
      (perf_z << SQ_IMG_SAMP_WORD1_PERF_Z_SHIFT)

#define SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_MASK__VI 0x80000000
#define SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_SHIFT__VI 31
#define SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_SIZE__VI 1
#define SQ_IMG_SAMP_WORD2_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_SAMP_WORD2_DEFAULT__VI 0xcdcdcdcd
#define SQ_IMG_SAMP_WORD2_GET_ANISO_OVERRIDE__VI(sq_img_samp_word2)                                \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_MASK) >>                                  \
   SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_DISABLE_LSB_CEIL__VI(sq_img_samp_word2)                              \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_MASK) >>                                \
   SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_FILTER_PREC_FIX__VI(sq_img_samp_word2)                               \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_MASK) >>                                 \
   SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_LOD_BIAS__VI(sq_img_samp_word2)                                      \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_LOD_BIAS_MASK) >> SQ_IMG_SAMP_WORD2_LOD_BIAS_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_LOD_BIAS_SEC__VI(sq_img_samp_word2)                                  \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_MASK) >>                                    \
   SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_MIP_FILTER__VI(sq_img_samp_word2)                                    \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_MIP_FILTER_MASK) >> SQ_IMG_SAMP_WORD2_MIP_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_MIP_POINT_PRECLAMP__VI(sq_img_samp_word2)                            \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_MASK) >>                              \
   SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_XY_MAG_FILTER__VI(sq_img_samp_word2)                                 \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_MASK) >>                                   \
   SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_XY_MIN_FILTER__VI(sq_img_samp_word2)                                 \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_MASK) >>                                   \
   SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD2_GET_Z_FILTER__VI(sq_img_samp_word2)                                      \
  ((sq_img_samp_word2 & SQ_IMG_SAMP_WORD2_Z_FILTER_MASK) >> SQ_IMG_SAMP_WORD2_Z_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD2_MASK__VI                                                                 \
  (SQ_IMG_SAMP_WORD2_LOD_BIAS_MASK | SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_MASK |                         \
   SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_MASK | SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_MASK |                   \
   SQ_IMG_SAMP_WORD2_Z_FILTER_MASK | SQ_IMG_SAMP_WORD2_MIP_FILTER_MASK |                           \
   SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_MASK | SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_MASK |           \
   SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_MASK | SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_MASK)

#define SQ_IMG_SAMP_WORD2_SET_ANISO_OVERRIDE__VI(sq_img_samp_word2_reg, aniso_override)            \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_MASK) |       \
      (aniso_override << SQ_IMG_SAMP_WORD2_ANISO_OVERRIDE_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_DISABLE_LSB_CEIL__VI(sq_img_samp_word2_reg, disable_lsb_ceil)        \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_MASK) |     \
      (disable_lsb_ceil << SQ_IMG_SAMP_WORD2_DISABLE_LSB_CEIL_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_FILTER_PREC_FIX__VI(sq_img_samp_word2_reg, filter_prec_fix)          \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_MASK) |      \
      (filter_prec_fix << SQ_IMG_SAMP_WORD2_FILTER_PREC_FIX_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_LOD_BIAS__VI(sq_img_samp_word2_reg, lod_bias)                        \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_LOD_BIAS_MASK) |             \
      (lod_bias << SQ_IMG_SAMP_WORD2_LOD_BIAS_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_LOD_BIAS_SEC__VI(sq_img_samp_word2_reg, lod_bias_sec)                \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_MASK) |         \
      (lod_bias_sec << SQ_IMG_SAMP_WORD2_LOD_BIAS_SEC_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_MIP_FILTER__VI(sq_img_samp_word2_reg, mip_filter)                    \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_MIP_FILTER_MASK) |           \
      (mip_filter << SQ_IMG_SAMP_WORD2_MIP_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_MIP_POINT_PRECLAMP__VI(sq_img_samp_word2_reg, mip_point_preclamp)    \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_MASK) |   \
      (mip_point_preclamp << SQ_IMG_SAMP_WORD2_MIP_POINT_PRECLAMP_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_XY_MAG_FILTER__VI(sq_img_samp_word2_reg, xy_mag_filter)              \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_MASK) |        \
      (xy_mag_filter << SQ_IMG_SAMP_WORD2_XY_MAG_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_XY_MIN_FILTER__VI(sq_img_samp_word2_reg, xy_min_filter)              \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_MASK) |        \
      (xy_min_filter << SQ_IMG_SAMP_WORD2_XY_MIN_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD2_SET_Z_FILTER__VI(sq_img_samp_word2_reg, z_filter)                        \
  sq_img_samp_word2_reg = (sq_img_samp_word2_reg & ~SQ_IMG_SAMP_WORD2_Z_FILTER_MASK) |             \
      (z_filter << SQ_IMG_SAMP_WORD2_Z_FILTER_SHIFT)

#define SQ_IMG_SAMP_WORD3_DEFAULT__SI__CI 0x00000000
#define SQ_IMG_SAMP_WORD3_DEFAULT__VI 0xc0000dcd
#define SQ_IMG_SAMP_WORD3_GET_BORDER_COLOR_PTR__VI(sq_img_samp_word3)                              \
  ((sq_img_samp_word3 & SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_MASK) >>                                \
   SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_SHIFT)

#define SQ_IMG_SAMP_WORD3_GET_BORDER_COLOR_TYPE__VI(sq_img_samp_word3)                             \
  ((sq_img_samp_word3 & SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_MASK) >>                               \
   SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_SHIFT)

#define SQ_IMG_SAMP_WORD3_MASK__VI                                                                 \
  (SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_MASK | SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_MASK)

#define SQ_IMG_SAMP_WORD3_SET_BORDER_COLOR_PTR__VI(sq_img_samp_word3_reg, border_color_ptr)        \
  sq_img_samp_word3_reg = (sq_img_samp_word3_reg & ~SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_MASK) |     \
      (border_color_ptr << SQ_IMG_SAMP_WORD3_BORDER_COLOR_PTR_SHIFT)

#define SQ_IMG_SAMP_WORD3_SET_BORDER_COLOR_TYPE__VI(sq_img_samp_word3_reg, border_color_type)      \
  sq_img_samp_word3_reg = (sq_img_samp_word3_reg & ~SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_MASK) |    \
      (border_color_type << SQ_IMG_SAMP_WORD3_BORDER_COLOR_TYPE_SHIFT)

#define SQ_IND_DATA_DEFAULT__SI__CI 0x00000000
#define SQ_IND_DATA_DEFAULT__VI 0xcdcdcdcd
#define SQ_IND_DATA_GET_DATA__VI(sq_ind_data)                                                      \
  ((sq_ind_data & SQ_IND_DATA_DATA_MASK) >> SQ_IND_DATA_DATA_SHIFT)

#define SQ_IND_DATA_MASK__VI (SQ_IND_DATA_DATA_MASK)

#define SQ_IND_DATA_SET_DATA__VI(sq_ind_data_reg, data)                                            \
  sq_ind_data_reg = (sq_ind_data_reg & ~SQ_IND_DATA_DATA_MASK) | (data << SQ_IND_DATA_DATA_SHIFT)

#define SQ_IND_INDEX_GET_AUTO_INCR__VI(sq_ind_index)                                               \
  ((sq_ind_index & SQ_IND_INDEX_AUTO_INCR_MASK) >> SQ_IND_INDEX_AUTO_INCR_SHIFT)

#define SQ_IND_INDEX_GET_FORCE_READ__VI(sq_ind_index)                                              \
  ((sq_ind_index & SQ_IND_INDEX_FORCE_READ_MASK) >> SQ_IND_INDEX_FORCE_READ_SHIFT)

#define SQ_IND_INDEX_GET_INDEX__VI(sq_ind_index)                                                   \
  ((sq_ind_index & SQ_IND_INDEX_INDEX_MASK) >> SQ_IND_INDEX_INDEX_SHIFT)

#define SQ_IND_INDEX_GET_READ_TIMEOUT__VI(sq_ind_index)                                            \
  ((sq_ind_index & SQ_IND_INDEX_READ_TIMEOUT_MASK) >> SQ_IND_INDEX_READ_TIMEOUT_SHIFT)

#define SQ_IND_INDEX_GET_SIMD_ID__VI(sq_ind_index)                                                 \
  ((sq_ind_index & SQ_IND_INDEX_SIMD_ID_MASK) >> SQ_IND_INDEX_SIMD_ID_SHIFT)

#define SQ_IND_INDEX_GET_THREAD_ID__VI(sq_ind_index)                                               \
  ((sq_ind_index & SQ_IND_INDEX_THREAD_ID_MASK) >> SQ_IND_INDEX_THREAD_ID_SHIFT)

#define SQ_IND_INDEX_GET_UNINDEXED__VI(sq_ind_index)                                               \
  ((sq_ind_index & SQ_IND_INDEX_UNINDEXED_MASK) >> SQ_IND_INDEX_UNINDEXED_SHIFT)

#define SQ_IND_INDEX_GET_WAVE_ID__VI(sq_ind_index)                                                 \
  ((sq_ind_index & SQ_IND_INDEX_WAVE_ID_MASK) >> SQ_IND_INDEX_WAVE_ID_SHIFT)

#define SQ_IND_INDEX_MASK__VI                                                                      \
  (SQ_IND_INDEX_WAVE_ID_MASK | SQ_IND_INDEX_SIMD_ID_MASK | SQ_IND_INDEX_THREAD_ID_MASK |           \
   SQ_IND_INDEX_AUTO_INCR_MASK | SQ_IND_INDEX_FORCE_READ_MASK | SQ_IND_INDEX_READ_TIMEOUT_MASK |   \
   SQ_IND_INDEX_UNINDEXED_MASK | SQ_IND_INDEX_INDEX_MASK)

#define SQ_IND_INDEX_SET_AUTO_INCR__VI(sq_ind_index_reg, auto_incr)                                \
  sq_ind_index_reg = (sq_ind_index_reg & ~SQ_IND_INDEX_AUTO_INCR_MASK) |                           \
      (auto_incr << SQ_IND_INDEX_AUTO_INCR_SHIFT)

#define SQ_IND_INDEX_SET_FORCE_READ__VI(sq_ind_index_reg, force_read)                              \
  sq_ind_index_reg = (sq_ind_index_reg & ~SQ_IND_INDEX_FORCE_READ_MASK) |                          \
      (force_read << SQ_IND_INDEX_FORCE_READ_SHIFT)

#define SQ_IND_INDEX_SET_INDEX__VI(sq_ind_index_reg, index)                                        \
  sq_ind_index_reg =                                                                               \
      (sq_ind_index_reg & ~SQ_IND_INDEX_INDEX_MASK) | (index << SQ_IND_INDEX_INDEX_SHIFT)

#define SQ_IND_INDEX_SET_READ_TIMEOUT__VI(sq_ind_index_reg, read_timeout)                          \
  sq_ind_index_reg = (sq_ind_index_reg & ~SQ_IND_INDEX_READ_TIMEOUT_MASK) |                        \
      (read_timeout << SQ_IND_INDEX_READ_TIMEOUT_SHIFT)

#define SQ_IND_INDEX_SET_SIMD_ID__VI(sq_ind_index_reg, simd_id)                                    \
  sq_ind_index_reg =                                                                               \
      (sq_ind_index_reg & ~SQ_IND_INDEX_SIMD_ID_MASK) | (simd_id << SQ_IND_INDEX_SIMD_ID_SHIFT)

#define SQ_IND_INDEX_SET_THREAD_ID__VI(sq_ind_index_reg, thread_id)                                \
  sq_ind_index_reg = (sq_ind_index_reg & ~SQ_IND_INDEX_THREAD_ID_MASK) |                           \
      (thread_id << SQ_IND_INDEX_THREAD_ID_SHIFT)

#define SQ_IND_INDEX_SET_UNINDEXED__VI(sq_ind_index_reg, unindexed)                                \
  sq_ind_index_reg = (sq_ind_index_reg & ~SQ_IND_INDEX_UNINDEXED_MASK) |                           \
      (unindexed << SQ_IND_INDEX_UNINDEXED_SHIFT)

#define SQ_IND_INDEX_SET_WAVE_ID__VI(sq_ind_index_reg, wave_id)                                    \
  sq_ind_index_reg =                                                                               \
      (sq_ind_index_reg & ~SQ_IND_INDEX_WAVE_ID_MASK) | (wave_id << SQ_IND_INDEX_WAVE_ID_SHIFT)

#define SQ_INTERRUPT_AUTO_MASK_GET_MASK__VI(sq_interrupt_auto_mask)                                \
  ((sq_interrupt_auto_mask & SQ_INTERRUPT_AUTO_MASK_MASK_MASK) >> SQ_INTERRUPT_AUTO_MASK_MASK_SHIFT)

#define SQ_INTERRUPT_AUTO_MASK_MASK__VI (SQ_INTERRUPT_AUTO_MASK_MASK_MASK)

#define SQ_INTERRUPT_AUTO_MASK_SET_MASK__VI(sq_interrupt_auto_mask_reg, mask)                      \
  sq_interrupt_auto_mask_reg = (sq_interrupt_auto_mask_reg & ~SQ_INTERRUPT_AUTO_MASK_MASK_MASK) |  \
      (mask << SQ_INTERRUPT_AUTO_MASK_MASK_SHIFT)

#define SQ_INTERRUPT_MSG_CTRL_GET_STALL__VI(sq_interrupt_msg_ctrl)                                 \
  ((sq_interrupt_msg_ctrl & SQ_INTERRUPT_MSG_CTRL_STALL_MASK) >> SQ_INTERRUPT_MSG_CTRL_STALL_SHIFT)

#define SQ_INTERRUPT_MSG_CTRL_MASK__VI (SQ_INTERRUPT_MSG_CTRL_STALL_MASK)

#define SQ_INTERRUPT_MSG_CTRL_SET_STALL__VI(sq_interrupt_msg_ctrl_reg, stall)                      \
  sq_interrupt_msg_ctrl_reg = (sq_interrupt_msg_ctrl_reg & ~SQ_INTERRUPT_MSG_CTRL_STALL_MASK) |    \
      (stall << SQ_INTERRUPT_MSG_CTRL_STALL_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_DEFAULT__SI__CI 0x00000000
#define SQ_INTERRUPT_WORD_AUTO_DEFAULT__VI 0x0d0000cd
#define SQ_INTERRUPT_WORD_AUTO_GET_CMD_TIMESTAMP__VI(sq_interrupt_word_auto)                       \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_MASK) >>                         \
   SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_ENCODING__VI(sq_interrupt_word_auto)                            \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_ENCODING_MASK) >>                              \
   SQ_INTERRUPT_WORD_AUTO_ENCODING_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_HOST_CMD_OVERFLOW__VI(sq_interrupt_word_auto)                   \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_MASK) >>                     \
   SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_HOST_REG_OVERFLOW__VI(sq_interrupt_word_auto)                   \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_MASK) >>                     \
   SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_IMMED_OVERFLOW__VI(sq_interrupt_word_auto)                      \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_MASK) >>                        \
   SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_REG_TIMESTAMP__VI(sq_interrupt_word_auto)                       \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_MASK) >>                         \
   SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_SE_ID__VI(sq_interrupt_word_auto)                               \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_SE_ID_MASK) >>                                 \
   SQ_INTERRUPT_WORD_AUTO_SE_ID_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_THREAD_TRACE__VI(sq_interrupt_word_auto)                        \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_MASK) >>                          \
   SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_THREAD_TRACE_BUF_FULL__VI(sq_interrupt_word_auto)               \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_MASK) >>                 \
   SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_GET_WLT__VI(sq_interrupt_word_auto)                                 \
  ((sq_interrupt_word_auto & SQ_INTERRUPT_WORD_AUTO_WLT_MASK) >> SQ_INTERRUPT_WORD_AUTO_WLT_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_MASK__VI                                                            \
  (SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_MASK | SQ_INTERRUPT_WORD_AUTO_WLT_MASK |                    \
   SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_MASK | SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_MASK | \
   SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_MASK | SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_MASK |     \
   SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_MASK | SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_MASK |    \
   SQ_INTERRUPT_WORD_AUTO_SE_ID_MASK | SQ_INTERRUPT_WORD_AUTO_ENCODING_MASK)

#define SQ_INTERRUPT_WORD_AUTO_SET_CMD_TIMESTAMP__VI(sq_interrupt_word_auto_reg, cmd_timestamp)    \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_MASK) |                  \
      (cmd_timestamp << SQ_INTERRUPT_WORD_AUTO_CMD_TIMESTAMP_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_ENCODING__VI(sq_interrupt_word_auto_reg, encoding)              \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_ENCODING_MASK) |                       \
      (encoding << SQ_INTERRUPT_WORD_AUTO_ENCODING_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_HOST_CMD_OVERFLOW__VI(sq_interrupt_word_auto_reg,               \
                                                         host_cmd_overflow)                        \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_MASK) |              \
      (host_cmd_overflow << SQ_INTERRUPT_WORD_AUTO_HOST_CMD_OVERFLOW_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_HOST_REG_OVERFLOW__VI(sq_interrupt_word_auto_reg,               \
                                                         host_reg_overflow)                        \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_MASK) |              \
      (host_reg_overflow << SQ_INTERRUPT_WORD_AUTO_HOST_REG_OVERFLOW_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_IMMED_OVERFLOW__VI(sq_interrupt_word_auto_reg, immed_overflow)  \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_MASK) |                 \
      (immed_overflow << SQ_INTERRUPT_WORD_AUTO_IMMED_OVERFLOW_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_REG_TIMESTAMP__VI(sq_interrupt_word_auto_reg, reg_timestamp)    \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_MASK) |                  \
      (reg_timestamp << SQ_INTERRUPT_WORD_AUTO_REG_TIMESTAMP_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_SE_ID__VI(sq_interrupt_word_auto_reg, se_id)                    \
  sq_interrupt_word_auto_reg = (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_SE_ID_MASK) | \
      (se_id << SQ_INTERRUPT_WORD_AUTO_SE_ID_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_THREAD_TRACE__VI(sq_interrupt_word_auto_reg, thread_trace)      \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_MASK) |                   \
      (thread_trace << SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_THREAD_TRACE_BUF_FULL__VI(sq_interrupt_word_auto_reg,           \
                                                             thread_trace_buf_full)                \
  sq_interrupt_word_auto_reg =                                                                     \
      (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_MASK) |          \
      (thread_trace_buf_full << SQ_INTERRUPT_WORD_AUTO_THREAD_TRACE_BUF_FULL_SHIFT)

#define SQ_INTERRUPT_WORD_AUTO_SET_WLT__VI(sq_interrupt_word_auto_reg, wlt)                        \
  sq_interrupt_word_auto_reg = (sq_interrupt_word_auto_reg & ~SQ_INTERRUPT_WORD_AUTO_WLT_MASK) |   \
      (wlt << SQ_INTERRUPT_WORD_AUTO_WLT_SHIFT)

#define SQ_INTERRUPT_WORD_CMN_DEFAULT__SI__CI 0x00000000
#define SQ_INTERRUPT_WORD_CMN_DEFAULT__VI 0x0d000000
#define SQ_INTERRUPT_WORD_CMN_GET_ENCODING__VI(sq_interrupt_word_cmn)                              \
  ((sq_interrupt_word_cmn & SQ_INTERRUPT_WORD_CMN_ENCODING_MASK) >>                                \
   SQ_INTERRUPT_WORD_CMN_ENCODING_SHIFT)

#define SQ_INTERRUPT_WORD_CMN_GET_SE_ID__VI(sq_interrupt_word_cmn)                                 \
  ((sq_interrupt_word_cmn & SQ_INTERRUPT_WORD_CMN_SE_ID_MASK) >> SQ_INTERRUPT_WORD_CMN_SE_ID_SHIFT)

#define SQ_INTERRUPT_WORD_CMN_MASK__VI                                                             \
  (SQ_INTERRUPT_WORD_CMN_SE_ID_MASK | SQ_INTERRUPT_WORD_CMN_ENCODING_MASK)

#define SQ_INTERRUPT_WORD_CMN_SET_ENCODING__VI(sq_interrupt_word_cmn_reg, encoding)                \
  sq_interrupt_word_cmn_reg = (sq_interrupt_word_cmn_reg & ~SQ_INTERRUPT_WORD_CMN_ENCODING_MASK) | \
      (encoding << SQ_INTERRUPT_WORD_CMN_ENCODING_SHIFT)

#define SQ_INTERRUPT_WORD_CMN_SET_SE_ID__VI(sq_interrupt_word_cmn_reg, se_id)                      \
  sq_interrupt_word_cmn_reg = (sq_interrupt_word_cmn_reg & ~SQ_INTERRUPT_WORD_CMN_SE_ID_MASK) |    \
      (se_id << SQ_INTERRUPT_WORD_CMN_SE_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_DEFAULT__SI__CI 0x00000000
#define SQ_INTERRUPT_WORD_WAVE_DEFAULT__VI 0x0dcdcdcd
#define SQ_INTERRUPT_WORD_WAVE_GET_CU_ID__VI(sq_interrupt_word_wave)                               \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_CU_ID_MASK) >>                                 \
   SQ_INTERRUPT_WORD_WAVE_CU_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_DATA__VI(sq_interrupt_word_wave)                                \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_DATA_MASK) >> SQ_INTERRUPT_WORD_WAVE_DATA_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_ENCODING__VI(sq_interrupt_word_wave)                            \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_ENCODING_MASK) >>                              \
   SQ_INTERRUPT_WORD_WAVE_ENCODING_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_PRIV__VI(sq_interrupt_word_wave)                                \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_PRIV_MASK) >> SQ_INTERRUPT_WORD_WAVE_PRIV_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_SE_ID__VI(sq_interrupt_word_wave)                               \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_SE_ID_MASK) >>                                 \
   SQ_INTERRUPT_WORD_WAVE_SE_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_SH_ID__VI(sq_interrupt_word_wave)                               \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_SH_ID_MASK) >>                                 \
   SQ_INTERRUPT_WORD_WAVE_SH_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_SIMD_ID__VI(sq_interrupt_word_wave)                             \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_SIMD_ID_MASK) >>                               \
   SQ_INTERRUPT_WORD_WAVE_SIMD_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_VM_ID__VI(sq_interrupt_word_wave)                               \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_VM_ID_MASK) >>                                 \
   SQ_INTERRUPT_WORD_WAVE_VM_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_GET_WAVE_ID__VI(sq_interrupt_word_wave)                             \
  ((sq_interrupt_word_wave & SQ_INTERRUPT_WORD_WAVE_WAVE_ID_MASK) >>                               \
   SQ_INTERRUPT_WORD_WAVE_WAVE_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_MASK__VI                                                            \
  (SQ_INTERRUPT_WORD_WAVE_DATA_MASK | SQ_INTERRUPT_WORD_WAVE_SH_ID_MASK |                          \
   SQ_INTERRUPT_WORD_WAVE_PRIV_MASK | SQ_INTERRUPT_WORD_WAVE_VM_ID_MASK |                          \
   SQ_INTERRUPT_WORD_WAVE_WAVE_ID_MASK | SQ_INTERRUPT_WORD_WAVE_SIMD_ID_MASK |                     \
   SQ_INTERRUPT_WORD_WAVE_CU_ID_MASK | SQ_INTERRUPT_WORD_WAVE_SE_ID_MASK |                         \
   SQ_INTERRUPT_WORD_WAVE_ENCODING_MASK)

#define SQ_INTERRUPT_WORD_WAVE_SET_CU_ID__VI(sq_interrupt_word_wave_reg, cu_id)                    \
  sq_interrupt_word_wave_reg = (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_CU_ID_MASK) | \
      (cu_id << SQ_INTERRUPT_WORD_WAVE_CU_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_DATA__VI(sq_interrupt_word_wave_reg, data)                      \
  sq_interrupt_word_wave_reg = (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_DATA_MASK) |  \
      (data << SQ_INTERRUPT_WORD_WAVE_DATA_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_ENCODING__VI(sq_interrupt_word_wave_reg, encoding)              \
  sq_interrupt_word_wave_reg =                                                                     \
      (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_ENCODING_MASK) |                       \
      (encoding << SQ_INTERRUPT_WORD_WAVE_ENCODING_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_PRIV__VI(sq_interrupt_word_wave_reg, priv)                      \
  sq_interrupt_word_wave_reg = (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_PRIV_MASK) |  \
      (priv << SQ_INTERRUPT_WORD_WAVE_PRIV_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_SE_ID__VI(sq_interrupt_word_wave_reg, se_id)                    \
  sq_interrupt_word_wave_reg = (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_SE_ID_MASK) | \
      (se_id << SQ_INTERRUPT_WORD_WAVE_SE_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_SH_ID__VI(sq_interrupt_word_wave_reg, sh_id)                    \
  sq_interrupt_word_wave_reg = (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_SH_ID_MASK) | \
      (sh_id << SQ_INTERRUPT_WORD_WAVE_SH_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_SIMD_ID__VI(sq_interrupt_word_wave_reg, simd_id)                \
  sq_interrupt_word_wave_reg =                                                                     \
      (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_SIMD_ID_MASK) |                        \
      (simd_id << SQ_INTERRUPT_WORD_WAVE_SIMD_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_VM_ID__VI(sq_interrupt_word_wave_reg, vm_id)                    \
  sq_interrupt_word_wave_reg = (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_VM_ID_MASK) | \
      (vm_id << SQ_INTERRUPT_WORD_WAVE_VM_ID_SHIFT)

#define SQ_INTERRUPT_WORD_WAVE_SET_WAVE_ID__VI(sq_interrupt_word_wave_reg, wave_id)                \
  sq_interrupt_word_wave_reg =                                                                     \
      (sq_interrupt_word_wave_reg & ~SQ_INTERRUPT_WORD_WAVE_WAVE_ID_MASK) |                        \
      (wave_id << SQ_INTERRUPT_WORD_WAVE_WAVE_ID_SHIFT)

#define SQ_LB_CTR_CTRL_GET_CLEAR__VI(sq_lb_ctr_ctrl)                                               \
  ((sq_lb_ctr_ctrl & SQ_LB_CTR_CTRL_CLEAR_MASK) >> SQ_LB_CTR_CTRL_CLEAR_SHIFT)

#define SQ_LB_CTR_CTRL_GET_LOAD__VI(sq_lb_ctr_ctrl)                                                \
  ((sq_lb_ctr_ctrl & SQ_LB_CTR_CTRL_LOAD_MASK) >> SQ_LB_CTR_CTRL_LOAD_SHIFT)

#define SQ_LB_CTR_CTRL_GET_START__VI(sq_lb_ctr_ctrl)                                               \
  ((sq_lb_ctr_ctrl & SQ_LB_CTR_CTRL_START_MASK) >> SQ_LB_CTR_CTRL_START_SHIFT)

#define SQ_LB_CTR_CTRL_MASK__VI                                                                    \
  (SQ_LB_CTR_CTRL_START_MASK | SQ_LB_CTR_CTRL_LOAD_MASK | SQ_LB_CTR_CTRL_CLEAR_MASK)

#define SQ_LB_CTR_CTRL_SET_CLEAR__VI(sq_lb_ctr_ctrl_reg, clear)                                    \
  sq_lb_ctr_ctrl_reg =                                                                             \
      (sq_lb_ctr_ctrl_reg & ~SQ_LB_CTR_CTRL_CLEAR_MASK) | (clear << SQ_LB_CTR_CTRL_CLEAR_SHIFT)

#define SQ_LB_CTR_CTRL_SET_LOAD__VI(sq_lb_ctr_ctrl_reg, load)                                      \
  sq_lb_ctr_ctrl_reg =                                                                             \
      (sq_lb_ctr_ctrl_reg & ~SQ_LB_CTR_CTRL_LOAD_MASK) | (load << SQ_LB_CTR_CTRL_LOAD_SHIFT)

#define SQ_LB_CTR_CTRL_SET_START__VI(sq_lb_ctr_ctrl_reg, start)                                    \
  sq_lb_ctr_ctrl_reg =                                                                             \
      (sq_lb_ctr_ctrl_reg & ~SQ_LB_CTR_CTRL_START_MASK) | (start << SQ_LB_CTR_CTRL_START_SHIFT)

#define SQ_LB_DATA_ALU_CYCLES_GET_DATA__VI(sq_lb_data_alu_cycles)                                  \
  ((sq_lb_data_alu_cycles & SQ_LB_DATA_ALU_CYCLES_DATA_MASK) >> SQ_LB_DATA_ALU_CYCLES_DATA_SHIFT)

#define SQ_LB_DATA_ALU_CYCLES_MASK__VI (SQ_LB_DATA_ALU_CYCLES_DATA_MASK)

#define SQ_LB_DATA_ALU_CYCLES_SET_DATA__VI(sq_lb_data_alu_cycles_reg, data)                        \
  sq_lb_data_alu_cycles_reg = (sq_lb_data_alu_cycles_reg & ~SQ_LB_DATA_ALU_CYCLES_DATA_MASK) |     \
      (data << SQ_LB_DATA_ALU_CYCLES_DATA_SHIFT)

#define SQ_LB_DATA_ALU_STALLS_GET_DATA__VI(sq_lb_data_alu_stalls)                                  \
  ((sq_lb_data_alu_stalls & SQ_LB_DATA_ALU_STALLS_DATA_MASK) >> SQ_LB_DATA_ALU_STALLS_DATA_SHIFT)

#define SQ_LB_DATA_ALU_STALLS_MASK__VI (SQ_LB_DATA_ALU_STALLS_DATA_MASK)

#define SQ_LB_DATA_ALU_STALLS_SET_DATA__VI(sq_lb_data_alu_stalls_reg, data)                        \
  sq_lb_data_alu_stalls_reg = (sq_lb_data_alu_stalls_reg & ~SQ_LB_DATA_ALU_STALLS_DATA_MASK) |     \
      (data << SQ_LB_DATA_ALU_STALLS_DATA_SHIFT)

#define SQ_LB_DATA_TEX_CYCLES_GET_DATA__VI(sq_lb_data_tex_cycles)                                  \
  ((sq_lb_data_tex_cycles & SQ_LB_DATA_TEX_CYCLES_DATA_MASK) >> SQ_LB_DATA_TEX_CYCLES_DATA_SHIFT)

#define SQ_LB_DATA_TEX_CYCLES_MASK__VI (SQ_LB_DATA_TEX_CYCLES_DATA_MASK)

#define SQ_LB_DATA_TEX_CYCLES_SET_DATA__VI(sq_lb_data_tex_cycles_reg, data)                        \
  sq_lb_data_tex_cycles_reg = (sq_lb_data_tex_cycles_reg & ~SQ_LB_DATA_TEX_CYCLES_DATA_MASK) |     \
      (data << SQ_LB_DATA_TEX_CYCLES_DATA_SHIFT)

#define SQ_LB_DATA_TEX_STALLS_GET_DATA__VI(sq_lb_data_tex_stalls)                                  \
  ((sq_lb_data_tex_stalls & SQ_LB_DATA_TEX_STALLS_DATA_MASK) >> SQ_LB_DATA_TEX_STALLS_DATA_SHIFT)

#define SQ_LB_DATA_TEX_STALLS_MASK__VI (SQ_LB_DATA_TEX_STALLS_DATA_MASK)

#define SQ_LB_DATA_TEX_STALLS_SET_DATA__VI(sq_lb_data_tex_stalls_reg, data)                        \
  sq_lb_data_tex_stalls_reg = (sq_lb_data_tex_stalls_reg & ~SQ_LB_DATA_TEX_STALLS_DATA_MASK) |     \
      (data << SQ_LB_DATA_TEX_STALLS_DATA_SHIFT)

#define SQ_LDS_CLK_CTRL_GET_FORCE_CU_ON_SH0__VI(sq_lds_clk_ctrl)                                   \
  ((sq_lds_clk_ctrl & SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_MASK) >>                                     \
   SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT)

#define SQ_LDS_CLK_CTRL_GET_FORCE_CU_ON_SH1__VI(sq_lds_clk_ctrl)                                   \
  ((sq_lds_clk_ctrl & SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_MASK) >>                                     \
   SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT)

#define SQ_LDS_CLK_CTRL_MASK__VI                                                                   \
  (SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_MASK | SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_MASK)

#define SQ_LDS_CLK_CTRL_SET_FORCE_CU_ON_SH0__VI(sq_lds_clk_ctrl_reg, force_cu_on_sh0)              \
  sq_lds_clk_ctrl_reg = (sq_lds_clk_ctrl_reg & ~SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_MASK) |            \
      (force_cu_on_sh0 << SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT)

#define SQ_LDS_CLK_CTRL_SET_FORCE_CU_ON_SH1__VI(sq_lds_clk_ctrl_reg, force_cu_on_sh1)              \
  sq_lds_clk_ctrl_reg = (sq_lds_clk_ctrl_reg & ~SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_MASK) |            \
      (force_cu_on_sh1 << SQ_LDS_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT)

#define SQ_M0_GPR_IDX_WORD_DEFAULT__VI 0x0000c0cd
#define SQ_M0_GPR_IDX_WORD_GET_INDEX__VI(sq_m0_gpr_idx_word)                                       \
  ((sq_m0_gpr_idx_word & SQ_M0_GPR_IDX_WORD_INDEX_MASK) >> SQ_M0_GPR_IDX_WORD_INDEX_SHIFT)

#define SQ_M0_GPR_IDX_WORD_GET_VDST_REL__VI(sq_m0_gpr_idx_word)                                    \
  ((sq_m0_gpr_idx_word & SQ_M0_GPR_IDX_WORD_VDST_REL_MASK) >> SQ_M0_GPR_IDX_WORD_VDST_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_GET_VSRC0_REL__VI(sq_m0_gpr_idx_word)                                   \
  ((sq_m0_gpr_idx_word & SQ_M0_GPR_IDX_WORD_VSRC0_REL_MASK) >> SQ_M0_GPR_IDX_WORD_VSRC0_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_GET_VSRC1_REL__VI(sq_m0_gpr_idx_word)                                   \
  ((sq_m0_gpr_idx_word & SQ_M0_GPR_IDX_WORD_VSRC1_REL_MASK) >> SQ_M0_GPR_IDX_WORD_VSRC1_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_GET_VSRC2_REL__VI(sq_m0_gpr_idx_word)                                   \
  ((sq_m0_gpr_idx_word & SQ_M0_GPR_IDX_WORD_VSRC2_REL_MASK) >> SQ_M0_GPR_IDX_WORD_VSRC2_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_INDEX_MASK__VI 0x000000ff
#define SQ_M0_GPR_IDX_WORD_INDEX_SHIFT__VI 0x00000000
#define SQ_M0_GPR_IDX_WORD_INDEX_SIZE__VI 8
#define SQ_M0_GPR_IDX_WORD_MASK__VI                                                                \
  (SQ_M0_GPR_IDX_WORD_INDEX_MASK | SQ_M0_GPR_IDX_WORD_VSRC0_REL_MASK |                             \
   SQ_M0_GPR_IDX_WORD_VSRC1_REL_MASK | SQ_M0_GPR_IDX_WORD_VSRC2_REL_MASK |                         \
   SQ_M0_GPR_IDX_WORD_VDST_REL_MASK)

#define SQ_M0_GPR_IDX_WORD_REG_SIZE__VI 32
#define SQ_M0_GPR_IDX_WORD_SET_INDEX__VI(sq_m0_gpr_idx_word_reg, index)                            \
  sq_m0_gpr_idx_word_reg = (sq_m0_gpr_idx_word_reg & ~SQ_M0_GPR_IDX_WORD_INDEX_MASK) |             \
      (index << SQ_M0_GPR_IDX_WORD_INDEX_SHIFT)

#define SQ_M0_GPR_IDX_WORD_SET_VDST_REL__VI(sq_m0_gpr_idx_word_reg, vdst_rel)                      \
  sq_m0_gpr_idx_word_reg = (sq_m0_gpr_idx_word_reg & ~SQ_M0_GPR_IDX_WORD_VDST_REL_MASK) |          \
      (vdst_rel << SQ_M0_GPR_IDX_WORD_VDST_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_SET_VSRC0_REL__VI(sq_m0_gpr_idx_word_reg, vsrc0_rel)                    \
  sq_m0_gpr_idx_word_reg = (sq_m0_gpr_idx_word_reg & ~SQ_M0_GPR_IDX_WORD_VSRC0_REL_MASK) |         \
      (vsrc0_rel << SQ_M0_GPR_IDX_WORD_VSRC0_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_SET_VSRC1_REL__VI(sq_m0_gpr_idx_word_reg, vsrc1_rel)                    \
  sq_m0_gpr_idx_word_reg = (sq_m0_gpr_idx_word_reg & ~SQ_M0_GPR_IDX_WORD_VSRC1_REL_MASK) |         \
      (vsrc1_rel << SQ_M0_GPR_IDX_WORD_VSRC1_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_SET_VSRC2_REL__VI(sq_m0_gpr_idx_word_reg, vsrc2_rel)                    \
  sq_m0_gpr_idx_word_reg = (sq_m0_gpr_idx_word_reg & ~SQ_M0_GPR_IDX_WORD_VSRC2_REL_MASK) |         \
      (vsrc2_rel << SQ_M0_GPR_IDX_WORD_VSRC2_REL_SHIFT)

#define SQ_M0_GPR_IDX_WORD_VDST_REL_MASK__VI 0x00008000
#define SQ_M0_GPR_IDX_WORD_VDST_REL_SHIFT__VI 15
#define SQ_M0_GPR_IDX_WORD_VDST_REL_SIZE__VI 1
#define SQ_M0_GPR_IDX_WORD_VSRC0_REL_MASK__VI 0x00001000
#define SQ_M0_GPR_IDX_WORD_VSRC0_REL_SHIFT__VI 12
#define SQ_M0_GPR_IDX_WORD_VSRC0_REL_SIZE__VI 1
#define SQ_M0_GPR_IDX_WORD_VSRC1_REL_MASK__VI 0x00002000
#define SQ_M0_GPR_IDX_WORD_VSRC1_REL_SHIFT__VI 13
#define SQ_M0_GPR_IDX_WORD_VSRC1_REL_SIZE__VI 1
#define SQ_M0_GPR_IDX_WORD_VSRC2_REL_MASK__VI 0x00004000
#define SQ_M0_GPR_IDX_WORD_VSRC2_REL_SHIFT__VI 14
#define SQ_M0_GPR_IDX_WORD_VSRC2_REL_SIZE__VI 1
#define SQ_PERFCOUNTER0_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER0_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER0_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter0_hi)                              \
  ((sq_perfcounter0_hi & SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER0_HI_MASK__VI (SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER0_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter0_hi_reg, perfcounter_hi)          \
  sq_perfcounter0_hi_reg = (sq_perfcounter0_hi_reg & ~SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER0_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER0_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER0_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER0_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter0_lo)                              \
  ((sq_perfcounter0_lo & SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER0_LO_MASK__VI (SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER0_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter0_lo_reg, perfcounter_lo)          \
  sq_perfcounter0_lo_reg = (sq_perfcounter0_lo_reg & ~SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER0_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_GET_PERF_MODE__VI(sq_perfcounter0_select)                           \
  ((sq_perfcounter0_select & SQ_PERFCOUNTER0_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER0_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_GET_PERF_SEL__VI(sq_perfcounter0_select)                            \
  ((sq_perfcounter0_select & SQ_PERFCOUNTER0_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER0_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_GET_SIMD_MASK__VI(sq_perfcounter0_select)                           \
  ((sq_perfcounter0_select & SQ_PERFCOUNTER0_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER0_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_GET_SPM_MODE__VI(sq_perfcounter0_select)                            \
  ((sq_perfcounter0_select & SQ_PERFCOUNTER0_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER0_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter0_select)                       \
  ((sq_perfcounter0_select & SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter0_select)                     \
  ((sq_perfcounter0_select & SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER0_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER0_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER0_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER0_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER0_SELECT_SET_PERF_MODE__VI(sq_perfcounter0_select_reg, perf_mode)            \
  sq_perfcounter0_select_reg =                                                                     \
      (sq_perfcounter0_select_reg & ~SQ_PERFCOUNTER0_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER0_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_SET_PERF_SEL__VI(sq_perfcounter0_select_reg, perf_sel)              \
  sq_perfcounter0_select_reg =                                                                     \
      (sq_perfcounter0_select_reg & ~SQ_PERFCOUNTER0_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER0_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_SET_SIMD_MASK__VI(sq_perfcounter0_select_reg, simd_mask)            \
  sq_perfcounter0_select_reg =                                                                     \
      (sq_perfcounter0_select_reg & ~SQ_PERFCOUNTER0_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER0_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_SET_SPM_MODE__VI(sq_perfcounter0_select_reg, spm_mode)              \
  sq_perfcounter0_select_reg =                                                                     \
      (sq_perfcounter0_select_reg & ~SQ_PERFCOUNTER0_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER0_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter0_select_reg, sqc_bank_mask)    \
  sq_perfcounter0_select_reg =                                                                     \
      (sq_perfcounter0_select_reg & ~SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER0_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER0_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter0_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter0_select_reg =                                                                     \
      (sq_perfcounter0_select_reg & ~SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER0_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER10_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER10_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER10_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter10_hi)                            \
  ((sq_perfcounter10_hi & SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_MASK) >>                              \
   SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER10_HI_MASK__VI (SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER10_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter10_hi_reg, perfcounter_hi)        \
  sq_perfcounter10_hi_reg = (sq_perfcounter10_hi_reg & ~SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_MASK) | \
      (perfcounter_hi << SQ_PERFCOUNTER10_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER10_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER10_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER10_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter10_lo)                            \
  ((sq_perfcounter10_lo & SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_MASK) >>                              \
   SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER10_LO_MASK__VI (SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER10_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter10_lo_reg, perfcounter_lo)        \
  sq_perfcounter10_lo_reg = (sq_perfcounter10_lo_reg & ~SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_MASK) | \
      (perfcounter_lo << SQ_PERFCOUNTER10_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_GET_PERF_MODE__VI(sq_perfcounter10_select)                         \
  ((sq_perfcounter10_select & SQ_PERFCOUNTER10_SELECT_PERF_MODE_MASK) >>                           \
   SQ_PERFCOUNTER10_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_GET_PERF_SEL__VI(sq_perfcounter10_select)                          \
  ((sq_perfcounter10_select & SQ_PERFCOUNTER10_SELECT_PERF_SEL_MASK) >>                            \
   SQ_PERFCOUNTER10_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_GET_SIMD_MASK__VI(sq_perfcounter10_select)                         \
  ((sq_perfcounter10_select & SQ_PERFCOUNTER10_SELECT_SIMD_MASK_MASK) >>                           \
   SQ_PERFCOUNTER10_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_GET_SPM_MODE__VI(sq_perfcounter10_select)                          \
  ((sq_perfcounter10_select & SQ_PERFCOUNTER10_SELECT_SPM_MODE_MASK) >>                            \
   SQ_PERFCOUNTER10_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter10_select)                     \
  ((sq_perfcounter10_select & SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_MASK) >>                       \
   SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter10_select)                   \
  ((sq_perfcounter10_select & SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_MASK) >>                     \
   SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_MASK__VI                                                           \
  (SQ_PERFCOUNTER10_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_MASK |            \
   SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER10_SELECT_SPM_MODE_MASK |          \
   SQ_PERFCOUNTER10_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER10_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER10_SELECT_SET_PERF_MODE__VI(sq_perfcounter10_select_reg, perf_mode)          \
  sq_perfcounter10_select_reg =                                                                    \
      (sq_perfcounter10_select_reg & ~SQ_PERFCOUNTER10_SELECT_PERF_MODE_MASK) |                    \
      (perf_mode << SQ_PERFCOUNTER10_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_SET_PERF_SEL__VI(sq_perfcounter10_select_reg, perf_sel)            \
  sq_perfcounter10_select_reg =                                                                    \
      (sq_perfcounter10_select_reg & ~SQ_PERFCOUNTER10_SELECT_PERF_SEL_MASK) |                     \
      (perf_sel << SQ_PERFCOUNTER10_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_SET_SIMD_MASK__VI(sq_perfcounter10_select_reg, simd_mask)          \
  sq_perfcounter10_select_reg =                                                                    \
      (sq_perfcounter10_select_reg & ~SQ_PERFCOUNTER10_SELECT_SIMD_MASK_MASK) |                    \
      (simd_mask << SQ_PERFCOUNTER10_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_SET_SPM_MODE__VI(sq_perfcounter10_select_reg, spm_mode)            \
  sq_perfcounter10_select_reg =                                                                    \
      (sq_perfcounter10_select_reg & ~SQ_PERFCOUNTER10_SELECT_SPM_MODE_MASK) |                     \
      (spm_mode << SQ_PERFCOUNTER10_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter10_select_reg, sqc_bank_mask)  \
  sq_perfcounter10_select_reg =                                                                    \
      (sq_perfcounter10_select_reg & ~SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_MASK) |                \
      (sqc_bank_mask << SQ_PERFCOUNTER10_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER10_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter10_select_reg,               \
                                                        sqc_client_mask)                           \
  sq_perfcounter10_select_reg =                                                                    \
      (sq_perfcounter10_select_reg & ~SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_MASK) |              \
      (sqc_client_mask << SQ_PERFCOUNTER10_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER11_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER11_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER11_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter11_hi)                            \
  ((sq_perfcounter11_hi & SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_MASK) >>                              \
   SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER11_HI_MASK__VI (SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER11_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter11_hi_reg, perfcounter_hi)        \
  sq_perfcounter11_hi_reg = (sq_perfcounter11_hi_reg & ~SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_MASK) | \
      (perfcounter_hi << SQ_PERFCOUNTER11_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER11_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER11_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER11_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter11_lo)                            \
  ((sq_perfcounter11_lo & SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_MASK) >>                              \
   SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER11_LO_MASK__VI (SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER11_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter11_lo_reg, perfcounter_lo)        \
  sq_perfcounter11_lo_reg = (sq_perfcounter11_lo_reg & ~SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_MASK) | \
      (perfcounter_lo << SQ_PERFCOUNTER11_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_GET_PERF_MODE__VI(sq_perfcounter11_select)                         \
  ((sq_perfcounter11_select & SQ_PERFCOUNTER11_SELECT_PERF_MODE_MASK) >>                           \
   SQ_PERFCOUNTER11_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_GET_PERF_SEL__VI(sq_perfcounter11_select)                          \
  ((sq_perfcounter11_select & SQ_PERFCOUNTER11_SELECT_PERF_SEL_MASK) >>                            \
   SQ_PERFCOUNTER11_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_GET_SIMD_MASK__VI(sq_perfcounter11_select)                         \
  ((sq_perfcounter11_select & SQ_PERFCOUNTER11_SELECT_SIMD_MASK_MASK) >>                           \
   SQ_PERFCOUNTER11_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_GET_SPM_MODE__VI(sq_perfcounter11_select)                          \
  ((sq_perfcounter11_select & SQ_PERFCOUNTER11_SELECT_SPM_MODE_MASK) >>                            \
   SQ_PERFCOUNTER11_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter11_select)                     \
  ((sq_perfcounter11_select & SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_MASK) >>                       \
   SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter11_select)                   \
  ((sq_perfcounter11_select & SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_MASK) >>                     \
   SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_MASK__VI                                                           \
  (SQ_PERFCOUNTER11_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_MASK |            \
   SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER11_SELECT_SPM_MODE_MASK |          \
   SQ_PERFCOUNTER11_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER11_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER11_SELECT_SET_PERF_MODE__VI(sq_perfcounter11_select_reg, perf_mode)          \
  sq_perfcounter11_select_reg =                                                                    \
      (sq_perfcounter11_select_reg & ~SQ_PERFCOUNTER11_SELECT_PERF_MODE_MASK) |                    \
      (perf_mode << SQ_PERFCOUNTER11_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_SET_PERF_SEL__VI(sq_perfcounter11_select_reg, perf_sel)            \
  sq_perfcounter11_select_reg =                                                                    \
      (sq_perfcounter11_select_reg & ~SQ_PERFCOUNTER11_SELECT_PERF_SEL_MASK) |                     \
      (perf_sel << SQ_PERFCOUNTER11_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_SET_SIMD_MASK__VI(sq_perfcounter11_select_reg, simd_mask)          \
  sq_perfcounter11_select_reg =                                                                    \
      (sq_perfcounter11_select_reg & ~SQ_PERFCOUNTER11_SELECT_SIMD_MASK_MASK) |                    \
      (simd_mask << SQ_PERFCOUNTER11_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_SET_SPM_MODE__VI(sq_perfcounter11_select_reg, spm_mode)            \
  sq_perfcounter11_select_reg =                                                                    \
      (sq_perfcounter11_select_reg & ~SQ_PERFCOUNTER11_SELECT_SPM_MODE_MASK) |                     \
      (spm_mode << SQ_PERFCOUNTER11_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter11_select_reg, sqc_bank_mask)  \
  sq_perfcounter11_select_reg =                                                                    \
      (sq_perfcounter11_select_reg & ~SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_MASK) |                \
      (sqc_bank_mask << SQ_PERFCOUNTER11_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER11_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter11_select_reg,               \
                                                        sqc_client_mask)                           \
  sq_perfcounter11_select_reg =                                                                    \
      (sq_perfcounter11_select_reg & ~SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_MASK) |              \
      (sqc_client_mask << SQ_PERFCOUNTER11_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER12_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER12_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER12_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter12_hi)                            \
  ((sq_perfcounter12_hi & SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_MASK) >>                              \
   SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER12_HI_MASK__VI (SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER12_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter12_hi_reg, perfcounter_hi)        \
  sq_perfcounter12_hi_reg = (sq_perfcounter12_hi_reg & ~SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_MASK) | \
      (perfcounter_hi << SQ_PERFCOUNTER12_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER12_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER12_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER12_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter12_lo)                            \
  ((sq_perfcounter12_lo & SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_MASK) >>                              \
   SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER12_LO_MASK__VI (SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER12_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter12_lo_reg, perfcounter_lo)        \
  sq_perfcounter12_lo_reg = (sq_perfcounter12_lo_reg & ~SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_MASK) | \
      (perfcounter_lo << SQ_PERFCOUNTER12_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_GET_PERF_MODE__VI(sq_perfcounter12_select)                         \
  ((sq_perfcounter12_select & SQ_PERFCOUNTER12_SELECT_PERF_MODE_MASK) >>                           \
   SQ_PERFCOUNTER12_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_GET_PERF_SEL__VI(sq_perfcounter12_select)                          \
  ((sq_perfcounter12_select & SQ_PERFCOUNTER12_SELECT_PERF_SEL_MASK) >>                            \
   SQ_PERFCOUNTER12_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_GET_SIMD_MASK__VI(sq_perfcounter12_select)                         \
  ((sq_perfcounter12_select & SQ_PERFCOUNTER12_SELECT_SIMD_MASK_MASK) >>                           \
   SQ_PERFCOUNTER12_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_GET_SPM_MODE__VI(sq_perfcounter12_select)                          \
  ((sq_perfcounter12_select & SQ_PERFCOUNTER12_SELECT_SPM_MODE_MASK) >>                            \
   SQ_PERFCOUNTER12_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter12_select)                     \
  ((sq_perfcounter12_select & SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_MASK) >>                       \
   SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter12_select)                   \
  ((sq_perfcounter12_select & SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_MASK) >>                     \
   SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_MASK__VI                                                           \
  (SQ_PERFCOUNTER12_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_MASK |            \
   SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER12_SELECT_SPM_MODE_MASK |          \
   SQ_PERFCOUNTER12_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER12_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER12_SELECT_SET_PERF_MODE__VI(sq_perfcounter12_select_reg, perf_mode)          \
  sq_perfcounter12_select_reg =                                                                    \
      (sq_perfcounter12_select_reg & ~SQ_PERFCOUNTER12_SELECT_PERF_MODE_MASK) |                    \
      (perf_mode << SQ_PERFCOUNTER12_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_SET_PERF_SEL__VI(sq_perfcounter12_select_reg, perf_sel)            \
  sq_perfcounter12_select_reg =                                                                    \
      (sq_perfcounter12_select_reg & ~SQ_PERFCOUNTER12_SELECT_PERF_SEL_MASK) |                     \
      (perf_sel << SQ_PERFCOUNTER12_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_SET_SIMD_MASK__VI(sq_perfcounter12_select_reg, simd_mask)          \
  sq_perfcounter12_select_reg =                                                                    \
      (sq_perfcounter12_select_reg & ~SQ_PERFCOUNTER12_SELECT_SIMD_MASK_MASK) |                    \
      (simd_mask << SQ_PERFCOUNTER12_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_SET_SPM_MODE__VI(sq_perfcounter12_select_reg, spm_mode)            \
  sq_perfcounter12_select_reg =                                                                    \
      (sq_perfcounter12_select_reg & ~SQ_PERFCOUNTER12_SELECT_SPM_MODE_MASK) |                     \
      (spm_mode << SQ_PERFCOUNTER12_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter12_select_reg, sqc_bank_mask)  \
  sq_perfcounter12_select_reg =                                                                    \
      (sq_perfcounter12_select_reg & ~SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_MASK) |                \
      (sqc_bank_mask << SQ_PERFCOUNTER12_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER12_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter12_select_reg,               \
                                                        sqc_client_mask)                           \
  sq_perfcounter12_select_reg =                                                                    \
      (sq_perfcounter12_select_reg & ~SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_MASK) |              \
      (sqc_client_mask << SQ_PERFCOUNTER12_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER13_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER13_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER13_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter13_hi)                            \
  ((sq_perfcounter13_hi & SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_MASK) >>                              \
   SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER13_HI_MASK__VI (SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER13_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter13_hi_reg, perfcounter_hi)        \
  sq_perfcounter13_hi_reg = (sq_perfcounter13_hi_reg & ~SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_MASK) | \
      (perfcounter_hi << SQ_PERFCOUNTER13_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER13_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER13_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER13_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter13_lo)                            \
  ((sq_perfcounter13_lo & SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_MASK) >>                              \
   SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER13_LO_MASK__VI (SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER13_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter13_lo_reg, perfcounter_lo)        \
  sq_perfcounter13_lo_reg = (sq_perfcounter13_lo_reg & ~SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_MASK) | \
      (perfcounter_lo << SQ_PERFCOUNTER13_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_GET_PERF_MODE__VI(sq_perfcounter13_select)                         \
  ((sq_perfcounter13_select & SQ_PERFCOUNTER13_SELECT_PERF_MODE_MASK) >>                           \
   SQ_PERFCOUNTER13_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_GET_PERF_SEL__VI(sq_perfcounter13_select)                          \
  ((sq_perfcounter13_select & SQ_PERFCOUNTER13_SELECT_PERF_SEL_MASK) >>                            \
   SQ_PERFCOUNTER13_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_GET_SIMD_MASK__VI(sq_perfcounter13_select)                         \
  ((sq_perfcounter13_select & SQ_PERFCOUNTER13_SELECT_SIMD_MASK_MASK) >>                           \
   SQ_PERFCOUNTER13_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_GET_SPM_MODE__VI(sq_perfcounter13_select)                          \
  ((sq_perfcounter13_select & SQ_PERFCOUNTER13_SELECT_SPM_MODE_MASK) >>                            \
   SQ_PERFCOUNTER13_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter13_select)                     \
  ((sq_perfcounter13_select & SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_MASK) >>                       \
   SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter13_select)                   \
  ((sq_perfcounter13_select & SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_MASK) >>                     \
   SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_MASK__VI                                                           \
  (SQ_PERFCOUNTER13_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_MASK |            \
   SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER13_SELECT_SPM_MODE_MASK |          \
   SQ_PERFCOUNTER13_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER13_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER13_SELECT_SET_PERF_MODE__VI(sq_perfcounter13_select_reg, perf_mode)          \
  sq_perfcounter13_select_reg =                                                                    \
      (sq_perfcounter13_select_reg & ~SQ_PERFCOUNTER13_SELECT_PERF_MODE_MASK) |                    \
      (perf_mode << SQ_PERFCOUNTER13_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_SET_PERF_SEL__VI(sq_perfcounter13_select_reg, perf_sel)            \
  sq_perfcounter13_select_reg =                                                                    \
      (sq_perfcounter13_select_reg & ~SQ_PERFCOUNTER13_SELECT_PERF_SEL_MASK) |                     \
      (perf_sel << SQ_PERFCOUNTER13_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_SET_SIMD_MASK__VI(sq_perfcounter13_select_reg, simd_mask)          \
  sq_perfcounter13_select_reg =                                                                    \
      (sq_perfcounter13_select_reg & ~SQ_PERFCOUNTER13_SELECT_SIMD_MASK_MASK) |                    \
      (simd_mask << SQ_PERFCOUNTER13_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_SET_SPM_MODE__VI(sq_perfcounter13_select_reg, spm_mode)            \
  sq_perfcounter13_select_reg =                                                                    \
      (sq_perfcounter13_select_reg & ~SQ_PERFCOUNTER13_SELECT_SPM_MODE_MASK) |                     \
      (spm_mode << SQ_PERFCOUNTER13_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter13_select_reg, sqc_bank_mask)  \
  sq_perfcounter13_select_reg =                                                                    \
      (sq_perfcounter13_select_reg & ~SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_MASK) |                \
      (sqc_bank_mask << SQ_PERFCOUNTER13_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER13_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter13_select_reg,               \
                                                        sqc_client_mask)                           \
  sq_perfcounter13_select_reg =                                                                    \
      (sq_perfcounter13_select_reg & ~SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_MASK) |              \
      (sqc_client_mask << SQ_PERFCOUNTER13_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER14_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER14_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER14_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter14_hi)                            \
  ((sq_perfcounter14_hi & SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_MASK) >>                              \
   SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER14_HI_MASK__VI (SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER14_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter14_hi_reg, perfcounter_hi)        \
  sq_perfcounter14_hi_reg = (sq_perfcounter14_hi_reg & ~SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_MASK) | \
      (perfcounter_hi << SQ_PERFCOUNTER14_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER14_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER14_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER14_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter14_lo)                            \
  ((sq_perfcounter14_lo & SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_MASK) >>                              \
   SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER14_LO_MASK__VI (SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER14_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter14_lo_reg, perfcounter_lo)        \
  sq_perfcounter14_lo_reg = (sq_perfcounter14_lo_reg & ~SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_MASK) | \
      (perfcounter_lo << SQ_PERFCOUNTER14_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_GET_PERF_MODE__VI(sq_perfcounter14_select)                         \
  ((sq_perfcounter14_select & SQ_PERFCOUNTER14_SELECT_PERF_MODE_MASK) >>                           \
   SQ_PERFCOUNTER14_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_GET_PERF_SEL__VI(sq_perfcounter14_select)                          \
  ((sq_perfcounter14_select & SQ_PERFCOUNTER14_SELECT_PERF_SEL_MASK) >>                            \
   SQ_PERFCOUNTER14_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_GET_SIMD_MASK__VI(sq_perfcounter14_select)                         \
  ((sq_perfcounter14_select & SQ_PERFCOUNTER14_SELECT_SIMD_MASK_MASK) >>                           \
   SQ_PERFCOUNTER14_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_GET_SPM_MODE__VI(sq_perfcounter14_select)                          \
  ((sq_perfcounter14_select & SQ_PERFCOUNTER14_SELECT_SPM_MODE_MASK) >>                            \
   SQ_PERFCOUNTER14_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter14_select)                     \
  ((sq_perfcounter14_select & SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_MASK) >>                       \
   SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter14_select)                   \
  ((sq_perfcounter14_select & SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_MASK) >>                     \
   SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_MASK__VI                                                           \
  (SQ_PERFCOUNTER14_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_MASK |            \
   SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER14_SELECT_SPM_MODE_MASK |          \
   SQ_PERFCOUNTER14_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER14_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER14_SELECT_SET_PERF_MODE__VI(sq_perfcounter14_select_reg, perf_mode)          \
  sq_perfcounter14_select_reg =                                                                    \
      (sq_perfcounter14_select_reg & ~SQ_PERFCOUNTER14_SELECT_PERF_MODE_MASK) |                    \
      (perf_mode << SQ_PERFCOUNTER14_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_SET_PERF_SEL__VI(sq_perfcounter14_select_reg, perf_sel)            \
  sq_perfcounter14_select_reg =                                                                    \
      (sq_perfcounter14_select_reg & ~SQ_PERFCOUNTER14_SELECT_PERF_SEL_MASK) |                     \
      (perf_sel << SQ_PERFCOUNTER14_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_SET_SIMD_MASK__VI(sq_perfcounter14_select_reg, simd_mask)          \
  sq_perfcounter14_select_reg =                                                                    \
      (sq_perfcounter14_select_reg & ~SQ_PERFCOUNTER14_SELECT_SIMD_MASK_MASK) |                    \
      (simd_mask << SQ_PERFCOUNTER14_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_SET_SPM_MODE__VI(sq_perfcounter14_select_reg, spm_mode)            \
  sq_perfcounter14_select_reg =                                                                    \
      (sq_perfcounter14_select_reg & ~SQ_PERFCOUNTER14_SELECT_SPM_MODE_MASK) |                     \
      (spm_mode << SQ_PERFCOUNTER14_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter14_select_reg, sqc_bank_mask)  \
  sq_perfcounter14_select_reg =                                                                    \
      (sq_perfcounter14_select_reg & ~SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_MASK) |                \
      (sqc_bank_mask << SQ_PERFCOUNTER14_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER14_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter14_select_reg,               \
                                                        sqc_client_mask)                           \
  sq_perfcounter14_select_reg =                                                                    \
      (sq_perfcounter14_select_reg & ~SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_MASK) |              \
      (sqc_client_mask << SQ_PERFCOUNTER14_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER15_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER15_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER15_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter15_hi)                            \
  ((sq_perfcounter15_hi & SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_MASK) >>                              \
   SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER15_HI_MASK__VI (SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER15_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter15_hi_reg, perfcounter_hi)        \
  sq_perfcounter15_hi_reg = (sq_perfcounter15_hi_reg & ~SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_MASK) | \
      (perfcounter_hi << SQ_PERFCOUNTER15_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER15_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER15_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER15_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter15_lo)                            \
  ((sq_perfcounter15_lo & SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_MASK) >>                              \
   SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER15_LO_MASK__VI (SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER15_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter15_lo_reg, perfcounter_lo)        \
  sq_perfcounter15_lo_reg = (sq_perfcounter15_lo_reg & ~SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_MASK) | \
      (perfcounter_lo << SQ_PERFCOUNTER15_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_GET_PERF_MODE__VI(sq_perfcounter15_select)                         \
  ((sq_perfcounter15_select & SQ_PERFCOUNTER15_SELECT_PERF_MODE_MASK) >>                           \
   SQ_PERFCOUNTER15_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_GET_PERF_SEL__VI(sq_perfcounter15_select)                          \
  ((sq_perfcounter15_select & SQ_PERFCOUNTER15_SELECT_PERF_SEL_MASK) >>                            \
   SQ_PERFCOUNTER15_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_GET_SIMD_MASK__VI(sq_perfcounter15_select)                         \
  ((sq_perfcounter15_select & SQ_PERFCOUNTER15_SELECT_SIMD_MASK_MASK) >>                           \
   SQ_PERFCOUNTER15_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_GET_SPM_MODE__VI(sq_perfcounter15_select)                          \
  ((sq_perfcounter15_select & SQ_PERFCOUNTER15_SELECT_SPM_MODE_MASK) >>                            \
   SQ_PERFCOUNTER15_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter15_select)                     \
  ((sq_perfcounter15_select & SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_MASK) >>                       \
   SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter15_select)                   \
  ((sq_perfcounter15_select & SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_MASK) >>                     \
   SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_MASK__VI                                                           \
  (SQ_PERFCOUNTER15_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_MASK |            \
   SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER15_SELECT_SPM_MODE_MASK |          \
   SQ_PERFCOUNTER15_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER15_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER15_SELECT_SET_PERF_MODE__VI(sq_perfcounter15_select_reg, perf_mode)          \
  sq_perfcounter15_select_reg =                                                                    \
      (sq_perfcounter15_select_reg & ~SQ_PERFCOUNTER15_SELECT_PERF_MODE_MASK) |                    \
      (perf_mode << SQ_PERFCOUNTER15_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_SET_PERF_SEL__VI(sq_perfcounter15_select_reg, perf_sel)            \
  sq_perfcounter15_select_reg =                                                                    \
      (sq_perfcounter15_select_reg & ~SQ_PERFCOUNTER15_SELECT_PERF_SEL_MASK) |                     \
      (perf_sel << SQ_PERFCOUNTER15_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_SET_SIMD_MASK__VI(sq_perfcounter15_select_reg, simd_mask)          \
  sq_perfcounter15_select_reg =                                                                    \
      (sq_perfcounter15_select_reg & ~SQ_PERFCOUNTER15_SELECT_SIMD_MASK_MASK) |                    \
      (simd_mask << SQ_PERFCOUNTER15_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_SET_SPM_MODE__VI(sq_perfcounter15_select_reg, spm_mode)            \
  sq_perfcounter15_select_reg =                                                                    \
      (sq_perfcounter15_select_reg & ~SQ_PERFCOUNTER15_SELECT_SPM_MODE_MASK) |                     \
      (spm_mode << SQ_PERFCOUNTER15_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter15_select_reg, sqc_bank_mask)  \
  sq_perfcounter15_select_reg =                                                                    \
      (sq_perfcounter15_select_reg & ~SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_MASK) |                \
      (sqc_bank_mask << SQ_PERFCOUNTER15_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER15_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter15_select_reg,               \
                                                        sqc_client_mask)                           \
  sq_perfcounter15_select_reg =                                                                    \
      (sq_perfcounter15_select_reg & ~SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_MASK) |              \
      (sqc_client_mask << SQ_PERFCOUNTER15_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER1_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER1_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER1_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter1_hi)                              \
  ((sq_perfcounter1_hi & SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER1_HI_MASK__VI (SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER1_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter1_hi_reg, perfcounter_hi)          \
  sq_perfcounter1_hi_reg = (sq_perfcounter1_hi_reg & ~SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER1_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER1_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER1_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER1_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter1_lo)                              \
  ((sq_perfcounter1_lo & SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER1_LO_MASK__VI (SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER1_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter1_lo_reg, perfcounter_lo)          \
  sq_perfcounter1_lo_reg = (sq_perfcounter1_lo_reg & ~SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER1_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_GET_PERF_MODE__VI(sq_perfcounter1_select)                           \
  ((sq_perfcounter1_select & SQ_PERFCOUNTER1_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER1_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_GET_PERF_SEL__VI(sq_perfcounter1_select)                            \
  ((sq_perfcounter1_select & SQ_PERFCOUNTER1_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER1_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_GET_SIMD_MASK__VI(sq_perfcounter1_select)                           \
  ((sq_perfcounter1_select & SQ_PERFCOUNTER1_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER1_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_GET_SPM_MODE__VI(sq_perfcounter1_select)                            \
  ((sq_perfcounter1_select & SQ_PERFCOUNTER1_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER1_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter1_select)                       \
  ((sq_perfcounter1_select & SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter1_select)                     \
  ((sq_perfcounter1_select & SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER1_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER1_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER1_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER1_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER1_SELECT_SET_PERF_MODE__VI(sq_perfcounter1_select_reg, perf_mode)            \
  sq_perfcounter1_select_reg =                                                                     \
      (sq_perfcounter1_select_reg & ~SQ_PERFCOUNTER1_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER1_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_SET_PERF_SEL__VI(sq_perfcounter1_select_reg, perf_sel)              \
  sq_perfcounter1_select_reg =                                                                     \
      (sq_perfcounter1_select_reg & ~SQ_PERFCOUNTER1_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER1_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_SET_SIMD_MASK__VI(sq_perfcounter1_select_reg, simd_mask)            \
  sq_perfcounter1_select_reg =                                                                     \
      (sq_perfcounter1_select_reg & ~SQ_PERFCOUNTER1_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER1_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_SET_SPM_MODE__VI(sq_perfcounter1_select_reg, spm_mode)              \
  sq_perfcounter1_select_reg =                                                                     \
      (sq_perfcounter1_select_reg & ~SQ_PERFCOUNTER1_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER1_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter1_select_reg, sqc_bank_mask)    \
  sq_perfcounter1_select_reg =                                                                     \
      (sq_perfcounter1_select_reg & ~SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER1_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER1_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter1_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter1_select_reg =                                                                     \
      (sq_perfcounter1_select_reg & ~SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER1_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER2_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER2_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER2_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter2_hi)                              \
  ((sq_perfcounter2_hi & SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER2_HI_MASK__VI (SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER2_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter2_hi_reg, perfcounter_hi)          \
  sq_perfcounter2_hi_reg = (sq_perfcounter2_hi_reg & ~SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER2_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER2_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER2_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER2_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter2_lo)                              \
  ((sq_perfcounter2_lo & SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER2_LO_MASK__VI (SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER2_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter2_lo_reg, perfcounter_lo)          \
  sq_perfcounter2_lo_reg = (sq_perfcounter2_lo_reg & ~SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER2_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_GET_PERF_MODE__VI(sq_perfcounter2_select)                           \
  ((sq_perfcounter2_select & SQ_PERFCOUNTER2_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER2_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_GET_PERF_SEL__VI(sq_perfcounter2_select)                            \
  ((sq_perfcounter2_select & SQ_PERFCOUNTER2_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER2_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_GET_SIMD_MASK__VI(sq_perfcounter2_select)                           \
  ((sq_perfcounter2_select & SQ_PERFCOUNTER2_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER2_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_GET_SPM_MODE__VI(sq_perfcounter2_select)                            \
  ((sq_perfcounter2_select & SQ_PERFCOUNTER2_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER2_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter2_select)                       \
  ((sq_perfcounter2_select & SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter2_select)                     \
  ((sq_perfcounter2_select & SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER2_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER2_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER2_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER2_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER2_SELECT_SET_PERF_MODE__VI(sq_perfcounter2_select_reg, perf_mode)            \
  sq_perfcounter2_select_reg =                                                                     \
      (sq_perfcounter2_select_reg & ~SQ_PERFCOUNTER2_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER2_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_SET_PERF_SEL__VI(sq_perfcounter2_select_reg, perf_sel)              \
  sq_perfcounter2_select_reg =                                                                     \
      (sq_perfcounter2_select_reg & ~SQ_PERFCOUNTER2_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER2_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_SET_SIMD_MASK__VI(sq_perfcounter2_select_reg, simd_mask)            \
  sq_perfcounter2_select_reg =                                                                     \
      (sq_perfcounter2_select_reg & ~SQ_PERFCOUNTER2_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER2_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_SET_SPM_MODE__VI(sq_perfcounter2_select_reg, spm_mode)              \
  sq_perfcounter2_select_reg =                                                                     \
      (sq_perfcounter2_select_reg & ~SQ_PERFCOUNTER2_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER2_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter2_select_reg, sqc_bank_mask)    \
  sq_perfcounter2_select_reg =                                                                     \
      (sq_perfcounter2_select_reg & ~SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER2_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER2_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter2_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter2_select_reg =                                                                     \
      (sq_perfcounter2_select_reg & ~SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER2_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER3_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER3_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER3_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter3_hi)                              \
  ((sq_perfcounter3_hi & SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER3_HI_MASK__VI (SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER3_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter3_hi_reg, perfcounter_hi)          \
  sq_perfcounter3_hi_reg = (sq_perfcounter3_hi_reg & ~SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER3_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER3_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER3_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER3_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter3_lo)                              \
  ((sq_perfcounter3_lo & SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER3_LO_MASK__VI (SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER3_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter3_lo_reg, perfcounter_lo)          \
  sq_perfcounter3_lo_reg = (sq_perfcounter3_lo_reg & ~SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER3_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_GET_PERF_MODE__VI(sq_perfcounter3_select)                           \
  ((sq_perfcounter3_select & SQ_PERFCOUNTER3_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER3_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_GET_PERF_SEL__VI(sq_perfcounter3_select)                            \
  ((sq_perfcounter3_select & SQ_PERFCOUNTER3_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER3_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_GET_SIMD_MASK__VI(sq_perfcounter3_select)                           \
  ((sq_perfcounter3_select & SQ_PERFCOUNTER3_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER3_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_GET_SPM_MODE__VI(sq_perfcounter3_select)                            \
  ((sq_perfcounter3_select & SQ_PERFCOUNTER3_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER3_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter3_select)                       \
  ((sq_perfcounter3_select & SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter3_select)                     \
  ((sq_perfcounter3_select & SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER3_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER3_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER3_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER3_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER3_SELECT_SET_PERF_MODE__VI(sq_perfcounter3_select_reg, perf_mode)            \
  sq_perfcounter3_select_reg =                                                                     \
      (sq_perfcounter3_select_reg & ~SQ_PERFCOUNTER3_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER3_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_SET_PERF_SEL__VI(sq_perfcounter3_select_reg, perf_sel)              \
  sq_perfcounter3_select_reg =                                                                     \
      (sq_perfcounter3_select_reg & ~SQ_PERFCOUNTER3_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER3_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_SET_SIMD_MASK__VI(sq_perfcounter3_select_reg, simd_mask)            \
  sq_perfcounter3_select_reg =                                                                     \
      (sq_perfcounter3_select_reg & ~SQ_PERFCOUNTER3_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER3_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_SET_SPM_MODE__VI(sq_perfcounter3_select_reg, spm_mode)              \
  sq_perfcounter3_select_reg =                                                                     \
      (sq_perfcounter3_select_reg & ~SQ_PERFCOUNTER3_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER3_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter3_select_reg, sqc_bank_mask)    \
  sq_perfcounter3_select_reg =                                                                     \
      (sq_perfcounter3_select_reg & ~SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER3_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER3_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter3_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter3_select_reg =                                                                     \
      (sq_perfcounter3_select_reg & ~SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER3_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER4_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER4_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER4_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter4_hi)                              \
  ((sq_perfcounter4_hi & SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER4_HI_MASK__VI (SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER4_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter4_hi_reg, perfcounter_hi)          \
  sq_perfcounter4_hi_reg = (sq_perfcounter4_hi_reg & ~SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER4_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER4_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER4_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER4_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter4_lo)                              \
  ((sq_perfcounter4_lo & SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER4_LO_MASK__VI (SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER4_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter4_lo_reg, perfcounter_lo)          \
  sq_perfcounter4_lo_reg = (sq_perfcounter4_lo_reg & ~SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER4_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_GET_PERF_MODE__VI(sq_perfcounter4_select)                           \
  ((sq_perfcounter4_select & SQ_PERFCOUNTER4_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER4_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_GET_PERF_SEL__VI(sq_perfcounter4_select)                            \
  ((sq_perfcounter4_select & SQ_PERFCOUNTER4_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER4_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_GET_SIMD_MASK__VI(sq_perfcounter4_select)                           \
  ((sq_perfcounter4_select & SQ_PERFCOUNTER4_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER4_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_GET_SPM_MODE__VI(sq_perfcounter4_select)                            \
  ((sq_perfcounter4_select & SQ_PERFCOUNTER4_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER4_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter4_select)                       \
  ((sq_perfcounter4_select & SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter4_select)                     \
  ((sq_perfcounter4_select & SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER4_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER4_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER4_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER4_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER4_SELECT_SET_PERF_MODE__VI(sq_perfcounter4_select_reg, perf_mode)            \
  sq_perfcounter4_select_reg =                                                                     \
      (sq_perfcounter4_select_reg & ~SQ_PERFCOUNTER4_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER4_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_SET_PERF_SEL__VI(sq_perfcounter4_select_reg, perf_sel)              \
  sq_perfcounter4_select_reg =                                                                     \
      (sq_perfcounter4_select_reg & ~SQ_PERFCOUNTER4_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER4_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_SET_SIMD_MASK__VI(sq_perfcounter4_select_reg, simd_mask)            \
  sq_perfcounter4_select_reg =                                                                     \
      (sq_perfcounter4_select_reg & ~SQ_PERFCOUNTER4_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER4_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_SET_SPM_MODE__VI(sq_perfcounter4_select_reg, spm_mode)              \
  sq_perfcounter4_select_reg =                                                                     \
      (sq_perfcounter4_select_reg & ~SQ_PERFCOUNTER4_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER4_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter4_select_reg, sqc_bank_mask)    \
  sq_perfcounter4_select_reg =                                                                     \
      (sq_perfcounter4_select_reg & ~SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER4_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER4_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter4_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter4_select_reg =                                                                     \
      (sq_perfcounter4_select_reg & ~SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER4_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER5_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER5_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER5_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter5_hi)                              \
  ((sq_perfcounter5_hi & SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER5_HI_MASK__VI (SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER5_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter5_hi_reg, perfcounter_hi)          \
  sq_perfcounter5_hi_reg = (sq_perfcounter5_hi_reg & ~SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER5_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER5_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER5_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER5_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter5_lo)                              \
  ((sq_perfcounter5_lo & SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER5_LO_MASK__VI (SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER5_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter5_lo_reg, perfcounter_lo)          \
  sq_perfcounter5_lo_reg = (sq_perfcounter5_lo_reg & ~SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER5_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_GET_PERF_MODE__VI(sq_perfcounter5_select)                           \
  ((sq_perfcounter5_select & SQ_PERFCOUNTER5_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER5_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_GET_PERF_SEL__VI(sq_perfcounter5_select)                            \
  ((sq_perfcounter5_select & SQ_PERFCOUNTER5_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER5_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_GET_SIMD_MASK__VI(sq_perfcounter5_select)                           \
  ((sq_perfcounter5_select & SQ_PERFCOUNTER5_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER5_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_GET_SPM_MODE__VI(sq_perfcounter5_select)                            \
  ((sq_perfcounter5_select & SQ_PERFCOUNTER5_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER5_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter5_select)                       \
  ((sq_perfcounter5_select & SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter5_select)                     \
  ((sq_perfcounter5_select & SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER5_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER5_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER5_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER5_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER5_SELECT_SET_PERF_MODE__VI(sq_perfcounter5_select_reg, perf_mode)            \
  sq_perfcounter5_select_reg =                                                                     \
      (sq_perfcounter5_select_reg & ~SQ_PERFCOUNTER5_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER5_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_SET_PERF_SEL__VI(sq_perfcounter5_select_reg, perf_sel)              \
  sq_perfcounter5_select_reg =                                                                     \
      (sq_perfcounter5_select_reg & ~SQ_PERFCOUNTER5_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER5_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_SET_SIMD_MASK__VI(sq_perfcounter5_select_reg, simd_mask)            \
  sq_perfcounter5_select_reg =                                                                     \
      (sq_perfcounter5_select_reg & ~SQ_PERFCOUNTER5_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER5_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_SET_SPM_MODE__VI(sq_perfcounter5_select_reg, spm_mode)              \
  sq_perfcounter5_select_reg =                                                                     \
      (sq_perfcounter5_select_reg & ~SQ_PERFCOUNTER5_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER5_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter5_select_reg, sqc_bank_mask)    \
  sq_perfcounter5_select_reg =                                                                     \
      (sq_perfcounter5_select_reg & ~SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER5_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER5_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter5_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter5_select_reg =                                                                     \
      (sq_perfcounter5_select_reg & ~SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER5_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER6_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER6_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER6_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter6_hi)                              \
  ((sq_perfcounter6_hi & SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER6_HI_MASK__VI (SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER6_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter6_hi_reg, perfcounter_hi)          \
  sq_perfcounter6_hi_reg = (sq_perfcounter6_hi_reg & ~SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER6_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER6_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER6_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER6_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter6_lo)                              \
  ((sq_perfcounter6_lo & SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER6_LO_MASK__VI (SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER6_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter6_lo_reg, perfcounter_lo)          \
  sq_perfcounter6_lo_reg = (sq_perfcounter6_lo_reg & ~SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER6_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_GET_PERF_MODE__VI(sq_perfcounter6_select)                           \
  ((sq_perfcounter6_select & SQ_PERFCOUNTER6_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER6_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_GET_PERF_SEL__VI(sq_perfcounter6_select)                            \
  ((sq_perfcounter6_select & SQ_PERFCOUNTER6_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER6_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_GET_SIMD_MASK__VI(sq_perfcounter6_select)                           \
  ((sq_perfcounter6_select & SQ_PERFCOUNTER6_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER6_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_GET_SPM_MODE__VI(sq_perfcounter6_select)                            \
  ((sq_perfcounter6_select & SQ_PERFCOUNTER6_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER6_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter6_select)                       \
  ((sq_perfcounter6_select & SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter6_select)                     \
  ((sq_perfcounter6_select & SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER6_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER6_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER6_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER6_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER6_SELECT_SET_PERF_MODE__VI(sq_perfcounter6_select_reg, perf_mode)            \
  sq_perfcounter6_select_reg =                                                                     \
      (sq_perfcounter6_select_reg & ~SQ_PERFCOUNTER6_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER6_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_SET_PERF_SEL__VI(sq_perfcounter6_select_reg, perf_sel)              \
  sq_perfcounter6_select_reg =                                                                     \
      (sq_perfcounter6_select_reg & ~SQ_PERFCOUNTER6_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER6_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_SET_SIMD_MASK__VI(sq_perfcounter6_select_reg, simd_mask)            \
  sq_perfcounter6_select_reg =                                                                     \
      (sq_perfcounter6_select_reg & ~SQ_PERFCOUNTER6_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER6_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_SET_SPM_MODE__VI(sq_perfcounter6_select_reg, spm_mode)              \
  sq_perfcounter6_select_reg =                                                                     \
      (sq_perfcounter6_select_reg & ~SQ_PERFCOUNTER6_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER6_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter6_select_reg, sqc_bank_mask)    \
  sq_perfcounter6_select_reg =                                                                     \
      (sq_perfcounter6_select_reg & ~SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER6_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER6_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter6_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter6_select_reg =                                                                     \
      (sq_perfcounter6_select_reg & ~SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER6_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER7_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER7_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER7_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter7_hi)                              \
  ((sq_perfcounter7_hi & SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER7_HI_MASK__VI (SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER7_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter7_hi_reg, perfcounter_hi)          \
  sq_perfcounter7_hi_reg = (sq_perfcounter7_hi_reg & ~SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER7_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER7_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER7_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER7_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter7_lo)                              \
  ((sq_perfcounter7_lo & SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER7_LO_MASK__VI (SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER7_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter7_lo_reg, perfcounter_lo)          \
  sq_perfcounter7_lo_reg = (sq_perfcounter7_lo_reg & ~SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER7_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_GET_PERF_MODE__VI(sq_perfcounter7_select)                           \
  ((sq_perfcounter7_select & SQ_PERFCOUNTER7_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER7_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_GET_PERF_SEL__VI(sq_perfcounter7_select)                            \
  ((sq_perfcounter7_select & SQ_PERFCOUNTER7_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER7_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_GET_SIMD_MASK__VI(sq_perfcounter7_select)                           \
  ((sq_perfcounter7_select & SQ_PERFCOUNTER7_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER7_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_GET_SPM_MODE__VI(sq_perfcounter7_select)                            \
  ((sq_perfcounter7_select & SQ_PERFCOUNTER7_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER7_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter7_select)                       \
  ((sq_perfcounter7_select & SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter7_select)                     \
  ((sq_perfcounter7_select & SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER7_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER7_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER7_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER7_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER7_SELECT_SET_PERF_MODE__VI(sq_perfcounter7_select_reg, perf_mode)            \
  sq_perfcounter7_select_reg =                                                                     \
      (sq_perfcounter7_select_reg & ~SQ_PERFCOUNTER7_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER7_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_SET_PERF_SEL__VI(sq_perfcounter7_select_reg, perf_sel)              \
  sq_perfcounter7_select_reg =                                                                     \
      (sq_perfcounter7_select_reg & ~SQ_PERFCOUNTER7_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER7_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_SET_SIMD_MASK__VI(sq_perfcounter7_select_reg, simd_mask)            \
  sq_perfcounter7_select_reg =                                                                     \
      (sq_perfcounter7_select_reg & ~SQ_PERFCOUNTER7_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER7_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_SET_SPM_MODE__VI(sq_perfcounter7_select_reg, spm_mode)              \
  sq_perfcounter7_select_reg =                                                                     \
      (sq_perfcounter7_select_reg & ~SQ_PERFCOUNTER7_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER7_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter7_select_reg, sqc_bank_mask)    \
  sq_perfcounter7_select_reg =                                                                     \
      (sq_perfcounter7_select_reg & ~SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER7_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER7_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter7_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter7_select_reg =                                                                     \
      (sq_perfcounter7_select_reg & ~SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER7_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER8_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER8_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER8_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter8_hi)                              \
  ((sq_perfcounter8_hi & SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER8_HI_MASK__VI (SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER8_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter8_hi_reg, perfcounter_hi)          \
  sq_perfcounter8_hi_reg = (sq_perfcounter8_hi_reg & ~SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER8_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER8_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER8_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER8_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter8_lo)                              \
  ((sq_perfcounter8_lo & SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER8_LO_MASK__VI (SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER8_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter8_lo_reg, perfcounter_lo)          \
  sq_perfcounter8_lo_reg = (sq_perfcounter8_lo_reg & ~SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER8_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_GET_PERF_MODE__VI(sq_perfcounter8_select)                           \
  ((sq_perfcounter8_select & SQ_PERFCOUNTER8_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER8_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_GET_PERF_SEL__VI(sq_perfcounter8_select)                            \
  ((sq_perfcounter8_select & SQ_PERFCOUNTER8_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER8_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_GET_SIMD_MASK__VI(sq_perfcounter8_select)                           \
  ((sq_perfcounter8_select & SQ_PERFCOUNTER8_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER8_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_GET_SPM_MODE__VI(sq_perfcounter8_select)                            \
  ((sq_perfcounter8_select & SQ_PERFCOUNTER8_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER8_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter8_select)                       \
  ((sq_perfcounter8_select & SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter8_select)                     \
  ((sq_perfcounter8_select & SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER8_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER8_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER8_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER8_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER8_SELECT_SET_PERF_MODE__VI(sq_perfcounter8_select_reg, perf_mode)            \
  sq_perfcounter8_select_reg =                                                                     \
      (sq_perfcounter8_select_reg & ~SQ_PERFCOUNTER8_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER8_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_SET_PERF_SEL__VI(sq_perfcounter8_select_reg, perf_sel)              \
  sq_perfcounter8_select_reg =                                                                     \
      (sq_perfcounter8_select_reg & ~SQ_PERFCOUNTER8_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER8_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_SET_SIMD_MASK__VI(sq_perfcounter8_select_reg, simd_mask)            \
  sq_perfcounter8_select_reg =                                                                     \
      (sq_perfcounter8_select_reg & ~SQ_PERFCOUNTER8_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER8_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_SET_SPM_MODE__VI(sq_perfcounter8_select_reg, spm_mode)              \
  sq_perfcounter8_select_reg =                                                                     \
      (sq_perfcounter8_select_reg & ~SQ_PERFCOUNTER8_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER8_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter8_select_reg, sqc_bank_mask)    \
  sq_perfcounter8_select_reg =                                                                     \
      (sq_perfcounter8_select_reg & ~SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER8_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER8_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter8_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter8_select_reg =                                                                     \
      (sq_perfcounter8_select_reg & ~SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER8_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER9_HI_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER9_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER9_HI_GET_PERFCOUNTER_HI__VI(sq_perfcounter9_hi)                              \
  ((sq_perfcounter9_hi & SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_MASK) >>                                \
   SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER9_HI_MASK__VI (SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_MASK)

#define SQ_PERFCOUNTER9_HI_SET_PERFCOUNTER_HI__VI(sq_perfcounter9_hi_reg, perfcounter_hi)          \
  sq_perfcounter9_hi_reg = (sq_perfcounter9_hi_reg & ~SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_MASK) |    \
      (perfcounter_hi << SQ_PERFCOUNTER9_HI_PERFCOUNTER_HI_SHIFT)

#define SQ_PERFCOUNTER9_LO_DEFAULT__SI__CI 0x00000000
#define SQ_PERFCOUNTER9_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_PERFCOUNTER9_LO_GET_PERFCOUNTER_LO__VI(sq_perfcounter9_lo)                              \
  ((sq_perfcounter9_lo & SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_MASK) >>                                \
   SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER9_LO_MASK__VI (SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_MASK)

#define SQ_PERFCOUNTER9_LO_SET_PERFCOUNTER_LO__VI(sq_perfcounter9_lo_reg, perfcounter_lo)          \
  sq_perfcounter9_lo_reg = (sq_perfcounter9_lo_reg & ~SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_MASK) |    \
      (perfcounter_lo << SQ_PERFCOUNTER9_LO_PERFCOUNTER_LO_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_GET_PERF_MODE__VI(sq_perfcounter9_select)                           \
  ((sq_perfcounter9_select & SQ_PERFCOUNTER9_SELECT_PERF_MODE_MASK) >>                             \
   SQ_PERFCOUNTER9_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_GET_PERF_SEL__VI(sq_perfcounter9_select)                            \
  ((sq_perfcounter9_select & SQ_PERFCOUNTER9_SELECT_PERF_SEL_MASK) >>                              \
   SQ_PERFCOUNTER9_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_GET_SIMD_MASK__VI(sq_perfcounter9_select)                           \
  ((sq_perfcounter9_select & SQ_PERFCOUNTER9_SELECT_SIMD_MASK_MASK) >>                             \
   SQ_PERFCOUNTER9_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_GET_SPM_MODE__VI(sq_perfcounter9_select)                            \
  ((sq_perfcounter9_select & SQ_PERFCOUNTER9_SELECT_SPM_MODE_MASK) >>                              \
   SQ_PERFCOUNTER9_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_GET_SQC_BANK_MASK__VI(sq_perfcounter9_select)                       \
  ((sq_perfcounter9_select & SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_MASK) >>                         \
   SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_GET_SQC_CLIENT_MASK__VI(sq_perfcounter9_select)                     \
  ((sq_perfcounter9_select & SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_MASK) >>                       \
   SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_MASK__VI                                                            \
  (SQ_PERFCOUNTER9_SELECT_PERF_SEL_MASK | SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_MASK |              \
   SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_MASK | SQ_PERFCOUNTER9_SELECT_SPM_MODE_MASK |            \
   SQ_PERFCOUNTER9_SELECT_SIMD_MASK_MASK | SQ_PERFCOUNTER9_SELECT_PERF_MODE_MASK)

#define SQ_PERFCOUNTER9_SELECT_SET_PERF_MODE__VI(sq_perfcounter9_select_reg, perf_mode)            \
  sq_perfcounter9_select_reg =                                                                     \
      (sq_perfcounter9_select_reg & ~SQ_PERFCOUNTER9_SELECT_PERF_MODE_MASK) |                      \
      (perf_mode << SQ_PERFCOUNTER9_SELECT_PERF_MODE_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_SET_PERF_SEL__VI(sq_perfcounter9_select_reg, perf_sel)              \
  sq_perfcounter9_select_reg =                                                                     \
      (sq_perfcounter9_select_reg & ~SQ_PERFCOUNTER9_SELECT_PERF_SEL_MASK) |                       \
      (perf_sel << SQ_PERFCOUNTER9_SELECT_PERF_SEL_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_SET_SIMD_MASK__VI(sq_perfcounter9_select_reg, simd_mask)            \
  sq_perfcounter9_select_reg =                                                                     \
      (sq_perfcounter9_select_reg & ~SQ_PERFCOUNTER9_SELECT_SIMD_MASK_MASK) |                      \
      (simd_mask << SQ_PERFCOUNTER9_SELECT_SIMD_MASK_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_SET_SPM_MODE__VI(sq_perfcounter9_select_reg, spm_mode)              \
  sq_perfcounter9_select_reg =                                                                     \
      (sq_perfcounter9_select_reg & ~SQ_PERFCOUNTER9_SELECT_SPM_MODE_MASK) |                       \
      (spm_mode << SQ_PERFCOUNTER9_SELECT_SPM_MODE_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_SET_SQC_BANK_MASK__VI(sq_perfcounter9_select_reg, sqc_bank_mask)    \
  sq_perfcounter9_select_reg =                                                                     \
      (sq_perfcounter9_select_reg & ~SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_MASK) |                  \
      (sqc_bank_mask << SQ_PERFCOUNTER9_SELECT_SQC_BANK_MASK_SHIFT)

#define SQ_PERFCOUNTER9_SELECT_SET_SQC_CLIENT_MASK__VI(sq_perfcounter9_select_reg,                 \
                                                       sqc_client_mask)                            \
  sq_perfcounter9_select_reg =                                                                     \
      (sq_perfcounter9_select_reg & ~SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_MASK) |                \
      (sqc_client_mask << SQ_PERFCOUNTER9_SELECT_SQC_CLIENT_MASK_SHIFT)

#define SQ_PERFCOUNTER_CTRL2_GET_FORCE_EN__VI(sq_perfcounter_ctrl2)                                \
  ((sq_perfcounter_ctrl2 & SQ_PERFCOUNTER_CTRL2_FORCE_EN_MASK) >>                                  \
   SQ_PERFCOUNTER_CTRL2_FORCE_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL2_MASK__VI (SQ_PERFCOUNTER_CTRL2_FORCE_EN_MASK)

#define SQ_PERFCOUNTER_CTRL2_SET_FORCE_EN__VI(sq_perfcounter_ctrl2_reg, force_en)                  \
  sq_perfcounter_ctrl2_reg = (sq_perfcounter_ctrl2_reg & ~SQ_PERFCOUNTER_CTRL2_FORCE_EN_MASK) |    \
      (force_en << SQ_PERFCOUNTER_CTRL2_FORCE_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_CNTR_RATE__VI(sq_perfcounter_ctrl)                                 \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_CNTR_RATE_MASK) >>                                   \
   SQ_PERFCOUNTER_CTRL_CNTR_RATE_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_CS_EN__VI(sq_perfcounter_ctrl)                                     \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_CS_EN_MASK) >> SQ_PERFCOUNTER_CTRL_CS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_DISABLE_FLUSH__VI(sq_perfcounter_ctrl)                             \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_MASK) >>                               \
   SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_ES_EN__VI(sq_perfcounter_ctrl)                                     \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_ES_EN_MASK) >> SQ_PERFCOUNTER_CTRL_ES_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_GS_EN__VI(sq_perfcounter_ctrl)                                     \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_GS_EN_MASK) >> SQ_PERFCOUNTER_CTRL_GS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_HS_EN__VI(sq_perfcounter_ctrl)                                     \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_HS_EN_MASK) >> SQ_PERFCOUNTER_CTRL_HS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_LS_EN__VI(sq_perfcounter_ctrl)                                     \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_LS_EN_MASK) >> SQ_PERFCOUNTER_CTRL_LS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_PS_EN__VI(sq_perfcounter_ctrl)                                     \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_PS_EN_MASK) >> SQ_PERFCOUNTER_CTRL_PS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_GET_VS_EN__VI(sq_perfcounter_ctrl)                                     \
  ((sq_perfcounter_ctrl & SQ_PERFCOUNTER_CTRL_VS_EN_MASK) >> SQ_PERFCOUNTER_CTRL_VS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_MASK__VI                                                               \
  (SQ_PERFCOUNTER_CTRL_PS_EN_MASK | SQ_PERFCOUNTER_CTRL_VS_EN_MASK |                               \
   SQ_PERFCOUNTER_CTRL_GS_EN_MASK | SQ_PERFCOUNTER_CTRL_ES_EN_MASK |                               \
   SQ_PERFCOUNTER_CTRL_HS_EN_MASK | SQ_PERFCOUNTER_CTRL_LS_EN_MASK |                               \
   SQ_PERFCOUNTER_CTRL_CS_EN_MASK | SQ_PERFCOUNTER_CTRL_CNTR_RATE_MASK |                           \
   SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_MASK)

#define SQ_PERFCOUNTER_CTRL_SET_CNTR_RATE__VI(sq_perfcounter_ctrl_reg, cntr_rate)                  \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_CNTR_RATE_MASK) |      \
      (cntr_rate << SQ_PERFCOUNTER_CTRL_CNTR_RATE_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_CS_EN__VI(sq_perfcounter_ctrl_reg, cs_en)                          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_CS_EN_MASK) |          \
      (cs_en << SQ_PERFCOUNTER_CTRL_CS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_DISABLE_FLUSH__VI(sq_perfcounter_ctrl_reg, disable_flush)          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_MASK) |  \
      (disable_flush << SQ_PERFCOUNTER_CTRL_DISABLE_FLUSH_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_ES_EN__VI(sq_perfcounter_ctrl_reg, es_en)                          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_ES_EN_MASK) |          \
      (es_en << SQ_PERFCOUNTER_CTRL_ES_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_GS_EN__VI(sq_perfcounter_ctrl_reg, gs_en)                          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_GS_EN_MASK) |          \
      (gs_en << SQ_PERFCOUNTER_CTRL_GS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_HS_EN__VI(sq_perfcounter_ctrl_reg, hs_en)                          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_HS_EN_MASK) |          \
      (hs_en << SQ_PERFCOUNTER_CTRL_HS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_LS_EN__VI(sq_perfcounter_ctrl_reg, ls_en)                          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_LS_EN_MASK) |          \
      (ls_en << SQ_PERFCOUNTER_CTRL_LS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_PS_EN__VI(sq_perfcounter_ctrl_reg, ps_en)                          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_PS_EN_MASK) |          \
      (ps_en << SQ_PERFCOUNTER_CTRL_PS_EN_SHIFT)

#define SQ_PERFCOUNTER_CTRL_SET_VS_EN__VI(sq_perfcounter_ctrl_reg, vs_en)                          \
  sq_perfcounter_ctrl_reg = (sq_perfcounter_ctrl_reg & ~SQ_PERFCOUNTER_CTRL_VS_EN_MASK) |          \
      (vs_en << SQ_PERFCOUNTER_CTRL_VS_EN_SHIFT)

#define SQ_PERFCOUNTER_MASK_GET_SH0_MASK__VI(sq_perfcounter_mask)                                  \
  ((sq_perfcounter_mask & SQ_PERFCOUNTER_MASK_SH0_MASK_MASK) >> SQ_PERFCOUNTER_MASK_SH0_MASK_SHIFT)

#define SQ_PERFCOUNTER_MASK_GET_SH1_MASK__VI(sq_perfcounter_mask)                                  \
  ((sq_perfcounter_mask & SQ_PERFCOUNTER_MASK_SH1_MASK_MASK) >> SQ_PERFCOUNTER_MASK_SH1_MASK_SHIFT)

#define SQ_PERFCOUNTER_MASK_MASK__VI                                                               \
  (SQ_PERFCOUNTER_MASK_SH0_MASK_MASK | SQ_PERFCOUNTER_MASK_SH1_MASK_MASK)

#define SQ_PERFCOUNTER_MASK_SET_SH0_MASK__VI(sq_perfcounter_mask_reg, sh0_mask)                    \
  sq_perfcounter_mask_reg = (sq_perfcounter_mask_reg & ~SQ_PERFCOUNTER_MASK_SH0_MASK_MASK) |       \
      (sh0_mask << SQ_PERFCOUNTER_MASK_SH0_MASK_SHIFT)

#define SQ_PERFCOUNTER_MASK_SET_SH1_MASK__VI(sq_perfcounter_mask_reg, sh1_mask)                    \
  sq_perfcounter_mask_reg = (sq_perfcounter_mask_reg & ~SQ_PERFCOUNTER_MASK_SH1_MASK_MASK) |       \
      (sh1_mask << SQ_PERFCOUNTER_MASK_SH1_MASK_SHIFT)

#define SQ_POWER_THROTTLE2_GET_LONG_TERM_INTERVAL_RATIO__VI(sq_power_throttle2)                    \
  ((sq_power_throttle2 & SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_MASK) >>                      \
   SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_SHIFT)

#define SQ_POWER_THROTTLE2_GET_MAX_POWER_DELTA__VI(sq_power_throttle2)                             \
  ((sq_power_throttle2 & SQ_POWER_THROTTLE2_MAX_POWER_DELTA_MASK) >>                               \
   SQ_POWER_THROTTLE2_MAX_POWER_DELTA_SHIFT)

#define SQ_POWER_THROTTLE2_GET_SHORT_TERM_INTERVAL_SIZE__VI(sq_power_throttle2)                    \
  ((sq_power_throttle2 & SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_MASK) >>                      \
   SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_SHIFT)

#define SQ_POWER_THROTTLE2_GET_USE_REF_CLOCK__VI(sq_power_throttle2)                               \
  ((sq_power_throttle2 & SQ_POWER_THROTTLE2_USE_REF_CLOCK_MASK) >>                                 \
   SQ_POWER_THROTTLE2_USE_REF_CLOCK_SHIFT)

#define SQ_POWER_THROTTLE2_MASK__VI                                                                \
  (SQ_POWER_THROTTLE2_MAX_POWER_DELTA_MASK | SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_MASK |    \
   SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_MASK | SQ_POWER_THROTTLE2_USE_REF_CLOCK_MASK)

#define SQ_POWER_THROTTLE2_SET_LONG_TERM_INTERVAL_RATIO__VI(sq_power_throttle2_reg,                \
                                                            long_term_interval_ratio)              \
  sq_power_throttle2_reg =                                                                         \
      (sq_power_throttle2_reg & ~SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_MASK) |               \
      (long_term_interval_ratio << SQ_POWER_THROTTLE2_LONG_TERM_INTERVAL_RATIO_SHIFT)

#define SQ_POWER_THROTTLE2_SET_MAX_POWER_DELTA__VI(sq_power_throttle2_reg, max_power_delta)        \
  sq_power_throttle2_reg = (sq_power_throttle2_reg & ~SQ_POWER_THROTTLE2_MAX_POWER_DELTA_MASK) |   \
      (max_power_delta << SQ_POWER_THROTTLE2_MAX_POWER_DELTA_SHIFT)

#define SQ_POWER_THROTTLE2_SET_SHORT_TERM_INTERVAL_SIZE__VI(sq_power_throttle2_reg,                \
                                                            short_term_interval_size)              \
  sq_power_throttle2_reg =                                                                         \
      (sq_power_throttle2_reg & ~SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_MASK) |               \
      (short_term_interval_size << SQ_POWER_THROTTLE2_SHORT_TERM_INTERVAL_SIZE_SHIFT)

#define SQ_POWER_THROTTLE2_SET_USE_REF_CLOCK__VI(sq_power_throttle2_reg, use_ref_clock)            \
  sq_power_throttle2_reg = (sq_power_throttle2_reg & ~SQ_POWER_THROTTLE2_USE_REF_CLOCK_MASK) |     \
      (use_ref_clock << SQ_POWER_THROTTLE2_USE_REF_CLOCK_SHIFT)

#define SQ_POWER_THROTTLE_GET_MAX_POWER__VI(sq_power_throttle)                                     \
  ((sq_power_throttle & SQ_POWER_THROTTLE_MAX_POWER_MASK) >> SQ_POWER_THROTTLE_MAX_POWER_SHIFT)

#define SQ_POWER_THROTTLE_GET_MIN_POWER__VI(sq_power_throttle)                                     \
  ((sq_power_throttle & SQ_POWER_THROTTLE_MIN_POWER_MASK) >> SQ_POWER_THROTTLE_MIN_POWER_SHIFT)

#define SQ_POWER_THROTTLE_GET_PHASE_OFFSET__VI(sq_power_throttle)                                  \
  ((sq_power_throttle & SQ_POWER_THROTTLE_PHASE_OFFSET_MASK) >>                                    \
   SQ_POWER_THROTTLE_PHASE_OFFSET_SHIFT)

#define SQ_POWER_THROTTLE_MASK__VI                                                                 \
  (SQ_POWER_THROTTLE_MIN_POWER_MASK | SQ_POWER_THROTTLE_MAX_POWER_MASK |                           \
   SQ_POWER_THROTTLE_PHASE_OFFSET_MASK)

#define SQ_POWER_THROTTLE_SET_MAX_POWER__VI(sq_power_throttle_reg, max_power)                      \
  sq_power_throttle_reg = (sq_power_throttle_reg & ~SQ_POWER_THROTTLE_MAX_POWER_MASK) |            \
      (max_power << SQ_POWER_THROTTLE_MAX_POWER_SHIFT)

#define SQ_POWER_THROTTLE_SET_MIN_POWER__VI(sq_power_throttle_reg, min_power)                      \
  sq_power_throttle_reg = (sq_power_throttle_reg & ~SQ_POWER_THROTTLE_MIN_POWER_MASK) |            \
      (min_power << SQ_POWER_THROTTLE_MIN_POWER_SHIFT)

#define SQ_POWER_THROTTLE_SET_PHASE_OFFSET__VI(sq_power_throttle_reg, phase_offset)                \
  sq_power_throttle_reg = (sq_power_throttle_reg & ~SQ_POWER_THROTTLE_PHASE_OFFSET_MASK) |         \
      (phase_offset << SQ_POWER_THROTTLE_PHASE_OFFSET_SHIFT)

#define SQ_RANDOM_WAVE_PRI_GET_RET__VI(sq_random_wave_pri)                                         \
  ((sq_random_wave_pri & SQ_RANDOM_WAVE_PRI_RET_MASK) >> SQ_RANDOM_WAVE_PRI_RET_SHIFT)

#define SQ_RANDOM_WAVE_PRI_GET_RNG__VI(sq_random_wave_pri)                                         \
  ((sq_random_wave_pri & SQ_RANDOM_WAVE_PRI_RNG_MASK) >> SQ_RANDOM_WAVE_PRI_RNG_SHIFT)

#define SQ_RANDOM_WAVE_PRI_GET_RUI__VI(sq_random_wave_pri)                                         \
  ((sq_random_wave_pri & SQ_RANDOM_WAVE_PRI_RUI_MASK) >> SQ_RANDOM_WAVE_PRI_RUI_SHIFT)

#define SQ_RANDOM_WAVE_PRI_MASK__VI                                                                \
  (SQ_RANDOM_WAVE_PRI_RET_MASK | SQ_RANDOM_WAVE_PRI_RUI_MASK | SQ_RANDOM_WAVE_PRI_RNG_MASK)

#define SQ_RANDOM_WAVE_PRI_SET_RET__VI(sq_random_wave_pri_reg, ret)                                \
  sq_random_wave_pri_reg = (sq_random_wave_pri_reg & ~SQ_RANDOM_WAVE_PRI_RET_MASK) |               \
      (ret << SQ_RANDOM_WAVE_PRI_RET_SHIFT)

#define SQ_RANDOM_WAVE_PRI_SET_RNG__VI(sq_random_wave_pri_reg, rng)                                \
  sq_random_wave_pri_reg = (sq_random_wave_pri_reg & ~SQ_RANDOM_WAVE_PRI_RNG_MASK) |               \
      (rng << SQ_RANDOM_WAVE_PRI_RNG_SHIFT)

#define SQ_RANDOM_WAVE_PRI_SET_RUI__VI(sq_random_wave_pri_reg, rui)                                \
  sq_random_wave_pri_reg = (sq_random_wave_pri_reg & ~SQ_RANDOM_WAVE_PRI_RUI_MASK) |               \
      (rui << SQ_RANDOM_WAVE_PRI_RUI_SHIFT)

#define SQ_REG_CREDITS_GET_CMD_CREDITS__VI(sq_reg_credits)                                         \
  ((sq_reg_credits & SQ_REG_CREDITS_CMD_CREDITS_MASK) >> SQ_REG_CREDITS_CMD_CREDITS_SHIFT)

#define SQ_REG_CREDITS_GET_CMD_OVERFLOW__VI(sq_reg_credits)                                        \
  ((sq_reg_credits & SQ_REG_CREDITS_CMD_OVERFLOW_MASK) >> SQ_REG_CREDITS_CMD_OVERFLOW_SHIFT)

#define SQ_REG_CREDITS_GET_IMMED_OVERFLOW__VI(sq_reg_credits)                                      \
  ((sq_reg_credits & SQ_REG_CREDITS_IMMED_OVERFLOW_MASK) >> SQ_REG_CREDITS_IMMED_OVERFLOW_SHIFT)

#define SQ_REG_CREDITS_GET_REG_BUSY__VI(sq_reg_credits)                                            \
  ((sq_reg_credits & SQ_REG_CREDITS_REG_BUSY_MASK) >> SQ_REG_CREDITS_REG_BUSY_SHIFT)

#define SQ_REG_CREDITS_GET_SRBM_CREDITS__VI(sq_reg_credits)                                        \
  ((sq_reg_credits & SQ_REG_CREDITS_SRBM_CREDITS_MASK) >> SQ_REG_CREDITS_SRBM_CREDITS_SHIFT)

#define SQ_REG_CREDITS_GET_SRBM_OVERFLOW__VI(sq_reg_credits)                                       \
  ((sq_reg_credits & SQ_REG_CREDITS_SRBM_OVERFLOW_MASK) >> SQ_REG_CREDITS_SRBM_OVERFLOW_SHIFT)

#define SQ_REG_CREDITS_MASK__VI                                                                    \
  (SQ_REG_CREDITS_SRBM_CREDITS_MASK | SQ_REG_CREDITS_CMD_CREDITS_MASK |                            \
   SQ_REG_CREDITS_REG_BUSY_MASK | SQ_REG_CREDITS_SRBM_OVERFLOW_MASK |                              \
   SQ_REG_CREDITS_IMMED_OVERFLOW_MASK | SQ_REG_CREDITS_CMD_OVERFLOW_MASK)

#define SQ_REG_CREDITS_SET_CMD_CREDITS__VI(sq_reg_credits_reg, cmd_credits)                        \
  sq_reg_credits_reg = (sq_reg_credits_reg & ~SQ_REG_CREDITS_CMD_CREDITS_MASK) |                   \
      (cmd_credits << SQ_REG_CREDITS_CMD_CREDITS_SHIFT)

#define SQ_REG_CREDITS_SET_CMD_OVERFLOW__VI(sq_reg_credits_reg, cmd_overflow)                      \
  sq_reg_credits_reg = (sq_reg_credits_reg & ~SQ_REG_CREDITS_CMD_OVERFLOW_MASK) |                  \
      (cmd_overflow << SQ_REG_CREDITS_CMD_OVERFLOW_SHIFT)

#define SQ_REG_CREDITS_SET_IMMED_OVERFLOW__VI(sq_reg_credits_reg, immed_overflow)                  \
  sq_reg_credits_reg = (sq_reg_credits_reg & ~SQ_REG_CREDITS_IMMED_OVERFLOW_MASK) |                \
      (immed_overflow << SQ_REG_CREDITS_IMMED_OVERFLOW_SHIFT)

#define SQ_REG_CREDITS_SET_REG_BUSY__VI(sq_reg_credits_reg, reg_busy)                              \
  sq_reg_credits_reg = (sq_reg_credits_reg & ~SQ_REG_CREDITS_REG_BUSY_MASK) |                      \
      (reg_busy << SQ_REG_CREDITS_REG_BUSY_SHIFT)

#define SQ_REG_CREDITS_SET_SRBM_CREDITS__VI(sq_reg_credits_reg, srbm_credits)                      \
  sq_reg_credits_reg = (sq_reg_credits_reg & ~SQ_REG_CREDITS_SRBM_CREDITS_MASK) |                  \
      (srbm_credits << SQ_REG_CREDITS_SRBM_CREDITS_SHIFT)

#define SQ_REG_CREDITS_SET_SRBM_OVERFLOW__VI(sq_reg_credits_reg, srbm_overflow)                    \
  sq_reg_credits_reg = (sq_reg_credits_reg & ~SQ_REG_CREDITS_SRBM_OVERFLOW_MASK) |                 \
      (srbm_overflow << SQ_REG_CREDITS_SRBM_OVERFLOW_SHIFT)

#define SQ_REG_TIMESTAMP_GET_TIMESTAMP__VI(sq_reg_timestamp)                                       \
  ((sq_reg_timestamp & SQ_REG_TIMESTAMP_TIMESTAMP_MASK) >> SQ_REG_TIMESTAMP_TIMESTAMP_SHIFT)

#define SQ_REG_TIMESTAMP_MASK__VI (SQ_REG_TIMESTAMP_TIMESTAMP_MASK)

#define SQ_REG_TIMESTAMP_SET_TIMESTAMP__VI(sq_reg_timestamp_reg, timestamp)                        \
  sq_reg_timestamp_reg = (sq_reg_timestamp_reg & ~SQ_REG_TIMESTAMP_TIMESTAMP_MASK) |               \
      (timestamp << SQ_REG_TIMESTAMP_TIMESTAMP_SHIFT)

#define SQ_TEX_CLK_CTRL_GET_FORCE_CU_ON_SH0__VI(sq_tex_clk_ctrl)                                   \
  ((sq_tex_clk_ctrl & SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_MASK) >>                                     \
   SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT)

#define SQ_TEX_CLK_CTRL_GET_FORCE_CU_ON_SH1__VI(sq_tex_clk_ctrl)                                   \
  ((sq_tex_clk_ctrl & SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_MASK) >>                                     \
   SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT)

#define SQ_TEX_CLK_CTRL_MASK__VI                                                                   \
  (SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_MASK | SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_MASK)

#define SQ_TEX_CLK_CTRL_SET_FORCE_CU_ON_SH0__VI(sq_tex_clk_ctrl_reg, force_cu_on_sh0)              \
  sq_tex_clk_ctrl_reg = (sq_tex_clk_ctrl_reg & ~SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_MASK) |            \
      (force_cu_on_sh0 << SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH0_SHIFT)

#define SQ_TEX_CLK_CTRL_SET_FORCE_CU_ON_SH1__VI(sq_tex_clk_ctrl_reg, force_cu_on_sh1)              \
  sq_tex_clk_ctrl_reg = (sq_tex_clk_ctrl_reg & ~SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_MASK) |            \
      (force_cu_on_sh1 << SQ_TEX_CLK_CTRL_FORCE_CU_ON_SH1_SHIFT)

#define SQ_THREAD_TRACE_BASE2_GET_ADDR_HI__VI(sq_thread_trace_base2)                               \
  ((sq_thread_trace_base2 & SQ_THREAD_TRACE_BASE2_ADDR_HI_MASK) >>                                 \
   SQ_THREAD_TRACE_BASE2_ADDR_HI_SHIFT)

#define SQ_THREAD_TRACE_BASE2_MASK__VI (SQ_THREAD_TRACE_BASE2_ADDR_HI_MASK)

#define SQ_THREAD_TRACE_BASE2_SET_ADDR_HI__VI(sq_thread_trace_base2_reg, addr_hi)                  \
  sq_thread_trace_base2_reg = (sq_thread_trace_base2_reg & ~SQ_THREAD_TRACE_BASE2_ADDR_HI_MASK) |  \
      (addr_hi << SQ_THREAD_TRACE_BASE2_ADDR_HI_SHIFT)

#define SQ_THREAD_TRACE_BASE_GET_ADDR__VI(sq_thread_trace_base)                                    \
  ((sq_thread_trace_base & SQ_THREAD_TRACE_BASE_ADDR_MASK) >> SQ_THREAD_TRACE_BASE_ADDR_SHIFT)

#define SQ_THREAD_TRACE_BASE_MASK__VI (SQ_THREAD_TRACE_BASE_ADDR_MASK)

#define SQ_THREAD_TRACE_BASE_SET_ADDR__VI(sq_thread_trace_base_reg, addr)                          \
  sq_thread_trace_base_reg = (sq_thread_trace_base_reg & ~SQ_THREAD_TRACE_BASE_ADDR_MASK) |        \
      (addr << SQ_THREAD_TRACE_BASE_ADDR_SHIFT)

#define SQ_THREAD_TRACE_CNTR_GET_CNTR__VI(sq_thread_trace_cntr)                                    \
  ((sq_thread_trace_cntr & SQ_THREAD_TRACE_CNTR_CNTR_MASK) >> SQ_THREAD_TRACE_CNTR_CNTR_SHIFT)

#define SQ_THREAD_TRACE_CNTR_MASK__VI (SQ_THREAD_TRACE_CNTR_CNTR_MASK)

#define SQ_THREAD_TRACE_CNTR_SET_CNTR__VI(sq_thread_trace_cntr_reg, cntr)                          \
  sq_thread_trace_cntr_reg = (sq_thread_trace_cntr_reg & ~SQ_THREAD_TRACE_CNTR_CNTR_MASK) |        \
      (cntr << SQ_THREAD_TRACE_CNTR_CNTR_SHIFT)

#define SQ_THREAD_TRACE_CTRL_GET_RESET_BUFFER__VI(sq_thread_trace_ctrl)                            \
  ((sq_thread_trace_ctrl & SQ_THREAD_TRACE_CTRL_RESET_BUFFER_MASK) >>                              \
   SQ_THREAD_TRACE_CTRL_RESET_BUFFER_SHIFT)

#define SQ_THREAD_TRACE_CTRL_MASK__VI (SQ_THREAD_TRACE_CTRL_RESET_BUFFER_MASK)

#define SQ_THREAD_TRACE_CTRL_SET_RESET_BUFFER__VI(sq_thread_trace_ctrl_reg, reset_buffer)          \
  sq_thread_trace_ctrl_reg =                                                                       \
      (sq_thread_trace_ctrl_reg & ~SQ_THREAD_TRACE_CTRL_RESET_BUFFER_MASK) |                       \
      (reset_buffer << SQ_THREAD_TRACE_CTRL_RESET_BUFFER_SHIFT)

#define SQ_THREAD_TRACE_HIWATER_GET_HIWATER__VI(sq_thread_trace_hiwater)                           \
  ((sq_thread_trace_hiwater & SQ_THREAD_TRACE_HIWATER_HIWATER_MASK) >>                             \
   SQ_THREAD_TRACE_HIWATER_HIWATER_SHIFT)

#define SQ_THREAD_TRACE_HIWATER_MASK__VI (SQ_THREAD_TRACE_HIWATER_HIWATER_MASK)

#define SQ_THREAD_TRACE_HIWATER_SET_HIWATER__VI(sq_thread_trace_hiwater_reg, hiwater)              \
  sq_thread_trace_hiwater_reg =                                                                    \
      (sq_thread_trace_hiwater_reg & ~SQ_THREAD_TRACE_HIWATER_HIWATER_MASK) |                      \
      (hiwater << SQ_THREAD_TRACE_HIWATER_HIWATER_SHIFT)

#define SQ_THREAD_TRACE_MASK_DEFAULT__VI 0x0000cf80
#define SQ_THREAD_TRACE_MASK_GET_CU_SEL__VI(sq_thread_trace_mask)                                  \
  ((sq_thread_trace_mask & SQ_THREAD_TRACE_MASK_CU_SEL_MASK) >> SQ_THREAD_TRACE_MASK_CU_SEL_SHIFT)

#define SQ_THREAD_TRACE_MASK_GET_REG_STALL_EN__VI(sq_thread_trace_mask)                            \
  ((sq_thread_trace_mask & SQ_THREAD_TRACE_MASK_REG_STALL_EN_MASK) >>                              \
   SQ_THREAD_TRACE_MASK_REG_STALL_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_GET_SH_SEL__VI(sq_thread_trace_mask)                                  \
  ((sq_thread_trace_mask & SQ_THREAD_TRACE_MASK_SH_SEL_MASK) >> SQ_THREAD_TRACE_MASK_SH_SEL_SHIFT)

#define SQ_THREAD_TRACE_MASK_GET_SIMD_EN__VI(sq_thread_trace_mask)                                 \
  ((sq_thread_trace_mask & SQ_THREAD_TRACE_MASK_SIMD_EN_MASK) >> SQ_THREAD_TRACE_MASK_SIMD_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_GET_SPI_STALL_EN__VI(sq_thread_trace_mask)                            \
  ((sq_thread_trace_mask & SQ_THREAD_TRACE_MASK_SPI_STALL_EN_MASK) >>                              \
   SQ_THREAD_TRACE_MASK_SPI_STALL_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_GET_SQ_STALL_EN__VI(sq_thread_trace_mask)                             \
  ((sq_thread_trace_mask & SQ_THREAD_TRACE_MASK_SQ_STALL_EN_MASK) >>                               \
   SQ_THREAD_TRACE_MASK_SQ_STALL_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_GET_VM_ID_MASK__VI(sq_thread_trace_mask)                              \
  ((sq_thread_trace_mask & SQ_THREAD_TRACE_MASK_VM_ID_MASK_MASK) >>                                \
   SQ_THREAD_TRACE_MASK_VM_ID_MASK_SHIFT)

#define SQ_THREAD_TRACE_MASK_MASK__VI                                                              \
  (SQ_THREAD_TRACE_MASK_CU_SEL_MASK | SQ_THREAD_TRACE_MASK_SH_SEL_MASK |                           \
   SQ_THREAD_TRACE_MASK_REG_STALL_EN_MASK | SQ_THREAD_TRACE_MASK_SIMD_EN_MASK |                    \
   SQ_THREAD_TRACE_MASK_VM_ID_MASK_MASK | SQ_THREAD_TRACE_MASK_SPI_STALL_EN_MASK |                 \
   SQ_THREAD_TRACE_MASK_SQ_STALL_EN_MASK)

#define SQ_THREAD_TRACE_MASK_SET_CU_SEL__VI(sq_thread_trace_mask_reg, cu_sel)                      \
  sq_thread_trace_mask_reg = (sq_thread_trace_mask_reg & ~SQ_THREAD_TRACE_MASK_CU_SEL_MASK) |      \
      (cu_sel << SQ_THREAD_TRACE_MASK_CU_SEL_SHIFT)

#define SQ_THREAD_TRACE_MASK_SET_REG_STALL_EN__VI(sq_thread_trace_mask_reg, reg_stall_en)          \
  sq_thread_trace_mask_reg =                                                                       \
      (sq_thread_trace_mask_reg & ~SQ_THREAD_TRACE_MASK_REG_STALL_EN_MASK) |                       \
      (reg_stall_en << SQ_THREAD_TRACE_MASK_REG_STALL_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_SET_SH_SEL__VI(sq_thread_trace_mask_reg, sh_sel)                      \
  sq_thread_trace_mask_reg = (sq_thread_trace_mask_reg & ~SQ_THREAD_TRACE_MASK_SH_SEL_MASK) |      \
      (sh_sel << SQ_THREAD_TRACE_MASK_SH_SEL_SHIFT)

#define SQ_THREAD_TRACE_MASK_SET_SIMD_EN__VI(sq_thread_trace_mask_reg, simd_en)                    \
  sq_thread_trace_mask_reg = (sq_thread_trace_mask_reg & ~SQ_THREAD_TRACE_MASK_SIMD_EN_MASK) |     \
      (simd_en << SQ_THREAD_TRACE_MASK_SIMD_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_SET_SPI_STALL_EN__VI(sq_thread_trace_mask_reg, spi_stall_en)          \
  sq_thread_trace_mask_reg =                                                                       \
      (sq_thread_trace_mask_reg & ~SQ_THREAD_TRACE_MASK_SPI_STALL_EN_MASK) |                       \
      (spi_stall_en << SQ_THREAD_TRACE_MASK_SPI_STALL_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_SET_SQ_STALL_EN__VI(sq_thread_trace_mask_reg, sq_stall_en)            \
  sq_thread_trace_mask_reg = (sq_thread_trace_mask_reg & ~SQ_THREAD_TRACE_MASK_SQ_STALL_EN_MASK) | \
      (sq_stall_en << SQ_THREAD_TRACE_MASK_SQ_STALL_EN_SHIFT)

#define SQ_THREAD_TRACE_MASK_SET_VM_ID_MASK__VI(sq_thread_trace_mask_reg, vm_id_mask)              \
  sq_thread_trace_mask_reg = (sq_thread_trace_mask_reg & ~SQ_THREAD_TRACE_MASK_VM_ID_MASK_MASK) |  \
      (vm_id_mask << SQ_THREAD_TRACE_MASK_VM_ID_MASK_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_AUTOFLUSH_EN__VI(sq_thread_trace_mode)                            \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_MASK) >>                              \
   SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_CAPTURE_MODE__VI(sq_thread_trace_mode)                            \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_CAPTURE_MODE_MASK) >>                              \
   SQ_THREAD_TRACE_MODE_CAPTURE_MODE_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_INTERRUPT_EN__VI(sq_thread_trace_mode)                            \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_INTERRUPT_EN_MASK) >>                              \
   SQ_THREAD_TRACE_MODE_INTERRUPT_EN_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_ISSUE_MASK__VI(sq_thread_trace_mode)                              \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_ISSUE_MASK_MASK) >>                                \
   SQ_THREAD_TRACE_MODE_ISSUE_MASK_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MASK_CS__VI(sq_thread_trace_mode)                                 \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MASK_CS_MASK) >> SQ_THREAD_TRACE_MODE_MASK_CS_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MASK_ES__VI(sq_thread_trace_mode)                                 \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MASK_ES_MASK) >> SQ_THREAD_TRACE_MODE_MASK_ES_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MASK_GS__VI(sq_thread_trace_mode)                                 \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MASK_GS_MASK) >> SQ_THREAD_TRACE_MODE_MASK_GS_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MASK_HS__VI(sq_thread_trace_mode)                                 \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MASK_HS_MASK) >> SQ_THREAD_TRACE_MODE_MASK_HS_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MASK_LS__VI(sq_thread_trace_mode)                                 \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MASK_LS_MASK) >> SQ_THREAD_TRACE_MODE_MASK_LS_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MASK_PS__VI(sq_thread_trace_mode)                                 \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MASK_PS_MASK) >> SQ_THREAD_TRACE_MODE_MASK_PS_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MASK_VS__VI(sq_thread_trace_mode)                                 \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MASK_VS_MASK) >> SQ_THREAD_TRACE_MODE_MASK_VS_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_MODE__VI(sq_thread_trace_mode)                                    \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_MODE_MASK) >> SQ_THREAD_TRACE_MODE_MODE_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_PRIV__VI(sq_thread_trace_mode)                                    \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_PRIV_MASK) >> SQ_THREAD_TRACE_MODE_PRIV_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_TEST_MODE__VI(sq_thread_trace_mode)                               \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_TEST_MODE_MASK) >>                                 \
   SQ_THREAD_TRACE_MODE_TEST_MODE_SHIFT)

#define SQ_THREAD_TRACE_MODE_GET_WRAP__VI(sq_thread_trace_mode)                                    \
  ((sq_thread_trace_mode & SQ_THREAD_TRACE_MODE_WRAP_MASK) >> SQ_THREAD_TRACE_MODE_WRAP_SHIFT)

#define SQ_THREAD_TRACE_MODE_MASK__VI                                                              \
  (SQ_THREAD_TRACE_MODE_MASK_PS_MASK | SQ_THREAD_TRACE_MODE_MASK_VS_MASK |                         \
   SQ_THREAD_TRACE_MODE_MASK_GS_MASK | SQ_THREAD_TRACE_MODE_MASK_ES_MASK |                         \
   SQ_THREAD_TRACE_MODE_MASK_HS_MASK | SQ_THREAD_TRACE_MODE_MASK_LS_MASK |                         \
   SQ_THREAD_TRACE_MODE_MASK_CS_MASK | SQ_THREAD_TRACE_MODE_MODE_MASK |                            \
   SQ_THREAD_TRACE_MODE_CAPTURE_MODE_MASK | SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_MASK |               \
   SQ_THREAD_TRACE_MODE_PRIV_MASK | SQ_THREAD_TRACE_MODE_ISSUE_MASK_MASK |                         \
   SQ_THREAD_TRACE_MODE_TEST_MODE_MASK | SQ_THREAD_TRACE_MODE_INTERRUPT_EN_MASK |                  \
   SQ_THREAD_TRACE_MODE_WRAP_MASK)

#define SQ_THREAD_TRACE_MODE_SET_AUTOFLUSH_EN__VI(sq_thread_trace_mode_reg, autoflush_en)          \
  sq_thread_trace_mode_reg =                                                                       \
      (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_MASK) |                       \
      (autoflush_en << SQ_THREAD_TRACE_MODE_AUTOFLUSH_EN_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_CAPTURE_MODE__VI(sq_thread_trace_mode_reg, capture_mode)          \
  sq_thread_trace_mode_reg =                                                                       \
      (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_CAPTURE_MODE_MASK) |                       \
      (capture_mode << SQ_THREAD_TRACE_MODE_CAPTURE_MODE_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_INTERRUPT_EN__VI(sq_thread_trace_mode_reg, interrupt_en)          \
  sq_thread_trace_mode_reg =                                                                       \
      (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_INTERRUPT_EN_MASK) |                       \
      (interrupt_en << SQ_THREAD_TRACE_MODE_INTERRUPT_EN_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_ISSUE_MASK__VI(sq_thread_trace_mode_reg, issue_mask)              \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_ISSUE_MASK_MASK) |  \
      (issue_mask << SQ_THREAD_TRACE_MODE_ISSUE_MASK_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MASK_CS__VI(sq_thread_trace_mode_reg, mask_cs)                    \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MASK_CS_MASK) |     \
      (mask_cs << SQ_THREAD_TRACE_MODE_MASK_CS_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MASK_ES__VI(sq_thread_trace_mode_reg, mask_es)                    \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MASK_ES_MASK) |     \
      (mask_es << SQ_THREAD_TRACE_MODE_MASK_ES_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MASK_GS__VI(sq_thread_trace_mode_reg, mask_gs)                    \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MASK_GS_MASK) |     \
      (mask_gs << SQ_THREAD_TRACE_MODE_MASK_GS_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MASK_HS__VI(sq_thread_trace_mode_reg, mask_hs)                    \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MASK_HS_MASK) |     \
      (mask_hs << SQ_THREAD_TRACE_MODE_MASK_HS_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MASK_LS__VI(sq_thread_trace_mode_reg, mask_ls)                    \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MASK_LS_MASK) |     \
      (mask_ls << SQ_THREAD_TRACE_MODE_MASK_LS_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MASK_PS__VI(sq_thread_trace_mode_reg, mask_ps)                    \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MASK_PS_MASK) |     \
      (mask_ps << SQ_THREAD_TRACE_MODE_MASK_PS_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MASK_VS__VI(sq_thread_trace_mode_reg, mask_vs)                    \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MASK_VS_MASK) |     \
      (mask_vs << SQ_THREAD_TRACE_MODE_MASK_VS_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_MODE__VI(sq_thread_trace_mode_reg, mode)                          \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_MODE_MASK) |        \
      (mode << SQ_THREAD_TRACE_MODE_MODE_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_PRIV__VI(sq_thread_trace_mode_reg, priv)                          \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_PRIV_MASK) |        \
      (priv << SQ_THREAD_TRACE_MODE_PRIV_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_TEST_MODE__VI(sq_thread_trace_mode_reg, test_mode)                \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_TEST_MODE_MASK) |   \
      (test_mode << SQ_THREAD_TRACE_MODE_TEST_MODE_SHIFT)

#define SQ_THREAD_TRACE_MODE_SET_WRAP__VI(sq_thread_trace_mode_reg, wrap)                          \
  sq_thread_trace_mode_reg = (sq_thread_trace_mode_reg & ~SQ_THREAD_TRACE_MODE_WRAP_MASK) |        \
      (wrap << SQ_THREAD_TRACE_MODE_WRAP_SHIFT)

#define SQ_THREAD_TRACE_PERF_MASK_GET_SH0_MASK__VI(sq_thread_trace_perf_mask)                      \
  ((sq_thread_trace_perf_mask & SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_MASK) >>                        \
   SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_SHIFT)

#define SQ_THREAD_TRACE_PERF_MASK_GET_SH1_MASK__VI(sq_thread_trace_perf_mask)                      \
  ((sq_thread_trace_perf_mask & SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_MASK) >>                        \
   SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_SHIFT)

#define SQ_THREAD_TRACE_PERF_MASK_MASK__VI                                                         \
  (SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_MASK | SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_MASK)

#define SQ_THREAD_TRACE_PERF_MASK_SET_SH0_MASK__VI(sq_thread_trace_perf_mask_reg, sh0_mask)        \
  sq_thread_trace_perf_mask_reg =                                                                  \
      (sq_thread_trace_perf_mask_reg & ~SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_MASK) |                 \
      (sh0_mask << SQ_THREAD_TRACE_PERF_MASK_SH0_MASK_SHIFT)

#define SQ_THREAD_TRACE_PERF_MASK_SET_SH1_MASK__VI(sq_thread_trace_perf_mask_reg, sh1_mask)        \
  sq_thread_trace_perf_mask_reg =                                                                  \
      (sq_thread_trace_perf_mask_reg & ~SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_MASK) |                 \
      (sh1_mask << SQ_THREAD_TRACE_PERF_MASK_SH1_MASK_SHIFT)

#define SQ_THREAD_TRACE_SIZE_GET_SIZE__VI(sq_thread_trace_size)                                    \
  ((sq_thread_trace_size & SQ_THREAD_TRACE_SIZE_SIZE_MASK) >> SQ_THREAD_TRACE_SIZE_SIZE_SHIFT)

#define SQ_THREAD_TRACE_SIZE_MASK__VI (SQ_THREAD_TRACE_SIZE_SIZE_MASK)

#define SQ_THREAD_TRACE_SIZE_SET_SIZE__VI(sq_thread_trace_size_reg, size)                          \
  sq_thread_trace_size_reg = (sq_thread_trace_size_reg & ~SQ_THREAD_TRACE_SIZE_SIZE_MASK) |        \
      (size << SQ_THREAD_TRACE_SIZE_SIZE_SHIFT)

#define SQ_THREAD_TRACE_STATUS_GET_BUSY__VI(sq_thread_trace_status)                                \
  ((sq_thread_trace_status & SQ_THREAD_TRACE_STATUS_BUSY_MASK) >> SQ_THREAD_TRACE_STATUS_BUSY_SHIFT)

#define SQ_THREAD_TRACE_STATUS_GET_FINISH_DONE__VI(sq_thread_trace_status)                         \
  ((sq_thread_trace_status & SQ_THREAD_TRACE_STATUS_FINISH_DONE_MASK) >>                           \
   SQ_THREAD_TRACE_STATUS_FINISH_DONE_SHIFT)

#define SQ_THREAD_TRACE_STATUS_GET_FINISH_PENDING__VI(sq_thread_trace_status)                      \
  ((sq_thread_trace_status & SQ_THREAD_TRACE_STATUS_FINISH_PENDING_MASK) >>                        \
   SQ_THREAD_TRACE_STATUS_FINISH_PENDING_SHIFT)

#define SQ_THREAD_TRACE_STATUS_GET_FULL__VI(sq_thread_trace_status)                                \
  ((sq_thread_trace_status & SQ_THREAD_TRACE_STATUS_FULL_MASK) >> SQ_THREAD_TRACE_STATUS_FULL_SHIFT)

#define SQ_THREAD_TRACE_STATUS_GET_NEW_BUF__VI(sq_thread_trace_status)                             \
  ((sq_thread_trace_status & SQ_THREAD_TRACE_STATUS_NEW_BUF_MASK) >>                               \
   SQ_THREAD_TRACE_STATUS_NEW_BUF_SHIFT)

#define SQ_THREAD_TRACE_STATUS_MASK__VI                                                            \
  (SQ_THREAD_TRACE_STATUS_FINISH_PENDING_MASK | SQ_THREAD_TRACE_STATUS_FINISH_DONE_MASK |          \
   SQ_THREAD_TRACE_STATUS_NEW_BUF_MASK | SQ_THREAD_TRACE_STATUS_BUSY_MASK |                        \
   SQ_THREAD_TRACE_STATUS_FULL_MASK)

#define SQ_THREAD_TRACE_STATUS_SET_BUSY__VI(sq_thread_trace_status_reg, busy)                      \
  sq_thread_trace_status_reg = (sq_thread_trace_status_reg & ~SQ_THREAD_TRACE_STATUS_BUSY_MASK) |  \
      (busy << SQ_THREAD_TRACE_STATUS_BUSY_SHIFT)

#define SQ_THREAD_TRACE_STATUS_SET_FINISH_DONE__VI(sq_thread_trace_status_reg, finish_done)        \
  sq_thread_trace_status_reg =                                                                     \
      (sq_thread_trace_status_reg & ~SQ_THREAD_TRACE_STATUS_FINISH_DONE_MASK) |                    \
      (finish_done << SQ_THREAD_TRACE_STATUS_FINISH_DONE_SHIFT)

#define SQ_THREAD_TRACE_STATUS_SET_FINISH_PENDING__VI(sq_thread_trace_status_reg, finish_pending)  \
  sq_thread_trace_status_reg =                                                                     \
      (sq_thread_trace_status_reg & ~SQ_THREAD_TRACE_STATUS_FINISH_PENDING_MASK) |                 \
      (finish_pending << SQ_THREAD_TRACE_STATUS_FINISH_PENDING_SHIFT)

#define SQ_THREAD_TRACE_STATUS_SET_FULL__VI(sq_thread_trace_status_reg, full)                      \
  sq_thread_trace_status_reg = (sq_thread_trace_status_reg & ~SQ_THREAD_TRACE_STATUS_FULL_MASK) |  \
      (full << SQ_THREAD_TRACE_STATUS_FULL_SHIFT)

#define SQ_THREAD_TRACE_STATUS_SET_NEW_BUF__VI(sq_thread_trace_status_reg, new_buf)                \
  sq_thread_trace_status_reg =                                                                     \
      (sq_thread_trace_status_reg & ~SQ_THREAD_TRACE_STATUS_NEW_BUF_MASK) |                        \
      (new_buf << SQ_THREAD_TRACE_STATUS_NEW_BUF_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK2_DEFAULT__VI 0xffffffff
#define SQ_THREAD_TRACE_TOKEN_MASK2_GET_INST_MASK__VI(sq_thread_trace_token_mask2)                 \
  ((sq_thread_trace_token_mask2 & SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_MASK) >>                   \
   SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_MASK__VI 0xffffffff
#define SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_SIZE__VI 32
#define SQ_THREAD_TRACE_TOKEN_MASK2_MASK__VI (SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_MASK)

#define SQ_THREAD_TRACE_TOKEN_MASK2_SET_INST_MASK__VI(sq_thread_trace_token_mask2_reg, inst_mask)  \
  sq_thread_trace_token_mask2_reg =                                                                \
      (sq_thread_trace_token_mask2_reg & ~SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_MASK) |            \
      (inst_mask << SQ_THREAD_TRACE_TOKEN_MASK2_INST_MASK_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK_GET_REG_DROP_ON_STALL__VI(sq_thread_trace_token_mask)           \
  ((sq_thread_trace_token_mask & SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_MASK) >>             \
   SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK_GET_REG_MASK__VI(sq_thread_trace_token_mask)                    \
  ((sq_thread_trace_token_mask & SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_MASK) >>                      \
   SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK_GET_TOKEN_MASK__VI(sq_thread_trace_token_mask)                  \
  ((sq_thread_trace_token_mask & SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_MASK) >>                    \
   SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK_MASK__VI                                                        \
  (SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_MASK | SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_MASK |         \
   SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_MASK)

#define SQ_THREAD_TRACE_TOKEN_MASK_SET_REG_DROP_ON_STALL__VI(sq_thread_trace_token_mask_reg,       \
                                                             reg_drop_on_stall)                    \
  sq_thread_trace_token_mask_reg =                                                                 \
      (sq_thread_trace_token_mask_reg & ~SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_MASK) |      \
      (reg_drop_on_stall << SQ_THREAD_TRACE_TOKEN_MASK_REG_DROP_ON_STALL_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK_SET_REG_MASK__VI(sq_thread_trace_token_mask_reg, reg_mask)      \
  sq_thread_trace_token_mask_reg =                                                                 \
      (sq_thread_trace_token_mask_reg & ~SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_MASK) |               \
      (reg_mask << SQ_THREAD_TRACE_TOKEN_MASK_REG_MASK_SHIFT)

#define SQ_THREAD_TRACE_TOKEN_MASK_SET_TOKEN_MASK__VI(sq_thread_trace_token_mask_reg, token_mask)  \
  sq_thread_trace_token_mask_reg =                                                                 \
      (sq_thread_trace_token_mask_reg & ~SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_MASK) |             \
      (token_mask << SQ_THREAD_TRACE_TOKEN_MASK_TOKEN_MASK_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_0_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_USERDATA_0_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_USERDATA_0_GET_DATA__VI(sq_thread_trace_userdata_0)                        \
  ((sq_thread_trace_userdata_0 & SQ_THREAD_TRACE_USERDATA_0_DATA_MASK) >>                          \
   SQ_THREAD_TRACE_USERDATA_0_DATA_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_0_MASK__VI (SQ_THREAD_TRACE_USERDATA_0_DATA_MASK)

#define SQ_THREAD_TRACE_USERDATA_0_SET_DATA__VI(sq_thread_trace_userdata_0_reg, data)              \
  sq_thread_trace_userdata_0_reg =                                                                 \
      (sq_thread_trace_userdata_0_reg & ~SQ_THREAD_TRACE_USERDATA_0_DATA_MASK) |                   \
      (data << SQ_THREAD_TRACE_USERDATA_0_DATA_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_1_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_USERDATA_1_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_USERDATA_1_GET_DATA__VI(sq_thread_trace_userdata_1)                        \
  ((sq_thread_trace_userdata_1 & SQ_THREAD_TRACE_USERDATA_1_DATA_MASK) >>                          \
   SQ_THREAD_TRACE_USERDATA_1_DATA_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_1_MASK__VI (SQ_THREAD_TRACE_USERDATA_1_DATA_MASK)

#define SQ_THREAD_TRACE_USERDATA_1_SET_DATA__VI(sq_thread_trace_userdata_1_reg, data)              \
  sq_thread_trace_userdata_1_reg =                                                                 \
      (sq_thread_trace_userdata_1_reg & ~SQ_THREAD_TRACE_USERDATA_1_DATA_MASK) |                   \
      (data << SQ_THREAD_TRACE_USERDATA_1_DATA_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_USERDATA_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_USERDATA_2_GET_DATA__VI(sq_thread_trace_userdata_2)                        \
  ((sq_thread_trace_userdata_2 & SQ_THREAD_TRACE_USERDATA_2_DATA_MASK) >>                          \
   SQ_THREAD_TRACE_USERDATA_2_DATA_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_2_MASK__VI (SQ_THREAD_TRACE_USERDATA_2_DATA_MASK)

#define SQ_THREAD_TRACE_USERDATA_2_SET_DATA__VI(sq_thread_trace_userdata_2_reg, data)              \
  sq_thread_trace_userdata_2_reg =                                                                 \
      (sq_thread_trace_userdata_2_reg & ~SQ_THREAD_TRACE_USERDATA_2_DATA_MASK) |                   \
      (data << SQ_THREAD_TRACE_USERDATA_2_DATA_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_3_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_USERDATA_3_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_USERDATA_3_GET_DATA__VI(sq_thread_trace_userdata_3)                        \
  ((sq_thread_trace_userdata_3 & SQ_THREAD_TRACE_USERDATA_3_DATA_MASK) >>                          \
   SQ_THREAD_TRACE_USERDATA_3_DATA_SHIFT)

#define SQ_THREAD_TRACE_USERDATA_3_MASK__VI (SQ_THREAD_TRACE_USERDATA_3_DATA_MASK)

#define SQ_THREAD_TRACE_USERDATA_3_SET_DATA__VI(sq_thread_trace_userdata_3_reg, data)              \
  sq_thread_trace_userdata_3_reg =                                                                 \
      (sq_thread_trace_userdata_3_reg & ~SQ_THREAD_TRACE_USERDATA_3_DATA_MASK) |                   \
      (data << SQ_THREAD_TRACE_USERDATA_3_DATA_SHIFT)

#define SQ_THREAD_TRACE_WORD_CMN_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_CMN_DEFAULT__VI 0x0000000d
#define SQ_THREAD_TRACE_WORD_CMN_GET_TIME_DELTA__VI(sq_thread_trace_word_cmn)                      \
  ((sq_thread_trace_word_cmn & SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_MASK) >>                        \
   SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_CMN_GET_TOKEN_TYPE__VI(sq_thread_trace_word_cmn)                      \
  ((sq_thread_trace_word_cmn & SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_MASK) >>                        \
   SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_CMN_MASK__VI                                                          \
  (SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_MASK | SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_MASK)

#define SQ_THREAD_TRACE_WORD_CMN_SET_TIME_DELTA__VI(sq_thread_trace_word_cmn_reg, time_delta)      \
  sq_thread_trace_word_cmn_reg =                                                                   \
      (sq_thread_trace_word_cmn_reg & ~SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_MASK) |                 \
      (time_delta << SQ_THREAD_TRACE_WORD_CMN_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_CMN_SET_TOKEN_TYPE__VI(sq_thread_trace_word_cmn_reg, token_type)      \
  sq_thread_trace_word_cmn_reg =                                                                   \
      (sq_thread_trace_word_cmn_reg & ~SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_MASK) |                 \
      (token_type << SQ_THREAD_TRACE_WORD_CMN_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_EVENT_DEFAULT__VI 0x0000cdcd
#define SQ_THREAD_TRACE_WORD_EVENT_GET_EVENT_TYPE__VI(sq_thread_trace_word_event)                  \
  ((sq_thread_trace_word_event & SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_MASK) >>                    \
   SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_GET_SH_ID__VI(sq_thread_trace_word_event)                       \
  ((sq_thread_trace_word_event & SQ_THREAD_TRACE_WORD_EVENT_SH_ID_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_EVENT_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_GET_STAGE__VI(sq_thread_trace_word_event)                       \
  ((sq_thread_trace_word_event & SQ_THREAD_TRACE_WORD_EVENT_STAGE_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_EVENT_STAGE_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_GET_TIME_DELTA__VI(sq_thread_trace_word_event)                  \
  ((sq_thread_trace_word_event & SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_MASK) >>                    \
   SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_GET_TOKEN_TYPE__VI(sq_thread_trace_word_event)                  \
  ((sq_thread_trace_word_event & SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_MASK) >>                    \
   SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_MASK__VI                                                        \
  (SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_MASK | SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_MASK |       \
   SQ_THREAD_TRACE_WORD_EVENT_SH_ID_MASK | SQ_THREAD_TRACE_WORD_EVENT_STAGE_MASK |                 \
   SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_MASK)

#define SQ_THREAD_TRACE_WORD_EVENT_SET_EVENT_TYPE__VI(sq_thread_trace_word_event_reg, event_type)  \
  sq_thread_trace_word_event_reg =                                                                 \
      (sq_thread_trace_word_event_reg & ~SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_MASK) |             \
      (event_type << SQ_THREAD_TRACE_WORD_EVENT_EVENT_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_SET_SH_ID__VI(sq_thread_trace_word_event_reg, sh_id)            \
  sq_thread_trace_word_event_reg =                                                                 \
      (sq_thread_trace_word_event_reg & ~SQ_THREAD_TRACE_WORD_EVENT_SH_ID_MASK) |                  \
      (sh_id << SQ_THREAD_TRACE_WORD_EVENT_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_SET_STAGE__VI(sq_thread_trace_word_event_reg, stage)            \
  sq_thread_trace_word_event_reg =                                                                 \
      (sq_thread_trace_word_event_reg & ~SQ_THREAD_TRACE_WORD_EVENT_STAGE_MASK) |                  \
      (stage << SQ_THREAD_TRACE_WORD_EVENT_STAGE_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_SET_TIME_DELTA__VI(sq_thread_trace_word_event_reg, time_delta)  \
  sq_thread_trace_word_event_reg =                                                                 \
      (sq_thread_trace_word_event_reg & ~SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_MASK) |             \
      (time_delta << SQ_THREAD_TRACE_WORD_EVENT_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_EVENT_SET_TOKEN_TYPE__VI(sq_thread_trace_word_event_reg, token_type)  \
  sq_thread_trace_word_event_reg =                                                                 \
      (sq_thread_trace_word_event_reg & ~SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_MASK) |             \
      (token_type << SQ_THREAD_TRACE_WORD_EVENT_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_DEFAULT__VI 0x0000cdcd
#define SQ_THREAD_TRACE_WORD_INST_GET_INST_TYPE__VI(sq_thread_trace_word_inst)                     \
  ((sq_thread_trace_word_inst & SQ_THREAD_TRACE_WORD_INST_INST_TYPE_MASK) >>                       \
   SQ_THREAD_TRACE_WORD_INST_INST_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_GET_SIMD_ID__VI(sq_thread_trace_word_inst)                       \
  ((sq_thread_trace_word_inst & SQ_THREAD_TRACE_WORD_INST_SIMD_ID_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_INST_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_GET_TIME_DELTA__VI(sq_thread_trace_word_inst)                    \
  ((sq_thread_trace_word_inst & SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_MASK) >>                      \
   SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_GET_TOKEN_TYPE__VI(sq_thread_trace_word_inst)                    \
  ((sq_thread_trace_word_inst & SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_MASK) >>                      \
   SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_GET_WAVE_ID__VI(sq_thread_trace_word_inst)                       \
  ((sq_thread_trace_word_inst & SQ_THREAD_TRACE_WORD_INST_WAVE_ID_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_INST_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_INST_TYPE_MASK__SI__CI 0x0000f000
#define SQ_THREAD_TRACE_WORD_INST_INST_TYPE_MASK__VI 0x0000f800
#define SQ_THREAD_TRACE_WORD_INST_INST_TYPE_SHIFT__SI__CI 12
#define SQ_THREAD_TRACE_WORD_INST_INST_TYPE_SHIFT__VI 11
#define SQ_THREAD_TRACE_WORD_INST_INST_TYPE_SIZE__SI__CI 4
#define SQ_THREAD_TRACE_WORD_INST_INST_TYPE_SIZE__VI 5
#define SQ_THREAD_TRACE_WORD_INST_MASK__VI                                                         \
  (SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_MASK | SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_MASK |         \
   SQ_THREAD_TRACE_WORD_INST_WAVE_ID_MASK | SQ_THREAD_TRACE_WORD_INST_SIMD_ID_MASK |               \
   SQ_THREAD_TRACE_WORD_INST_INST_TYPE_MASK)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_DEFAULT__VI 0xcdcd05cd
#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_GET_PC_LO__VI(sq_thread_trace_word_inst_pc_1_of_2)     \
  ((sq_thread_trace_word_inst_pc_1_of_2 & SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_MASK) >>       \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_GET_SIMD_ID__VI(sq_thread_trace_word_inst_pc_1_of_2)   \
  ((sq_thread_trace_word_inst_pc_1_of_2 & SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_MASK) >>     \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_GET_TIME_DELTA__VI(                                    \
    sq_thread_trace_word_inst_pc_1_of_2)                                                           \
  ((sq_thread_trace_word_inst_pc_1_of_2 & SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_MASK) >>  \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_GET_TOKEN_TYPE__VI(                                    \
    sq_thread_trace_word_inst_pc_1_of_2)                                                           \
  ((sq_thread_trace_word_inst_pc_1_of_2 & SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_MASK) >>  \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_GET_WAVE_ID__VI(sq_thread_trace_word_inst_pc_1_of_2)   \
  ((sq_thread_trace_word_inst_pc_1_of_2 & SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_MASK) >>     \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_MASK__VI                                               \
  (SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_MASK |                                           \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_MASK |                                           \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_MASK |                                              \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_MASK |                                              \
   SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_MASK)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SET_PC_LO__VI(sq_thread_trace_word_inst_pc_1_of_2_reg, \
                                                          pc_lo)                                   \
  sq_thread_trace_word_inst_pc_1_of_2_reg = (sq_thread_trace_word_inst_pc_1_of_2_reg &             \
                                             ~SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_MASK) |    \
      (pc_lo << SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_PC_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SET_SIMD_ID__VI(                                       \
    sq_thread_trace_word_inst_pc_1_of_2_reg, simd_id)                                              \
  sq_thread_trace_word_inst_pc_1_of_2_reg = (sq_thread_trace_word_inst_pc_1_of_2_reg &             \
                                             ~SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_MASK) |  \
      (simd_id << SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SET_TIME_DELTA__VI(                                    \
    sq_thread_trace_word_inst_pc_1_of_2_reg, time_delta)                                           \
  sq_thread_trace_word_inst_pc_1_of_2_reg =                                                        \
      (sq_thread_trace_word_inst_pc_1_of_2_reg &                                                   \
       ~SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_MASK) |                                     \
      (time_delta << SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SET_TOKEN_TYPE__VI(                                    \
    sq_thread_trace_word_inst_pc_1_of_2_reg, token_type)                                           \
  sq_thread_trace_word_inst_pc_1_of_2_reg =                                                        \
      (sq_thread_trace_word_inst_pc_1_of_2_reg &                                                   \
       ~SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_MASK) |                                     \
      (token_type << SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_SET_WAVE_ID__VI(                                       \
    sq_thread_trace_word_inst_pc_1_of_2_reg, wave_id)                                              \
  sq_thread_trace_word_inst_pc_1_of_2_reg = (sq_thread_trace_word_inst_pc_1_of_2_reg &             \
                                             ~SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_MASK) |  \
      (wave_id << SQ_THREAD_TRACE_WORD_INST_PC_1_OF_2_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_DEFAULT__VI 0x00cdcdcd
#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_GET_PC_HI__VI(sq_thread_trace_word_inst_pc_2_of_2)     \
  ((sq_thread_trace_word_inst_pc_2_of_2 & SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_MASK) >>       \
   SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_MASK__VI                                               \
  (SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_MASK)

#define SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_SET_PC_HI__VI(sq_thread_trace_word_inst_pc_2_of_2_reg, \
                                                          pc_hi)                                   \
  sq_thread_trace_word_inst_pc_2_of_2_reg = (sq_thread_trace_word_inst_pc_2_of_2_reg &             \
                                             ~SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_MASK) |    \
      (pc_hi << SQ_THREAD_TRACE_WORD_INST_PC_2_OF_2_PC_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_SET_INST_TYPE__VI(sq_thread_trace_word_inst_reg, inst_type)      \
  sq_thread_trace_word_inst_reg =                                                                  \
      (sq_thread_trace_word_inst_reg & ~SQ_THREAD_TRACE_WORD_INST_INST_TYPE_MASK) |                \
      (inst_type << SQ_THREAD_TRACE_WORD_INST_INST_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_SET_SIMD_ID__VI(sq_thread_trace_word_inst_reg, simd_id)          \
  sq_thread_trace_word_inst_reg =                                                                  \
      (sq_thread_trace_word_inst_reg & ~SQ_THREAD_TRACE_WORD_INST_SIMD_ID_MASK) |                  \
      (simd_id << SQ_THREAD_TRACE_WORD_INST_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_SET_TIME_DELTA__VI(sq_thread_trace_word_inst_reg, time_delta)    \
  sq_thread_trace_word_inst_reg =                                                                  \
      (sq_thread_trace_word_inst_reg & ~SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_MASK) |               \
      (time_delta << SQ_THREAD_TRACE_WORD_INST_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_SET_TOKEN_TYPE__VI(sq_thread_trace_word_inst_reg, token_type)    \
  sq_thread_trace_word_inst_reg =                                                                  \
      (sq_thread_trace_word_inst_reg & ~SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_MASK) |               \
      (token_type << SQ_THREAD_TRACE_WORD_INST_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_SET_WAVE_ID__VI(sq_thread_trace_word_inst_reg, wave_id)          \
  sq_thread_trace_word_inst_reg =                                                                  \
      (sq_thread_trace_word_inst_reg & ~SQ_THREAD_TRACE_WORD_INST_WAVE_ID_MASK) |                  \
      (wave_id << SQ_THREAD_TRACE_WORD_INST_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_GET_CU_ID__VI(                                   \
    sq_thread_trace_word_inst_userdata_1_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_1_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_MASK) >>                                       \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_GET_DATA_LO__VI(                                 \
    sq_thread_trace_word_inst_userdata_1_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_1_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_MASK) >>                                     \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_GET_SH_ID__VI(                                   \
    sq_thread_trace_word_inst_userdata_1_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_1_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_MASK) >>                                       \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_GET_SIMD_ID__VI(                                 \
    sq_thread_trace_word_inst_userdata_1_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_1_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_MASK) >>                                     \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_GET_TIME_DELTA__VI(                              \
    sq_thread_trace_word_inst_userdata_1_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_1_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_MASK) >>                                  \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_GET_TOKEN_TYPE__VI(                              \
    sq_thread_trace_word_inst_userdata_1_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_1_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_MASK) >>                                  \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_GET_WAVE_ID__VI(                                 \
    sq_thread_trace_word_inst_userdata_1_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_1_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_MASK) >>                                     \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_MASK__VI                                         \
  (SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_MASK |                                     \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_MASK |                                     \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_MASK |                                          \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_MASK |                                          \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_MASK |                                        \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_MASK |                                        \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_MASK)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SET_CU_ID__VI(                                   \
    sq_thread_trace_word_inst_userdata_1_of_2_reg, cu_id)                                          \
  sq_thread_trace_word_inst_userdata_1_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_1_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_MASK) |                                    \
      (cu_id << SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SET_DATA_LO__VI(                                 \
    sq_thread_trace_word_inst_userdata_1_of_2_reg, data_lo)                                        \
  sq_thread_trace_word_inst_userdata_1_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_1_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_MASK) |                                  \
      (data_lo << SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_DATA_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SET_SH_ID__VI(                                   \
    sq_thread_trace_word_inst_userdata_1_of_2_reg, sh_id)                                          \
  sq_thread_trace_word_inst_userdata_1_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_1_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_MASK) |                                    \
      (sh_id << SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SET_SIMD_ID__VI(                                 \
    sq_thread_trace_word_inst_userdata_1_of_2_reg, simd_id)                                        \
  sq_thread_trace_word_inst_userdata_1_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_1_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_MASK) |                                  \
      (simd_id << SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SET_TIME_DELTA__VI(                              \
    sq_thread_trace_word_inst_userdata_1_of_2_reg, time_delta)                                     \
  sq_thread_trace_word_inst_userdata_1_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_1_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_MASK) |                               \
      (time_delta << SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SET_TOKEN_TYPE__VI(                              \
    sq_thread_trace_word_inst_userdata_1_of_2_reg, token_type)                                     \
  sq_thread_trace_word_inst_userdata_1_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_1_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_MASK) |                               \
      (token_type << SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_SET_WAVE_ID__VI(                                 \
    sq_thread_trace_word_inst_userdata_1_of_2_reg, wave_id)                                        \
  sq_thread_trace_word_inst_userdata_1_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_1_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_MASK) |                                  \
      (wave_id << SQ_THREAD_TRACE_WORD_INST_USERDATA_1_OF_2_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DEFAULT__VI 0x0000cdcd
#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_GET_DATA_HI__VI(                                 \
    sq_thread_trace_word_inst_userdata_2_of_2)                                                     \
  ((sq_thread_trace_word_inst_userdata_2_of_2 &                                                    \
    SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_MASK) >>                                     \
   SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_MASK__VI                                         \
  (SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_MASK)

#define SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_SET_DATA_HI__VI(                                 \
    sq_thread_trace_word_inst_userdata_2_of_2_reg, data_hi)                                        \
  sq_thread_trace_word_inst_userdata_2_of_2_reg =                                                  \
      (sq_thread_trace_word_inst_userdata_2_of_2_reg &                                             \
       ~SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_MASK) |                                  \
      (data_hi << SQ_THREAD_TRACE_WORD_INST_USERDATA_2_OF_2_DATA_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_ISSUE_DEFAULT__VI 0x0dcdcd4d
#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST0__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST0_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST0_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST1__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST1_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST1_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST2__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST2_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST2_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST3__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST3_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST3_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST4__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST4_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST4_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST5__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST5_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST5_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST6__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST6_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST6_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST7__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST7_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST7_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST8__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST8_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST8_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_INST9__VI(sq_thread_trace_word_issue)                       \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_INST9_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_ISSUE_INST9_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_SIMD_ID__VI(sq_thread_trace_word_issue)                     \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_MASK) >>                       \
   SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_TIME_DELTA__VI(sq_thread_trace_word_issue)                  \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_MASK) >>                    \
   SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_GET_TOKEN_TYPE__VI(sq_thread_trace_word_issue)                  \
  ((sq_thread_trace_word_issue & SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_MASK) >>                    \
   SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_MASK__VI                                                        \
  (SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_MASK | SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_MASK |       \
   SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_MASK | SQ_THREAD_TRACE_WORD_ISSUE_INST0_MASK |               \
   SQ_THREAD_TRACE_WORD_ISSUE_INST1_MASK | SQ_THREAD_TRACE_WORD_ISSUE_INST2_MASK |                 \
   SQ_THREAD_TRACE_WORD_ISSUE_INST3_MASK | SQ_THREAD_TRACE_WORD_ISSUE_INST4_MASK |                 \
   SQ_THREAD_TRACE_WORD_ISSUE_INST5_MASK | SQ_THREAD_TRACE_WORD_ISSUE_INST6_MASK |                 \
   SQ_THREAD_TRACE_WORD_ISSUE_INST7_MASK | SQ_THREAD_TRACE_WORD_ISSUE_INST8_MASK |                 \
   SQ_THREAD_TRACE_WORD_ISSUE_INST9_MASK)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST0__VI(sq_thread_trace_word_issue_reg, inst0)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST0_MASK) |                  \
      (inst0 << SQ_THREAD_TRACE_WORD_ISSUE_INST0_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST1__VI(sq_thread_trace_word_issue_reg, inst1)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST1_MASK) |                  \
      (inst1 << SQ_THREAD_TRACE_WORD_ISSUE_INST1_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST2__VI(sq_thread_trace_word_issue_reg, inst2)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST2_MASK) |                  \
      (inst2 << SQ_THREAD_TRACE_WORD_ISSUE_INST2_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST3__VI(sq_thread_trace_word_issue_reg, inst3)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST3_MASK) |                  \
      (inst3 << SQ_THREAD_TRACE_WORD_ISSUE_INST3_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST4__VI(sq_thread_trace_word_issue_reg, inst4)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST4_MASK) |                  \
      (inst4 << SQ_THREAD_TRACE_WORD_ISSUE_INST4_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST5__VI(sq_thread_trace_word_issue_reg, inst5)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST5_MASK) |                  \
      (inst5 << SQ_THREAD_TRACE_WORD_ISSUE_INST5_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST6__VI(sq_thread_trace_word_issue_reg, inst6)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST6_MASK) |                  \
      (inst6 << SQ_THREAD_TRACE_WORD_ISSUE_INST6_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST7__VI(sq_thread_trace_word_issue_reg, inst7)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST7_MASK) |                  \
      (inst7 << SQ_THREAD_TRACE_WORD_ISSUE_INST7_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST8__VI(sq_thread_trace_word_issue_reg, inst8)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST8_MASK) |                  \
      (inst8 << SQ_THREAD_TRACE_WORD_ISSUE_INST8_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_INST9__VI(sq_thread_trace_word_issue_reg, inst9)            \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_INST9_MASK) |                  \
      (inst9 << SQ_THREAD_TRACE_WORD_ISSUE_INST9_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_SIMD_ID__VI(sq_thread_trace_word_issue_reg, simd_id)        \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_MASK) |                \
      (simd_id << SQ_THREAD_TRACE_WORD_ISSUE_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_TIME_DELTA__VI(sq_thread_trace_word_issue_reg, time_delta)  \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_MASK) |             \
      (time_delta << SQ_THREAD_TRACE_WORD_ISSUE_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_ISSUE_SET_TOKEN_TYPE__VI(sq_thread_trace_word_issue_reg, token_type)  \
  sq_thread_trace_word_issue_reg =                                                                 \
      (sq_thread_trace_word_issue_reg & ~SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_MASK) |             \
      (token_type << SQ_THREAD_TRACE_WORD_ISSUE_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_MISC_DEFAULT__VI 0x0000cdcd
#define SQ_THREAD_TRACE_WORD_MISC_GET_MISC_TOKEN_TYPE__VI(sq_thread_trace_word_misc)               \
  ((sq_thread_trace_word_misc & SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_MASK) >>                 \
   SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_GET_SH_ID__VI(sq_thread_trace_word_misc)                         \
  ((sq_thread_trace_word_misc & SQ_THREAD_TRACE_WORD_MISC_SH_ID_MASK) >>                           \
   SQ_THREAD_TRACE_WORD_MISC_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_GET_TIME_DELTA__VI(sq_thread_trace_word_misc)                    \
  ((sq_thread_trace_word_misc & SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_MASK) >>                      \
   SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_GET_TOKEN_TYPE__VI(sq_thread_trace_word_misc)                    \
  ((sq_thread_trace_word_misc & SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_MASK) >>                      \
   SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_MASK__VI                                                         \
  (SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_MASK | SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_MASK |         \
   SQ_THREAD_TRACE_WORD_MISC_SH_ID_MASK | SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_MASK)

#define SQ_THREAD_TRACE_WORD_MISC_SET_MISC_TOKEN_TYPE__VI(sq_thread_trace_word_misc_reg,           \
                                                          misc_token_type)                         \
  sq_thread_trace_word_misc_reg =                                                                  \
      (sq_thread_trace_word_misc_reg & ~SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_MASK) |          \
      (misc_token_type << SQ_THREAD_TRACE_WORD_MISC_MISC_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_SET_SH_ID__VI(sq_thread_trace_word_misc_reg, sh_id)              \
  sq_thread_trace_word_misc_reg =                                                                  \
      (sq_thread_trace_word_misc_reg & ~SQ_THREAD_TRACE_WORD_MISC_SH_ID_MASK) |                    \
      (sh_id << SQ_THREAD_TRACE_WORD_MISC_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_SET_TIME_DELTA__VI(sq_thread_trace_word_misc_reg, time_delta)    \
  sq_thread_trace_word_misc_reg =                                                                  \
      (sq_thread_trace_word_misc_reg & ~SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_MASK) |               \
      (time_delta << SQ_THREAD_TRACE_WORD_MISC_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_MISC_SET_TOKEN_TYPE__VI(sq_thread_trace_word_misc_reg, token_type)    \
  sq_thread_trace_word_misc_reg =                                                                  \
      (sq_thread_trace_word_misc_reg & ~SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_MASK) |               \
      (token_type << SQ_THREAD_TRACE_WORD_MISC_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_GET_CNTR0__VI(sq_thread_trace_word_perf_1_of_2)           \
  ((sq_thread_trace_word_perf_1_of_2 & SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_MASK) >>             \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_GET_CNTR1_LO__VI(sq_thread_trace_word_perf_1_of_2)        \
  ((sq_thread_trace_word_perf_1_of_2 & SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_MASK) >>          \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_GET_CNTR_BANK__VI(sq_thread_trace_word_perf_1_of_2)       \
  ((sq_thread_trace_word_perf_1_of_2 & SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_MASK) >>         \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_GET_CU_ID__VI(sq_thread_trace_word_perf_1_of_2)           \
  ((sq_thread_trace_word_perf_1_of_2 & SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_MASK) >>             \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_GET_SH_ID__VI(sq_thread_trace_word_perf_1_of_2)           \
  ((sq_thread_trace_word_perf_1_of_2 & SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_MASK) >>             \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_GET_TIME_DELTA__VI(sq_thread_trace_word_perf_1_of_2)      \
  ((sq_thread_trace_word_perf_1_of_2 & SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_MASK) >>        \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_GET_TOKEN_TYPE__VI(sq_thread_trace_word_perf_1_of_2)      \
  ((sq_thread_trace_word_perf_1_of_2 & SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_MASK) >>        \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_MASK__VI                                                  \
  (SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_MASK |                                              \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_MASK |                                              \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_MASK | SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_MASK |     \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_MASK | SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_MASK | \
   SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_MASK)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SET_CNTR0__VI(sq_thread_trace_word_perf_1_of_2_reg,       \
                                                       cntr0)                                      \
  sq_thread_trace_word_perf_1_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_MASK) |      \
      (cntr0 << SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR0_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SET_CNTR1_LO__VI(sq_thread_trace_word_perf_1_of_2_reg,    \
                                                          cntr1_lo)                                \
  sq_thread_trace_word_perf_1_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_MASK) |   \
      (cntr1_lo << SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR1_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SET_CNTR_BANK__VI(sq_thread_trace_word_perf_1_of_2_reg,   \
                                                           cntr_bank)                              \
  sq_thread_trace_word_perf_1_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_MASK) |  \
      (cntr_bank << SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CNTR_BANK_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SET_CU_ID__VI(sq_thread_trace_word_perf_1_of_2_reg,       \
                                                       cu_id)                                      \
  sq_thread_trace_word_perf_1_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_MASK) |      \
      (cu_id << SQ_THREAD_TRACE_WORD_PERF_1_OF_2_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SET_SH_ID__VI(sq_thread_trace_word_perf_1_of_2_reg,       \
                                                       sh_id)                                      \
  sq_thread_trace_word_perf_1_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_MASK) |      \
      (sh_id << SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SET_TIME_DELTA__VI(sq_thread_trace_word_perf_1_of_2_reg,  \
                                                            time_delta)                            \
  sq_thread_trace_word_perf_1_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_MASK) | \
      (time_delta << SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_1_OF_2_SET_TOKEN_TYPE__VI(sq_thread_trace_word_perf_1_of_2_reg,  \
                                                            token_type)                            \
  sq_thread_trace_word_perf_1_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_MASK) | \
      (token_type << SQ_THREAD_TRACE_WORD_PERF_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_GET_CNTR1_HI__VI(sq_thread_trace_word_perf_2_of_2)        \
  ((sq_thread_trace_word_perf_2_of_2 & SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_MASK) >>          \
   SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_GET_CNTR2__VI(sq_thread_trace_word_perf_2_of_2)           \
  ((sq_thread_trace_word_perf_2_of_2 & SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_MASK) >>             \
   SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_GET_CNTR3__VI(sq_thread_trace_word_perf_2_of_2)           \
  ((sq_thread_trace_word_perf_2_of_2 & SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_MASK) >>             \
   SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_MASK__VI                                                  \
  (SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_MASK | SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_MASK |  \
   SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_MASK)

#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_SET_CNTR1_HI__VI(sq_thread_trace_word_perf_2_of_2_reg,    \
                                                          cntr1_hi)                                \
  sq_thread_trace_word_perf_2_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_2_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_MASK) |   \
      (cntr1_hi << SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR1_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_SET_CNTR2__VI(sq_thread_trace_word_perf_2_of_2_reg,       \
                                                       cntr2)                                      \
  sq_thread_trace_word_perf_2_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_2_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_MASK) |      \
      (cntr2 << SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR2_SHIFT)

#define SQ_THREAD_TRACE_WORD_PERF_2_OF_2_SET_CNTR3__VI(sq_thread_trace_word_perf_2_of_2_reg,       \
                                                       cntr3)                                      \
  sq_thread_trace_word_perf_2_of_2_reg =                                                           \
      (sq_thread_trace_word_perf_2_of_2_reg & ~SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_MASK) |      \
      (cntr3 << SQ_THREAD_TRACE_WORD_PERF_2_OF_2_CNTR3_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_ME_ID__VI(sq_thread_trace_word_reg_1_of_2)             \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_MASK) >>               \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_PIPE_ID__VI(sq_thread_trace_word_reg_1_of_2)           \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_MASK) >>             \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_REG_ADDR__VI(sq_thread_trace_word_reg_1_of_2)          \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_MASK) >>            \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_REG_DROPPED_PREV__VI(sq_thread_trace_word_reg_1_of_2)  \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_MASK) >>    \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_REG_OP__VI(sq_thread_trace_word_reg_1_of_2)            \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_MASK) >>              \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_REG_PRIV__VI(sq_thread_trace_word_reg_1_of_2)          \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_MASK) >>            \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_REG_TYPE__VI(sq_thread_trace_word_reg_1_of_2)          \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_MASK) >>            \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_TIME_DELTA__VI(sq_thread_trace_word_reg_1_of_2)        \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_MASK) >>          \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_GET_TOKEN_TYPE__VI(sq_thread_trace_word_reg_1_of_2)        \
  ((sq_thread_trace_word_reg_1_of_2 & SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_MASK) >>          \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_MASK__VI                                                   \
  (SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_MASK |                                               \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_MASK |                                               \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_MASK | SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_MASK |     \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_MASK |                                         \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_MASK | SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_MASK | \
   SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_MASK | SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_MASK)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_ME_ID__VI(sq_thread_trace_word_reg_1_of_2_reg, me_id)  \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_MASK) |        \
      (me_id << SQ_THREAD_TRACE_WORD_REG_1_OF_2_ME_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_PIPE_ID__VI(sq_thread_trace_word_reg_1_of_2_reg,       \
                                                        pipe_id)                                   \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_MASK) |      \
      (pipe_id << SQ_THREAD_TRACE_WORD_REG_1_OF_2_PIPE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_REG_ADDR__VI(sq_thread_trace_word_reg_1_of_2_reg,      \
                                                         reg_addr)                                 \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_MASK) |     \
      (reg_addr << SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_ADDR_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_REG_DROPPED_PREV__VI(                                  \
    sq_thread_trace_word_reg_1_of_2_reg, reg_dropped_prev)                                         \
  sq_thread_trace_word_reg_1_of_2_reg = (sq_thread_trace_word_reg_1_of_2_reg &                     \
                                         ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_MASK) | \
      (reg_dropped_prev << SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_DROPPED_PREV_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_REG_OP__VI(sq_thread_trace_word_reg_1_of_2_reg,        \
                                                       reg_op)                                     \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_MASK) |       \
      (reg_op << SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_OP_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_REG_PRIV__VI(sq_thread_trace_word_reg_1_of_2_reg,      \
                                                         reg_priv)                                 \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_MASK) |     \
      (reg_priv << SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_PRIV_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_REG_TYPE__VI(sq_thread_trace_word_reg_1_of_2_reg,      \
                                                         reg_type)                                 \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_MASK) |     \
      (reg_type << SQ_THREAD_TRACE_WORD_REG_1_OF_2_REG_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_TIME_DELTA__VI(sq_thread_trace_word_reg_1_of_2_reg,    \
                                                           time_delta)                             \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_MASK) |   \
      (time_delta << SQ_THREAD_TRACE_WORD_REG_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_1_OF_2_SET_TOKEN_TYPE__VI(sq_thread_trace_word_reg_1_of_2_reg,    \
                                                           token_type)                             \
  sq_thread_trace_word_reg_1_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_MASK) |   \
      (token_type << SQ_THREAD_TRACE_WORD_REG_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_GET_DATA__VI(sq_thread_trace_word_reg_2_of_2)              \
  ((sq_thread_trace_word_reg_2_of_2 & SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_MASK) >>                \
   SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_MASK__VI (SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_MASK)

#define SQ_THREAD_TRACE_WORD_REG_2_OF_2_SET_DATA__VI(sq_thread_trace_word_reg_2_of_2_reg, data)    \
  sq_thread_trace_word_reg_2_of_2_reg =                                                            \
      (sq_thread_trace_word_reg_2_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_MASK) |         \
      (data << SQ_THREAD_TRACE_WORD_REG_2_OF_2_DATA_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_GET_DATA_LO__VI(sq_thread_trace_word_reg_cs_1_of_2)     \
  ((sq_thread_trace_word_reg_cs_1_of_2 & SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_MASK) >>       \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_GET_ME_ID__VI(sq_thread_trace_word_reg_cs_1_of_2)       \
  ((sq_thread_trace_word_reg_cs_1_of_2 & SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_MASK) >>         \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_GET_PIPE_ID__VI(sq_thread_trace_word_reg_cs_1_of_2)     \
  ((sq_thread_trace_word_reg_cs_1_of_2 & SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_MASK) >>       \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_GET_REG_ADDR__VI(sq_thread_trace_word_reg_cs_1_of_2)    \
  ((sq_thread_trace_word_reg_cs_1_of_2 & SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_MASK) >>      \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_GET_TIME_DELTA__VI(sq_thread_trace_word_reg_cs_1_of_2)  \
  ((sq_thread_trace_word_reg_cs_1_of_2 & SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_MASK) >>    \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_GET_TOKEN_TYPE__VI(sq_thread_trace_word_reg_cs_1_of_2)  \
  ((sq_thread_trace_word_reg_cs_1_of_2 & SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_MASK) >>    \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_MASK__VI                                                \
  (SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_MASK |                                            \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_MASK |                                            \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_MASK |                                               \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_MASK |                                                 \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_MASK |                                              \
   SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_MASK)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_SET_DATA_LO__VI(sq_thread_trace_word_reg_cs_1_of_2_reg, \
                                                           data_lo)                                \
  sq_thread_trace_word_reg_cs_1_of_2_reg = (sq_thread_trace_word_reg_cs_1_of_2_reg &               \
                                            ~SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_MASK) |    \
      (data_lo << SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_DATA_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_SET_ME_ID__VI(sq_thread_trace_word_reg_cs_1_of_2_reg,   \
                                                         me_id)                                    \
  sq_thread_trace_word_reg_cs_1_of_2_reg =                                                         \
      (sq_thread_trace_word_reg_cs_1_of_2_reg & ~SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_MASK) |  \
      (me_id << SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_ME_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_SET_PIPE_ID__VI(sq_thread_trace_word_reg_cs_1_of_2_reg, \
                                                           pipe_id)                                \
  sq_thread_trace_word_reg_cs_1_of_2_reg = (sq_thread_trace_word_reg_cs_1_of_2_reg &               \
                                            ~SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_MASK) |    \
      (pipe_id << SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_PIPE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_SET_REG_ADDR__VI(                                       \
    sq_thread_trace_word_reg_cs_1_of_2_reg, reg_addr)                                              \
  sq_thread_trace_word_reg_cs_1_of_2_reg = (sq_thread_trace_word_reg_cs_1_of_2_reg &               \
                                            ~SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_MASK) |   \
      (reg_addr << SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_REG_ADDR_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_SET_TIME_DELTA__VI(                                     \
    sq_thread_trace_word_reg_cs_1_of_2_reg, time_delta)                                            \
  sq_thread_trace_word_reg_cs_1_of_2_reg = (sq_thread_trace_word_reg_cs_1_of_2_reg &               \
                                            ~SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_MASK) | \
      (time_delta << SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_SET_TOKEN_TYPE__VI(                                     \
    sq_thread_trace_word_reg_cs_1_of_2_reg, token_type)                                            \
  sq_thread_trace_word_reg_cs_1_of_2_reg = (sq_thread_trace_word_reg_cs_1_of_2_reg &               \
                                            ~SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_MASK) | \
      (token_type << SQ_THREAD_TRACE_WORD_REG_CS_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DEFAULT__VI 0x0000cdcd
#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_GET_DATA_HI__VI(sq_thread_trace_word_reg_cs_2_of_2)     \
  ((sq_thread_trace_word_reg_cs_2_of_2 & SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_MASK) >>       \
   SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_MASK__VI                                                \
  (SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_MASK)

#define SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_SET_DATA_HI__VI(sq_thread_trace_word_reg_cs_2_of_2_reg, \
                                                           data_hi)                                \
  sq_thread_trace_word_reg_cs_2_of_2_reg = (sq_thread_trace_word_reg_cs_2_of_2_reg &               \
                                            ~SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_MASK) |    \
      (data_hi << SQ_THREAD_TRACE_WORD_REG_CS_2_OF_2_DATA_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_DEFAULT__VI 0xcdcd000d
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_GET_TIME_LO__VI(                                     \
    sq_thread_trace_word_timestamp_1_of_2)                                                         \
  ((sq_thread_trace_word_timestamp_1_of_2 & SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_MASK) >> \
   SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_GET_TOKEN_TYPE__VI(                                  \
    sq_thread_trace_word_timestamp_1_of_2)                                                         \
  ((sq_thread_trace_word_timestamp_1_of_2 &                                                        \
    SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_MASK) >>                                      \
   SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_MASK__VI                                             \
  (SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_MASK |                                         \
   SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_MASK)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_SET_TIME_LO__VI(                                     \
    sq_thread_trace_word_timestamp_1_of_2_reg, time_lo)                                            \
  sq_thread_trace_word_timestamp_1_of_2_reg =                                                      \
      (sq_thread_trace_word_timestamp_1_of_2_reg &                                                 \
       ~SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_MASK) |                                      \
      (time_lo << SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TIME_LO_SHIFT)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_SET_TOKEN_TYPE__VI(                                  \
    sq_thread_trace_word_timestamp_1_of_2_reg, token_type)                                         \
  sq_thread_trace_word_timestamp_1_of_2_reg =                                                      \
      (sq_thread_trace_word_timestamp_1_of_2_reg &                                                 \
       ~SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_MASK) |                                   \
      (token_type << SQ_THREAD_TRACE_WORD_TIMESTAMP_1_OF_2_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_GET_TIME_HI__VI(                                     \
    sq_thread_trace_word_timestamp_2_of_2)                                                         \
  ((sq_thread_trace_word_timestamp_2_of_2 & SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_MASK) >> \
   SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_MASK__VI                                             \
  (SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_MASK)

#define SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_SET_TIME_HI__VI(                                     \
    sq_thread_trace_word_timestamp_2_of_2_reg, time_hi)                                            \
  sq_thread_trace_word_timestamp_2_of_2_reg =                                                      \
      (sq_thread_trace_word_timestamp_2_of_2_reg &                                                 \
       ~SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_MASK) |                                      \
      (time_hi << SQ_THREAD_TRACE_WORD_TIMESTAMP_2_OF_2_TIME_HI_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_WAVE_DEFAULT__VI 0x0000cdcd
#define SQ_THREAD_TRACE_WORD_WAVE_GET_CU_ID__VI(sq_thread_trace_word_wave)                         \
  ((sq_thread_trace_word_wave & SQ_THREAD_TRACE_WORD_WAVE_CU_ID_MASK) >>                           \
   SQ_THREAD_TRACE_WORD_WAVE_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_GET_SH_ID__VI(sq_thread_trace_word_wave)                         \
  ((sq_thread_trace_word_wave & SQ_THREAD_TRACE_WORD_WAVE_SH_ID_MASK) >>                           \
   SQ_THREAD_TRACE_WORD_WAVE_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_GET_SIMD_ID__VI(sq_thread_trace_word_wave)                       \
  ((sq_thread_trace_word_wave & SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_GET_TIME_DELTA__VI(sq_thread_trace_word_wave)                    \
  ((sq_thread_trace_word_wave & SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_MASK) >>                      \
   SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_GET_TOKEN_TYPE__VI(sq_thread_trace_word_wave)                    \
  ((sq_thread_trace_word_wave & SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_MASK) >>                      \
   SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_GET_WAVE_ID__VI(sq_thread_trace_word_wave)                       \
  ((sq_thread_trace_word_wave & SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_MASK) >>                         \
   SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_MASK__VI                                                         \
  (SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_MASK | SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_MASK |         \
   SQ_THREAD_TRACE_WORD_WAVE_SH_ID_MASK | SQ_THREAD_TRACE_WORD_WAVE_CU_ID_MASK |                   \
   SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_MASK | SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_MASK)

#define SQ_THREAD_TRACE_WORD_WAVE_SET_CU_ID__VI(sq_thread_trace_word_wave_reg, cu_id)              \
  sq_thread_trace_word_wave_reg =                                                                  \
      (sq_thread_trace_word_wave_reg & ~SQ_THREAD_TRACE_WORD_WAVE_CU_ID_MASK) |                    \
      (cu_id << SQ_THREAD_TRACE_WORD_WAVE_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_SET_SH_ID__VI(sq_thread_trace_word_wave_reg, sh_id)              \
  sq_thread_trace_word_wave_reg =                                                                  \
      (sq_thread_trace_word_wave_reg & ~SQ_THREAD_TRACE_WORD_WAVE_SH_ID_MASK) |                    \
      (sh_id << SQ_THREAD_TRACE_WORD_WAVE_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_SET_SIMD_ID__VI(sq_thread_trace_word_wave_reg, simd_id)          \
  sq_thread_trace_word_wave_reg =                                                                  \
      (sq_thread_trace_word_wave_reg & ~SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_MASK) |                  \
      (simd_id << SQ_THREAD_TRACE_WORD_WAVE_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_SET_TIME_DELTA__VI(sq_thread_trace_word_wave_reg, time_delta)    \
  sq_thread_trace_word_wave_reg =                                                                  \
      (sq_thread_trace_word_wave_reg & ~SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_MASK) |               \
      (time_delta << SQ_THREAD_TRACE_WORD_WAVE_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_SET_TOKEN_TYPE__VI(sq_thread_trace_word_wave_reg, token_type)    \
  sq_thread_trace_word_wave_reg =                                                                  \
      (sq_thread_trace_word_wave_reg & ~SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_MASK) |               \
      (token_type << SQ_THREAD_TRACE_WORD_WAVE_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_SET_WAVE_ID__VI(sq_thread_trace_word_wave_reg, wave_id)          \
  sq_thread_trace_word_wave_reg =                                                                  \
      (sq_thread_trace_word_wave_reg & ~SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_MASK) |                  \
      (wave_id << SQ_THREAD_TRACE_WORD_WAVE_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WORD_WAVE_START_DEFAULT__VI 0xcdcdcdcd
#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_COUNT__VI(sq_thread_trace_word_wave_start)             \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_MASK) >>               \
   SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_CU_ID__VI(sq_thread_trace_word_wave_start)             \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_MASK) >>               \
   SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_DISPATCHER__VI(sq_thread_trace_word_wave_start)        \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_MASK) >>          \
   SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_SH_ID__VI(sq_thread_trace_word_wave_start)             \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_MASK) >>               \
   SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_SIMD_ID__VI(sq_thread_trace_word_wave_start)           \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_MASK) >>             \
   SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_TG_ID__VI(sq_thread_trace_word_wave_start)             \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_MASK) >>               \
   SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_TIME_DELTA__VI(sq_thread_trace_word_wave_start)        \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_MASK) >>          \
   SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_TOKEN_TYPE__VI(sq_thread_trace_word_wave_start)        \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_MASK) >>          \
   SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_VS_NO_ALLOC_OR_GROUPED__VI(                            \
    sq_thread_trace_word_wave_start)                                                               \
  ((sq_thread_trace_word_wave_start &                                                              \
    SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_MASK) >>                                \
   SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_GET_WAVE_ID__VI(sq_thread_trace_word_wave_start)           \
  ((sq_thread_trace_word_wave_start & SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_MASK) >>             \
   SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_MASK__VI                                                   \
  (SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_MASK |                                               \
   SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_MASK | SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_MASK |  \
   SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_MASK | SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_MASK |     \
   SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_MASK |                                                  \
   SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_MASK |                                               \
   SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_MASK |                                   \
   SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_MASK | SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_MASK)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_COUNT__VI(sq_thread_trace_word_wave_start_reg, count)  \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_MASK) |        \
      (count << SQ_THREAD_TRACE_WORD_WAVE_START_COUNT_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_CU_ID__VI(sq_thread_trace_word_wave_start_reg, cu_id)  \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_MASK) |        \
      (cu_id << SQ_THREAD_TRACE_WORD_WAVE_START_CU_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_DISPATCHER__VI(sq_thread_trace_word_wave_start_reg,    \
                                                           dispatcher)                             \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_MASK) |   \
      (dispatcher << SQ_THREAD_TRACE_WORD_WAVE_START_DISPATCHER_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_SH_ID__VI(sq_thread_trace_word_wave_start_reg, sh_id)  \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_MASK) |        \
      (sh_id << SQ_THREAD_TRACE_WORD_WAVE_START_SH_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_SIMD_ID__VI(sq_thread_trace_word_wave_start_reg,       \
                                                        simd_id)                                   \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_MASK) |      \
      (simd_id << SQ_THREAD_TRACE_WORD_WAVE_START_SIMD_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_TG_ID__VI(sq_thread_trace_word_wave_start_reg, tg_id)  \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_MASK) |        \
      (tg_id << SQ_THREAD_TRACE_WORD_WAVE_START_TG_ID_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_TIME_DELTA__VI(sq_thread_trace_word_wave_start_reg,    \
                                                           time_delta)                             \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_MASK) |   \
      (time_delta << SQ_THREAD_TRACE_WORD_WAVE_START_TIME_DELTA_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_TOKEN_TYPE__VI(sq_thread_trace_word_wave_start_reg,    \
                                                           token_type)                             \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_MASK) |   \
      (token_type << SQ_THREAD_TRACE_WORD_WAVE_START_TOKEN_TYPE_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_VS_NO_ALLOC_OR_GROUPED__VI(                            \
    sq_thread_trace_word_wave_start_reg, vs_no_alloc_or_grouped)                                   \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg &                                                       \
       ~SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_MASK) |                             \
      (vs_no_alloc_or_grouped << SQ_THREAD_TRACE_WORD_WAVE_START_VS_NO_ALLOC_OR_GROUPED_SHIFT)

#define SQ_THREAD_TRACE_WORD_WAVE_START_SET_WAVE_ID__VI(sq_thread_trace_word_wave_start_reg,       \
                                                        wave_id)                                   \
  sq_thread_trace_word_wave_start_reg =                                                            \
      (sq_thread_trace_word_wave_start_reg & ~SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_MASK) |      \
      (wave_id << SQ_THREAD_TRACE_WORD_WAVE_START_WAVE_ID_SHIFT)

#define SQ_THREAD_TRACE_WPTR_DEFAULT__SI__CI 0x00000000
#define SQ_THREAD_TRACE_WPTR_DEFAULT__VI 0x0dcdcdcd
#define SQ_THREAD_TRACE_WPTR_GET_READ_OFFSET__VI(sq_thread_trace_wptr)                             \
  ((sq_thread_trace_wptr & SQ_THREAD_TRACE_WPTR_READ_OFFSET_MASK) >>                               \
   SQ_THREAD_TRACE_WPTR_READ_OFFSET_SHIFT)

#define SQ_THREAD_TRACE_WPTR_GET_WPTR__VI(sq_thread_trace_wptr)                                    \
  ((sq_thread_trace_wptr & SQ_THREAD_TRACE_WPTR_WPTR_MASK) >> SQ_THREAD_TRACE_WPTR_WPTR_SHIFT)

#define SQ_THREAD_TRACE_WPTR_MASK__VI                                                              \
  (SQ_THREAD_TRACE_WPTR_WPTR_MASK | SQ_THREAD_TRACE_WPTR_READ_OFFSET_MASK)

#define SQ_THREAD_TRACE_WPTR_SET_READ_OFFSET__VI(sq_thread_trace_wptr_reg, read_offset)            \
  sq_thread_trace_wptr_reg = (sq_thread_trace_wptr_reg & ~SQ_THREAD_TRACE_WPTR_READ_OFFSET_MASK) | \
      (read_offset << SQ_THREAD_TRACE_WPTR_READ_OFFSET_SHIFT)

#define SQ_THREAD_TRACE_WPTR_SET_WPTR__VI(sq_thread_trace_wptr_reg, wptr)                          \
  sq_thread_trace_wptr_reg = (sq_thread_trace_wptr_reg & ~SQ_THREAD_TRACE_WPTR_WPTR_MASK) |        \
      (wptr << SQ_THREAD_TRACE_WPTR_WPTR_SHIFT)

#define SQ_TIME_HI_GET_TIME__VI(sq_time_hi)                                                        \
  ((sq_time_hi & SQ_TIME_HI_TIME_MASK) >> SQ_TIME_HI_TIME_SHIFT)

#define SQ_TIME_HI_MASK__VI (SQ_TIME_HI_TIME_MASK)

#define SQ_TIME_HI_SET_TIME__VI(sq_time_hi_reg, time)                                              \
  sq_time_hi_reg = (sq_time_hi_reg & ~SQ_TIME_HI_TIME_MASK) | (time << SQ_TIME_HI_TIME_SHIFT)

#define SQ_TIME_LO_GET_TIME__VI(sq_time_lo)                                                        \
  ((sq_time_lo & SQ_TIME_LO_TIME_MASK) >> SQ_TIME_LO_TIME_SHIFT)

#define SQ_TIME_LO_MASK__VI (SQ_TIME_LO_TIME_MASK)

#define SQ_TIME_LO_SET_TIME__VI(sq_time_lo_reg, time)                                              \
  sq_time_lo_reg = (sq_time_lo_reg & ~SQ_TIME_LO_TIME_MASK) | (time << SQ_TIME_LO_TIME_SHIFT)

#define SQ_WAVE_EXEC_HI_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_EXEC_HI_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_EXEC_HI_GET_EXEC_HI__VI(sq_wave_exec_hi)                                           \
  ((sq_wave_exec_hi & SQ_WAVE_EXEC_HI_EXEC_HI_MASK) >> SQ_WAVE_EXEC_HI_EXEC_HI_SHIFT)

#define SQ_WAVE_EXEC_HI_MASK__VI (SQ_WAVE_EXEC_HI_EXEC_HI_MASK)

#define SQ_WAVE_EXEC_HI_SET_EXEC_HI__VI(sq_wave_exec_hi_reg, exec_hi)                              \
  sq_wave_exec_hi_reg = (sq_wave_exec_hi_reg & ~SQ_WAVE_EXEC_HI_EXEC_HI_MASK) |                    \
      (exec_hi << SQ_WAVE_EXEC_HI_EXEC_HI_SHIFT)

#define SQ_WAVE_EXEC_LO_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_EXEC_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_EXEC_LO_GET_EXEC_LO__VI(sq_wave_exec_lo)                                           \
  ((sq_wave_exec_lo & SQ_WAVE_EXEC_LO_EXEC_LO_MASK) >> SQ_WAVE_EXEC_LO_EXEC_LO_SHIFT)

#define SQ_WAVE_EXEC_LO_MASK__VI (SQ_WAVE_EXEC_LO_EXEC_LO_MASK)

#define SQ_WAVE_EXEC_LO_SET_EXEC_LO__VI(sq_wave_exec_lo_reg, exec_lo)                              \
  sq_wave_exec_lo_reg = (sq_wave_exec_lo_reg & ~SQ_WAVE_EXEC_LO_EXEC_LO_MASK) |                    \
      (exec_lo << SQ_WAVE_EXEC_LO_EXEC_LO_SHIFT)

#define SQ_WAVE_GPR_ALLOC_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_GPR_ALLOC_DEFAULT__VI 0x0d0d0d0d
#define SQ_WAVE_GPR_ALLOC_GET_SGPR_BASE__VI(sq_wave_gpr_alloc)                                     \
  ((sq_wave_gpr_alloc & SQ_WAVE_GPR_ALLOC_SGPR_BASE_MASK) >> SQ_WAVE_GPR_ALLOC_SGPR_BASE_SHIFT)

#define SQ_WAVE_GPR_ALLOC_GET_SGPR_SIZE__VI(sq_wave_gpr_alloc)                                     \
  ((sq_wave_gpr_alloc & SQ_WAVE_GPR_ALLOC_SGPR_SIZE_MASK) >> SQ_WAVE_GPR_ALLOC_SGPR_SIZE_SHIFT)

#define SQ_WAVE_GPR_ALLOC_GET_VGPR_BASE__VI(sq_wave_gpr_alloc)                                     \
  ((sq_wave_gpr_alloc & SQ_WAVE_GPR_ALLOC_VGPR_BASE_MASK) >> SQ_WAVE_GPR_ALLOC_VGPR_BASE_SHIFT)

#define SQ_WAVE_GPR_ALLOC_GET_VGPR_SIZE__VI(sq_wave_gpr_alloc)                                     \
  ((sq_wave_gpr_alloc & SQ_WAVE_GPR_ALLOC_VGPR_SIZE_MASK) >> SQ_WAVE_GPR_ALLOC_VGPR_SIZE_SHIFT)

#define SQ_WAVE_GPR_ALLOC_MASK__VI                                                                 \
  (SQ_WAVE_GPR_ALLOC_VGPR_BASE_MASK | SQ_WAVE_GPR_ALLOC_VGPR_SIZE_MASK |                           \
   SQ_WAVE_GPR_ALLOC_SGPR_BASE_MASK | SQ_WAVE_GPR_ALLOC_SGPR_SIZE_MASK)

#define SQ_WAVE_GPR_ALLOC_SET_SGPR_BASE__VI(sq_wave_gpr_alloc_reg, sgpr_base)                      \
  sq_wave_gpr_alloc_reg = (sq_wave_gpr_alloc_reg & ~SQ_WAVE_GPR_ALLOC_SGPR_BASE_MASK) |            \
      (sgpr_base << SQ_WAVE_GPR_ALLOC_SGPR_BASE_SHIFT)

#define SQ_WAVE_GPR_ALLOC_SET_SGPR_SIZE__VI(sq_wave_gpr_alloc_reg, sgpr_size)                      \
  sq_wave_gpr_alloc_reg = (sq_wave_gpr_alloc_reg & ~SQ_WAVE_GPR_ALLOC_SGPR_SIZE_MASK) |            \
      (sgpr_size << SQ_WAVE_GPR_ALLOC_SGPR_SIZE_SHIFT)

#define SQ_WAVE_GPR_ALLOC_SET_VGPR_BASE__VI(sq_wave_gpr_alloc_reg, vgpr_base)                      \
  sq_wave_gpr_alloc_reg = (sq_wave_gpr_alloc_reg & ~SQ_WAVE_GPR_ALLOC_VGPR_BASE_MASK) |            \
      (vgpr_base << SQ_WAVE_GPR_ALLOC_VGPR_BASE_SHIFT)

#define SQ_WAVE_GPR_ALLOC_SET_VGPR_SIZE__VI(sq_wave_gpr_alloc_reg, vgpr_size)                      \
  sq_wave_gpr_alloc_reg = (sq_wave_gpr_alloc_reg & ~SQ_WAVE_GPR_ALLOC_VGPR_SIZE_MASK) |            \
      (vgpr_size << SQ_WAVE_GPR_ALLOC_VGPR_SIZE_SHIFT)

#define SQ_WAVE_HW_ID_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_HW_ID_DEFAULT__VI 0xcdcd4dcd
#define SQ_WAVE_HW_ID_GET_CU_ID__VI(sq_wave_hw_id)                                                 \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_CU_ID_MASK) >> SQ_WAVE_HW_ID_CU_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_ME_ID__VI(sq_wave_hw_id)                                                 \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_ME_ID_MASK) >> SQ_WAVE_HW_ID_ME_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_PIPE_ID__VI(sq_wave_hw_id)                                               \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_PIPE_ID_MASK) >> SQ_WAVE_HW_ID_PIPE_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_QUEUE_ID__VI(sq_wave_hw_id)                                              \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_QUEUE_ID_MASK) >> SQ_WAVE_HW_ID_QUEUE_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_SE_ID__VI(sq_wave_hw_id)                                                 \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_SE_ID_MASK) >> SQ_WAVE_HW_ID_SE_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_SH_ID__VI(sq_wave_hw_id)                                                 \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_SH_ID_MASK) >> SQ_WAVE_HW_ID_SH_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_SIMD_ID__VI(sq_wave_hw_id)                                               \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_SIMD_ID_MASK) >> SQ_WAVE_HW_ID_SIMD_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_STATE_ID__VI(sq_wave_hw_id)                                              \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_STATE_ID_MASK) >> SQ_WAVE_HW_ID_STATE_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_TG_ID__VI(sq_wave_hw_id)                                                 \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_TG_ID_MASK) >> SQ_WAVE_HW_ID_TG_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_VM_ID__VI(sq_wave_hw_id)                                                 \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_VM_ID_MASK) >> SQ_WAVE_HW_ID_VM_ID_SHIFT)

#define SQ_WAVE_HW_ID_GET_WAVE_ID__VI(sq_wave_hw_id)                                               \
  ((sq_wave_hw_id & SQ_WAVE_HW_ID_WAVE_ID_MASK) >> SQ_WAVE_HW_ID_WAVE_ID_SHIFT)

#define SQ_WAVE_HW_ID_MASK__VI                                                                     \
  (SQ_WAVE_HW_ID_WAVE_ID_MASK | SQ_WAVE_HW_ID_SIMD_ID_MASK | SQ_WAVE_HW_ID_PIPE_ID_MASK |          \
   SQ_WAVE_HW_ID_CU_ID_MASK | SQ_WAVE_HW_ID_SH_ID_MASK | SQ_WAVE_HW_ID_SE_ID_MASK |                \
   SQ_WAVE_HW_ID_TG_ID_MASK | SQ_WAVE_HW_ID_VM_ID_MASK | SQ_WAVE_HW_ID_QUEUE_ID_MASK |             \
   SQ_WAVE_HW_ID_STATE_ID_MASK | SQ_WAVE_HW_ID_ME_ID_MASK)

#define SQ_WAVE_HW_ID_SET_CU_ID__VI(sq_wave_hw_id_reg, cu_id)                                      \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_CU_ID_MASK) | (cu_id << SQ_WAVE_HW_ID_CU_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_ME_ID__VI(sq_wave_hw_id_reg, me_id)                                      \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_ME_ID_MASK) | (me_id << SQ_WAVE_HW_ID_ME_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_PIPE_ID__VI(sq_wave_hw_id_reg, pipe_id)                                  \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_PIPE_ID_MASK) | (pipe_id << SQ_WAVE_HW_ID_PIPE_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_QUEUE_ID__VI(sq_wave_hw_id_reg, queue_id)                                \
  sq_wave_hw_id_reg = (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_QUEUE_ID_MASK) |                         \
      (queue_id << SQ_WAVE_HW_ID_QUEUE_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_SE_ID__VI(sq_wave_hw_id_reg, se_id)                                      \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_SE_ID_MASK) | (se_id << SQ_WAVE_HW_ID_SE_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_SH_ID__VI(sq_wave_hw_id_reg, sh_id)                                      \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_SH_ID_MASK) | (sh_id << SQ_WAVE_HW_ID_SH_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_SIMD_ID__VI(sq_wave_hw_id_reg, simd_id)                                  \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_SIMD_ID_MASK) | (simd_id << SQ_WAVE_HW_ID_SIMD_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_STATE_ID__VI(sq_wave_hw_id_reg, state_id)                                \
  sq_wave_hw_id_reg = (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_STATE_ID_MASK) |                         \
      (state_id << SQ_WAVE_HW_ID_STATE_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_TG_ID__VI(sq_wave_hw_id_reg, tg_id)                                      \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_TG_ID_MASK) | (tg_id << SQ_WAVE_HW_ID_TG_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_VM_ID__VI(sq_wave_hw_id_reg, vm_id)                                      \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_VM_ID_MASK) | (vm_id << SQ_WAVE_HW_ID_VM_ID_SHIFT)

#define SQ_WAVE_HW_ID_SET_WAVE_ID__VI(sq_wave_hw_id_reg, wave_id)                                  \
  sq_wave_hw_id_reg =                                                                              \
      (sq_wave_hw_id_reg & ~SQ_WAVE_HW_ID_WAVE_ID_MASK) | (wave_id << SQ_WAVE_HW_ID_WAVE_ID_SHIFT)

#define SQ_WAVE_IB_DBG0_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_IB_DBG0_DEFAULT__VI 0x4dcd0dcd
#define SQ_WAVE_IB_DBG0_ECC_ST_MASK__SI__CI 0x00c00000
#define SQ_WAVE_IB_DBG0_ECC_ST_MASK__VI 0x03000000
#define SQ_WAVE_IB_DBG0_ECC_ST_SHIFT__SI__CI 22
#define SQ_WAVE_IB_DBG0_ECC_ST_SHIFT__VI 24
#define SQ_WAVE_IB_DBG0_GET_ECC_ST__VI(sq_wave_ib_dbg0)                                            \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_ECC_ST_MASK) >> SQ_WAVE_IB_DBG0_ECC_ST_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_HYB_CNT__VI(sq_wave_ib_dbg0)                                           \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_HYB_CNT_MASK) >> SQ_WAVE_IB_DBG0_HYB_CNT_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_IBUF_RPTR__VI(sq_wave_ib_dbg0)                                         \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_IBUF_RPTR_MASK) >> SQ_WAVE_IB_DBG0_IBUF_RPTR_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_IBUF_ST__VI(sq_wave_ib_dbg0)                                           \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_IBUF_ST_MASK) >> SQ_WAVE_IB_DBG0_IBUF_ST_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_IBUF_WPTR__VI(sq_wave_ib_dbg0)                                         \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_IBUF_WPTR_MASK) >> SQ_WAVE_IB_DBG0_IBUF_WPTR_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_INST_STR_ST__VI(sq_wave_ib_dbg0)                                       \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_INST_STR_ST_MASK) >> SQ_WAVE_IB_DBG0_INST_STR_ST_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_IS_HYB__VI(sq_wave_ib_dbg0)                                            \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_IS_HYB_MASK) >> SQ_WAVE_IB_DBG0_IS_HYB_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_KILL__VI(sq_wave_ib_dbg0)                                              \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_KILL_MASK) >> SQ_WAVE_IB_DBG0_KILL_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_MISC_CNT__VI(sq_wave_ib_dbg0)                                          \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_MISC_CNT_MASK) >> SQ_WAVE_IB_DBG0_MISC_CNT_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_NEED_KILL_IFETCH__VI(sq_wave_ib_dbg0)                                  \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_MASK) >>                                    \
   SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_NEED_NEXT_DW__VI(sq_wave_ib_dbg0)                                      \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_NEED_NEXT_DW_MASK) >> SQ_WAVE_IB_DBG0_NEED_NEXT_DW_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_NO_PREFETCH_CNT__VI(sq_wave_ib_dbg0)                                   \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_MASK) >>                                     \
   SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_SHIFT)

#define SQ_WAVE_IB_DBG0_GET_PC_INVALID__VI(sq_wave_ib_dbg0)                                        \
  ((sq_wave_ib_dbg0 & SQ_WAVE_IB_DBG0_PC_INVALID_MASK) >> SQ_WAVE_IB_DBG0_PC_INVALID_SHIFT)

#define SQ_WAVE_IB_DBG0_HYB_CNT_MASK__SI__CI 0x06000000
#define SQ_WAVE_IB_DBG0_HYB_CNT_MASK__VI 0x18000000
#define SQ_WAVE_IB_DBG0_HYB_CNT_SHIFT__SI__CI 25
#define SQ_WAVE_IB_DBG0_HYB_CNT_SHIFT__VI 27
#define SQ_WAVE_IB_DBG0_INST_STR_ST_MASK__SI__CI 0x00070000
#define SQ_WAVE_IB_DBG0_INST_STR_ST_MASK__VI 0x000f0000
#define SQ_WAVE_IB_DBG0_INST_STR_ST_SIZE__SI__CI 3
#define SQ_WAVE_IB_DBG0_INST_STR_ST_SIZE__VI 4
#define SQ_WAVE_IB_DBG0_IS_HYB_MASK__SI__CI 0x01000000
#define SQ_WAVE_IB_DBG0_IS_HYB_MASK__VI 0x04000000
#define SQ_WAVE_IB_DBG0_IS_HYB_SHIFT__SI__CI 24
#define SQ_WAVE_IB_DBG0_IS_HYB_SHIFT__VI 26
#define SQ_WAVE_IB_DBG0_KILL_MASK__VI 0x20000000
#define SQ_WAVE_IB_DBG0_KILL_SHIFT__VI 29
#define SQ_WAVE_IB_DBG0_MASK__VI                                                                   \
  (SQ_WAVE_IB_DBG0_IBUF_ST_MASK | SQ_WAVE_IB_DBG0_PC_INVALID_MASK |                                \
   SQ_WAVE_IB_DBG0_NEED_NEXT_DW_MASK | SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_MASK |                      \
   SQ_WAVE_IB_DBG0_IBUF_RPTR_MASK | SQ_WAVE_IB_DBG0_IBUF_WPTR_MASK |                               \
   SQ_WAVE_IB_DBG0_INST_STR_ST_MASK | SQ_WAVE_IB_DBG0_MISC_CNT_MASK |                              \
   SQ_WAVE_IB_DBG0_ECC_ST_MASK | SQ_WAVE_IB_DBG0_IS_HYB_MASK | SQ_WAVE_IB_DBG0_HYB_CNT_MASK |      \
   SQ_WAVE_IB_DBG0_KILL_MASK | SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_MASK)

#define SQ_WAVE_IB_DBG0_MISC_CNT_MASK__SI__CI 0x00380000
#define SQ_WAVE_IB_DBG0_MISC_CNT_MASK__VI 0x00f00000
#define SQ_WAVE_IB_DBG0_MISC_CNT_SHIFT__SI__CI 19
#define SQ_WAVE_IB_DBG0_MISC_CNT_SHIFT__VI 20
#define SQ_WAVE_IB_DBG0_MISC_CNT_SIZE__SI__CI 3
#define SQ_WAVE_IB_DBG0_MISC_CNT_SIZE__VI 4
#define SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_MASK__VI 0x40000000
#define SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_SHIFT__VI 30
#define SQ_WAVE_IB_DBG0_SET_ECC_ST__VI(sq_wave_ib_dbg0_reg, ecc_st)                                \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_ECC_ST_MASK) |                     \
      (ecc_st << SQ_WAVE_IB_DBG0_ECC_ST_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_HYB_CNT__VI(sq_wave_ib_dbg0_reg, hyb_cnt)                              \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_HYB_CNT_MASK) |                    \
      (hyb_cnt << SQ_WAVE_IB_DBG0_HYB_CNT_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_IBUF_RPTR__VI(sq_wave_ib_dbg0_reg, ibuf_rptr)                          \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_IBUF_RPTR_MASK) |                  \
      (ibuf_rptr << SQ_WAVE_IB_DBG0_IBUF_RPTR_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_IBUF_ST__VI(sq_wave_ib_dbg0_reg, ibuf_st)                              \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_IBUF_ST_MASK) |                    \
      (ibuf_st << SQ_WAVE_IB_DBG0_IBUF_ST_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_IBUF_WPTR__VI(sq_wave_ib_dbg0_reg, ibuf_wptr)                          \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_IBUF_WPTR_MASK) |                  \
      (ibuf_wptr << SQ_WAVE_IB_DBG0_IBUF_WPTR_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_INST_STR_ST__VI(sq_wave_ib_dbg0_reg, inst_str_st)                      \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_INST_STR_ST_MASK) |                \
      (inst_str_st << SQ_WAVE_IB_DBG0_INST_STR_ST_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_IS_HYB__VI(sq_wave_ib_dbg0_reg, is_hyb)                                \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_IS_HYB_MASK) |                     \
      (is_hyb << SQ_WAVE_IB_DBG0_IS_HYB_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_KILL__VI(sq_wave_ib_dbg0_reg, kill)                                    \
  sq_wave_ib_dbg0_reg =                                                                            \
      (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_KILL_MASK) | (kill << SQ_WAVE_IB_DBG0_KILL_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_MISC_CNT__VI(sq_wave_ib_dbg0_reg, misc_cnt)                            \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_MISC_CNT_MASK) |                   \
      (misc_cnt << SQ_WAVE_IB_DBG0_MISC_CNT_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_NEED_KILL_IFETCH__VI(sq_wave_ib_dbg0_reg, need_kill_ifetch)            \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_MASK) |           \
      (need_kill_ifetch << SQ_WAVE_IB_DBG0_NEED_KILL_IFETCH_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_NEED_NEXT_DW__VI(sq_wave_ib_dbg0_reg, need_next_dw)                    \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_NEED_NEXT_DW_MASK) |               \
      (need_next_dw << SQ_WAVE_IB_DBG0_NEED_NEXT_DW_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_NO_PREFETCH_CNT__VI(sq_wave_ib_dbg0_reg, no_prefetch_cnt)              \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_MASK) |            \
      (no_prefetch_cnt << SQ_WAVE_IB_DBG0_NO_PREFETCH_CNT_SHIFT)

#define SQ_WAVE_IB_DBG0_SET_PC_INVALID__VI(sq_wave_ib_dbg0_reg, pc_invalid)                        \
  sq_wave_ib_dbg0_reg = (sq_wave_ib_dbg0_reg & ~SQ_WAVE_IB_DBG0_PC_INVALID_MASK) |                 \
      (pc_invalid << SQ_WAVE_IB_DBG0_PC_INVALID_SHIFT)

#define SQ_WAVE_IB_DBG1_DEFAULT__VI 0x00000dc5
#define SQ_WAVE_IB_DBG1_GET_IXNACK__VI(sq_wave_ib_dbg1)                                            \
  ((sq_wave_ib_dbg1 & SQ_WAVE_IB_DBG1_IXNACK_MASK) >> SQ_WAVE_IB_DBG1_IXNACK_SHIFT)

#define SQ_WAVE_IB_DBG1_GET_QCNT__VI(sq_wave_ib_dbg1)                                              \
  ((sq_wave_ib_dbg1 & SQ_WAVE_IB_DBG1_QCNT_MASK) >> SQ_WAVE_IB_DBG1_QCNT_SHIFT)

#define SQ_WAVE_IB_DBG1_GET_TA_NEED_RESET__VI(sq_wave_ib_dbg1)                                     \
  ((sq_wave_ib_dbg1 & SQ_WAVE_IB_DBG1_TA_NEED_RESET_MASK) >> SQ_WAVE_IB_DBG1_TA_NEED_RESET_SHIFT)

#define SQ_WAVE_IB_DBG1_GET_XCNT__VI(sq_wave_ib_dbg1)                                              \
  ((sq_wave_ib_dbg1 & SQ_WAVE_IB_DBG1_XCNT_MASK) >> SQ_WAVE_IB_DBG1_XCNT_SHIFT)

#define SQ_WAVE_IB_DBG1_GET_XNACK__VI(sq_wave_ib_dbg1)                                             \
  ((sq_wave_ib_dbg1 & SQ_WAVE_IB_DBG1_XNACK_MASK) >> SQ_WAVE_IB_DBG1_XNACK_SHIFT)

#define SQ_WAVE_IB_DBG1_IXNACK_MASK__VI 0x00000001
#define SQ_WAVE_IB_DBG1_IXNACK_SHIFT__VI 0x00000000
#define SQ_WAVE_IB_DBG1_IXNACK_SIZE__VI 1
#define SQ_WAVE_IB_DBG1_MASK__VI                                                                   \
  (SQ_WAVE_IB_DBG1_IXNACK_MASK | SQ_WAVE_IB_DBG1_XNACK_MASK | SQ_WAVE_IB_DBG1_TA_NEED_RESET_MASK | \
   SQ_WAVE_IB_DBG1_XCNT_MASK | SQ_WAVE_IB_DBG1_QCNT_MASK)

#define SQ_WAVE_IB_DBG1_QCNT_MASK__VI 0x00000f00
#define SQ_WAVE_IB_DBG1_QCNT_SHIFT__VI 8
#define SQ_WAVE_IB_DBG1_QCNT_SIZE__VI 4
#define SQ_WAVE_IB_DBG1_REG_SIZE__VI 32
#define SQ_WAVE_IB_DBG1_SET_IXNACK__VI(sq_wave_ib_dbg1_reg, ixnack)                                \
  sq_wave_ib_dbg1_reg = (sq_wave_ib_dbg1_reg & ~SQ_WAVE_IB_DBG1_IXNACK_MASK) |                     \
      (ixnack << SQ_WAVE_IB_DBG1_IXNACK_SHIFT)

#define SQ_WAVE_IB_DBG1_SET_QCNT__VI(sq_wave_ib_dbg1_reg, qcnt)                                    \
  sq_wave_ib_dbg1_reg =                                                                            \
      (sq_wave_ib_dbg1_reg & ~SQ_WAVE_IB_DBG1_QCNT_MASK) | (qcnt << SQ_WAVE_IB_DBG1_QCNT_SHIFT)

#define SQ_WAVE_IB_DBG1_SET_TA_NEED_RESET__VI(sq_wave_ib_dbg1_reg, ta_need_reset)                  \
  sq_wave_ib_dbg1_reg = (sq_wave_ib_dbg1_reg & ~SQ_WAVE_IB_DBG1_TA_NEED_RESET_MASK) |              \
      (ta_need_reset << SQ_WAVE_IB_DBG1_TA_NEED_RESET_SHIFT)

#define SQ_WAVE_IB_DBG1_SET_XCNT__VI(sq_wave_ib_dbg1_reg, xcnt)                                    \
  sq_wave_ib_dbg1_reg =                                                                            \
      (sq_wave_ib_dbg1_reg & ~SQ_WAVE_IB_DBG1_XCNT_MASK) | (xcnt << SQ_WAVE_IB_DBG1_XCNT_SHIFT)

#define SQ_WAVE_IB_DBG1_SET_XNACK__VI(sq_wave_ib_dbg1_reg, xnack)                                  \
  sq_wave_ib_dbg1_reg =                                                                            \
      (sq_wave_ib_dbg1_reg & ~SQ_WAVE_IB_DBG1_XNACK_MASK) | (xnack << SQ_WAVE_IB_DBG1_XNACK_SHIFT)

#define SQ_WAVE_IB_DBG1_TA_NEED_RESET_MASK__VI 0x00000004
#define SQ_WAVE_IB_DBG1_TA_NEED_RESET_SHIFT__VI 2
#define SQ_WAVE_IB_DBG1_TA_NEED_RESET_SIZE__VI 1
#define SQ_WAVE_IB_DBG1_XCNT_MASK__VI 0x000000f0
#define SQ_WAVE_IB_DBG1_XCNT_SHIFT__VI 4
#define SQ_WAVE_IB_DBG1_XCNT_SIZE__VI 4
#define SQ_WAVE_IB_DBG1_XNACK_MASK__VI 0x00000002
#define SQ_WAVE_IB_DBG1_XNACK_SHIFT__VI 1
#define SQ_WAVE_IB_DBG1_XNACK_SIZE__VI 1
#define SQ_WAVE_IB_STS_FIRST_REPLAY_MASK__VI 0x00008000
#define SQ_WAVE_IB_STS_FIRST_REPLAY_SHIFT__VI 15
#define SQ_WAVE_IB_STS_FIRST_REPLAY_SIZE__VI 1
#define SQ_WAVE_IB_STS_GET_EXP_CNT__VI(sq_wave_ib_sts)                                             \
  ((sq_wave_ib_sts & SQ_WAVE_IB_STS_EXP_CNT_MASK) >> SQ_WAVE_IB_STS_EXP_CNT_SHIFT)

#define SQ_WAVE_IB_STS_GET_FIRST_REPLAY__VI(sq_wave_ib_sts)                                        \
  ((sq_wave_ib_sts & SQ_WAVE_IB_STS_FIRST_REPLAY_MASK) >> SQ_WAVE_IB_STS_FIRST_REPLAY_SHIFT)

#define SQ_WAVE_IB_STS_GET_LGKM_CNT__VI(sq_wave_ib_sts)                                            \
  ((sq_wave_ib_sts & SQ_WAVE_IB_STS_LGKM_CNT_MASK) >> SQ_WAVE_IB_STS_LGKM_CNT_SHIFT)

#define SQ_WAVE_IB_STS_GET_RCNT__VI(sq_wave_ib_sts)                                                \
  ((sq_wave_ib_sts & SQ_WAVE_IB_STS_RCNT_MASK) >> SQ_WAVE_IB_STS_RCNT_SHIFT)

#define SQ_WAVE_IB_STS_GET_VALU_CNT__VI(sq_wave_ib_sts)                                            \
  ((sq_wave_ib_sts & SQ_WAVE_IB_STS_VALU_CNT_MASK) >> SQ_WAVE_IB_STS_VALU_CNT_SHIFT)

#define SQ_WAVE_IB_STS_GET_VM_CNT__VI(sq_wave_ib_sts)                                              \
  ((sq_wave_ib_sts & SQ_WAVE_IB_STS_VM_CNT_MASK) >> SQ_WAVE_IB_STS_VM_CNT_SHIFT)

#define SQ_WAVE_IB_STS_MASK__VI                                                                    \
  (SQ_WAVE_IB_STS_VM_CNT_MASK | SQ_WAVE_IB_STS_EXP_CNT_MASK | SQ_WAVE_IB_STS_LGKM_CNT_MASK |       \
   SQ_WAVE_IB_STS_VALU_CNT_MASK | SQ_WAVE_IB_STS_FIRST_REPLAY_MASK | SQ_WAVE_IB_STS_RCNT_MASK)

#define SQ_WAVE_IB_STS_RCNT_MASK__VI 0x000f0000
#define SQ_WAVE_IB_STS_RCNT_SHIFT__VI 16
#define SQ_WAVE_IB_STS_RCNT_SIZE__VI 4
#define SQ_WAVE_IB_STS_SET_EXP_CNT__VI(sq_wave_ib_sts_reg, exp_cnt)                                \
  sq_wave_ib_sts_reg = (sq_wave_ib_sts_reg & ~SQ_WAVE_IB_STS_EXP_CNT_MASK) |                       \
      (exp_cnt << SQ_WAVE_IB_STS_EXP_CNT_SHIFT)

#define SQ_WAVE_IB_STS_SET_FIRST_REPLAY__VI(sq_wave_ib_sts_reg, first_replay)                      \
  sq_wave_ib_sts_reg = (sq_wave_ib_sts_reg & ~SQ_WAVE_IB_STS_FIRST_REPLAY_MASK) |                  \
      (first_replay << SQ_WAVE_IB_STS_FIRST_REPLAY_SHIFT)

#define SQ_WAVE_IB_STS_SET_LGKM_CNT__VI(sq_wave_ib_sts_reg, lgkm_cnt)                              \
  sq_wave_ib_sts_reg = (sq_wave_ib_sts_reg & ~SQ_WAVE_IB_STS_LGKM_CNT_MASK) |                      \
      (lgkm_cnt << SQ_WAVE_IB_STS_LGKM_CNT_SHIFT)

#define SQ_WAVE_IB_STS_SET_RCNT__VI(sq_wave_ib_sts_reg, rcnt)                                      \
  sq_wave_ib_sts_reg =                                                                             \
      (sq_wave_ib_sts_reg & ~SQ_WAVE_IB_STS_RCNT_MASK) | (rcnt << SQ_WAVE_IB_STS_RCNT_SHIFT)

#define SQ_WAVE_IB_STS_SET_VALU_CNT__VI(sq_wave_ib_sts_reg, valu_cnt)                              \
  sq_wave_ib_sts_reg = (sq_wave_ib_sts_reg & ~SQ_WAVE_IB_STS_VALU_CNT_MASK) |                      \
      (valu_cnt << SQ_WAVE_IB_STS_VALU_CNT_SHIFT)

#define SQ_WAVE_IB_STS_SET_VM_CNT__VI(sq_wave_ib_sts_reg, vm_cnt)                                  \
  sq_wave_ib_sts_reg =                                                                             \
      (sq_wave_ib_sts_reg & ~SQ_WAVE_IB_STS_VM_CNT_MASK) | (vm_cnt << SQ_WAVE_IB_STS_VM_CNT_SHIFT)

#define SQ_WAVE_INST_DW0_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_INST_DW0_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_INST_DW0_GET_INST_DW0__VI(sq_wave_inst_dw0)                                        \
  ((sq_wave_inst_dw0 & SQ_WAVE_INST_DW0_INST_DW0_MASK) >> SQ_WAVE_INST_DW0_INST_DW0_SHIFT)

#define SQ_WAVE_INST_DW0_MASK__VI (SQ_WAVE_INST_DW0_INST_DW0_MASK)

#define SQ_WAVE_INST_DW0_SET_INST_DW0__VI(sq_wave_inst_dw0_reg, inst_dw0)                          \
  sq_wave_inst_dw0_reg = (sq_wave_inst_dw0_reg & ~SQ_WAVE_INST_DW0_INST_DW0_MASK) |                \
      (inst_dw0 << SQ_WAVE_INST_DW0_INST_DW0_SHIFT)

#define SQ_WAVE_INST_DW1_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_INST_DW1_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_INST_DW1_GET_INST_DW1__VI(sq_wave_inst_dw1)                                        \
  ((sq_wave_inst_dw1 & SQ_WAVE_INST_DW1_INST_DW1_MASK) >> SQ_WAVE_INST_DW1_INST_DW1_SHIFT)

#define SQ_WAVE_INST_DW1_MASK__VI (SQ_WAVE_INST_DW1_INST_DW1_MASK)

#define SQ_WAVE_INST_DW1_SET_INST_DW1__VI(sq_wave_inst_dw1_reg, inst_dw1)                          \
  sq_wave_inst_dw1_reg = (sq_wave_inst_dw1_reg & ~SQ_WAVE_INST_DW1_INST_DW1_MASK) |                \
      (inst_dw1 << SQ_WAVE_INST_DW1_INST_DW1_SHIFT)

#define SQ_WAVE_LDS_ALLOC_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_LDS_ALLOC_DEFAULT__VI 0x000dc0cd
#define SQ_WAVE_LDS_ALLOC_GET_LDS_BASE__VI(sq_wave_lds_alloc)                                      \
  ((sq_wave_lds_alloc & SQ_WAVE_LDS_ALLOC_LDS_BASE_MASK) >> SQ_WAVE_LDS_ALLOC_LDS_BASE_SHIFT)

#define SQ_WAVE_LDS_ALLOC_GET_LDS_SIZE__VI(sq_wave_lds_alloc)                                      \
  ((sq_wave_lds_alloc & SQ_WAVE_LDS_ALLOC_LDS_SIZE_MASK) >> SQ_WAVE_LDS_ALLOC_LDS_SIZE_SHIFT)

#define SQ_WAVE_LDS_ALLOC_MASK__VI                                                                 \
  (SQ_WAVE_LDS_ALLOC_LDS_BASE_MASK | SQ_WAVE_LDS_ALLOC_LDS_SIZE_MASK)

#define SQ_WAVE_LDS_ALLOC_SET_LDS_BASE__VI(sq_wave_lds_alloc_reg, lds_base)                        \
  sq_wave_lds_alloc_reg = (sq_wave_lds_alloc_reg & ~SQ_WAVE_LDS_ALLOC_LDS_BASE_MASK) |             \
      (lds_base << SQ_WAVE_LDS_ALLOC_LDS_BASE_SHIFT)

#define SQ_WAVE_LDS_ALLOC_SET_LDS_SIZE__VI(sq_wave_lds_alloc_reg, lds_size)                        \
  sq_wave_lds_alloc_reg = (sq_wave_lds_alloc_reg & ~SQ_WAVE_LDS_ALLOC_LDS_SIZE_MASK) |             \
      (lds_size << SQ_WAVE_LDS_ALLOC_LDS_SIZE_SHIFT)

#define SQ_WAVE_M0_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_M0_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_M0_GET_M0__VI(sq_wave_m0) ((sq_wave_m0 & SQ_WAVE_M0_M0_MASK) >> SQ_WAVE_M0_M0_SHIFT)

#define SQ_WAVE_M0_MASK__VI (SQ_WAVE_M0_M0_MASK)

#define SQ_WAVE_M0_SET_M0__VI(sq_wave_m0_reg, m0)                                                  \
  sq_wave_m0_reg = (sq_wave_m0_reg & ~SQ_WAVE_M0_M0_MASK) | (m0 << SQ_WAVE_M0_M0_SHIFT)

#define SQ_WAVE_MODE_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_MODE_DEFAULT__VI 0xc80dcdcd
#define SQ_WAVE_MODE_GET_CSP__VI(sq_wave_mode)                                                     \
  ((sq_wave_mode & SQ_WAVE_MODE_CSP_MASK) >> SQ_WAVE_MODE_CSP_SHIFT)

#define SQ_WAVE_MODE_GET_DEBUG_EN__VI(sq_wave_mode)                                                \
  ((sq_wave_mode & SQ_WAVE_MODE_DEBUG_EN_MASK) >> SQ_WAVE_MODE_DEBUG_EN_SHIFT)

#define SQ_WAVE_MODE_GET_DX10_CLAMP__VI(sq_wave_mode)                                              \
  ((sq_wave_mode & SQ_WAVE_MODE_DX10_CLAMP_MASK) >> SQ_WAVE_MODE_DX10_CLAMP_SHIFT)

#define SQ_WAVE_MODE_GET_EXCP_EN__VI(sq_wave_mode)                                                 \
  ((sq_wave_mode & SQ_WAVE_MODE_EXCP_EN_MASK) >> SQ_WAVE_MODE_EXCP_EN_SHIFT)

#define SQ_WAVE_MODE_GET_FP_DENORM__VI(sq_wave_mode)                                               \
  ((sq_wave_mode & SQ_WAVE_MODE_FP_DENORM_MASK) >> SQ_WAVE_MODE_FP_DENORM_SHIFT)

#define SQ_WAVE_MODE_GET_FP_ROUND__VI(sq_wave_mode)                                                \
  ((sq_wave_mode & SQ_WAVE_MODE_FP_ROUND_MASK) >> SQ_WAVE_MODE_FP_ROUND_SHIFT)

#define SQ_WAVE_MODE_GET_GPR_IDX_EN__VI(sq_wave_mode)                                              \
  ((sq_wave_mode & SQ_WAVE_MODE_GPR_IDX_EN_MASK) >> SQ_WAVE_MODE_GPR_IDX_EN_SHIFT)

#define SQ_WAVE_MODE_GET_IEEE__VI(sq_wave_mode)                                                    \
  ((sq_wave_mode & SQ_WAVE_MODE_IEEE_MASK) >> SQ_WAVE_MODE_IEEE_SHIFT)

#define SQ_WAVE_MODE_GET_LOD_CLAMPED__VI(sq_wave_mode)                                             \
  ((sq_wave_mode & SQ_WAVE_MODE_LOD_CLAMPED_MASK) >> SQ_WAVE_MODE_LOD_CLAMPED_SHIFT)

#define SQ_WAVE_MODE_GET_VSKIP__VI(sq_wave_mode)                                                   \
  ((sq_wave_mode & SQ_WAVE_MODE_VSKIP_MASK) >> SQ_WAVE_MODE_VSKIP_SHIFT)

#define SQ_WAVE_MODE_GPR_IDX_EN_MASK__VI 0x08000000
#define SQ_WAVE_MODE_GPR_IDX_EN_SHIFT__VI 27
#define SQ_WAVE_MODE_GPR_IDX_EN_SIZE__VI 1
#define SQ_WAVE_MODE_MASK__VI                                                                      \
  (SQ_WAVE_MODE_FP_ROUND_MASK | SQ_WAVE_MODE_FP_DENORM_MASK | SQ_WAVE_MODE_DX10_CLAMP_MASK |       \
   SQ_WAVE_MODE_IEEE_MASK | SQ_WAVE_MODE_LOD_CLAMPED_MASK | SQ_WAVE_MODE_DEBUG_EN_MASK |           \
   SQ_WAVE_MODE_EXCP_EN_MASK | SQ_WAVE_MODE_GPR_IDX_EN_MASK | SQ_WAVE_MODE_VSKIP_MASK |            \
   SQ_WAVE_MODE_CSP_MASK)

#define SQ_WAVE_MODE_SET_CSP__VI(sq_wave_mode_reg, csp)                                            \
  sq_wave_mode_reg = (sq_wave_mode_reg & ~SQ_WAVE_MODE_CSP_MASK) | (csp << SQ_WAVE_MODE_CSP_SHIFT)

#define SQ_WAVE_MODE_SET_DEBUG_EN__VI(sq_wave_mode_reg, debug_en)                                  \
  sq_wave_mode_reg =                                                                               \
      (sq_wave_mode_reg & ~SQ_WAVE_MODE_DEBUG_EN_MASK) | (debug_en << SQ_WAVE_MODE_DEBUG_EN_SHIFT)

#define SQ_WAVE_MODE_SET_DX10_CLAMP__VI(sq_wave_mode_reg, dx10_clamp)                              \
  sq_wave_mode_reg = (sq_wave_mode_reg & ~SQ_WAVE_MODE_DX10_CLAMP_MASK) |                          \
      (dx10_clamp << SQ_WAVE_MODE_DX10_CLAMP_SHIFT)

#define SQ_WAVE_MODE_SET_EXCP_EN__VI(sq_wave_mode_reg, excp_en)                                    \
  sq_wave_mode_reg =                                                                               \
      (sq_wave_mode_reg & ~SQ_WAVE_MODE_EXCP_EN_MASK) | (excp_en << SQ_WAVE_MODE_EXCP_EN_SHIFT)

#define SQ_WAVE_MODE_SET_FP_DENORM__VI(sq_wave_mode_reg, fp_denorm)                                \
  sq_wave_mode_reg = (sq_wave_mode_reg & ~SQ_WAVE_MODE_FP_DENORM_MASK) |                           \
      (fp_denorm << SQ_WAVE_MODE_FP_DENORM_SHIFT)

#define SQ_WAVE_MODE_SET_FP_ROUND__VI(sq_wave_mode_reg, fp_round)                                  \
  sq_wave_mode_reg =                                                                               \
      (sq_wave_mode_reg & ~SQ_WAVE_MODE_FP_ROUND_MASK) | (fp_round << SQ_WAVE_MODE_FP_ROUND_SHIFT)

#define SQ_WAVE_MODE_SET_GPR_IDX_EN__VI(sq_wave_mode_reg, gpr_idx_en)                              \
  sq_wave_mode_reg = (sq_wave_mode_reg & ~SQ_WAVE_MODE_GPR_IDX_EN_MASK) |                          \
      (gpr_idx_en << SQ_WAVE_MODE_GPR_IDX_EN_SHIFT)

#define SQ_WAVE_MODE_SET_IEEE__VI(sq_wave_mode_reg, ieee)                                          \
  sq_wave_mode_reg =                                                                               \
      (sq_wave_mode_reg & ~SQ_WAVE_MODE_IEEE_MASK) | (ieee << SQ_WAVE_MODE_IEEE_SHIFT)

#define SQ_WAVE_MODE_SET_LOD_CLAMPED__VI(sq_wave_mode_reg, lod_clamped)                            \
  sq_wave_mode_reg = (sq_wave_mode_reg & ~SQ_WAVE_MODE_LOD_CLAMPED_MASK) |                         \
      (lod_clamped << SQ_WAVE_MODE_LOD_CLAMPED_SHIFT)

#define SQ_WAVE_MODE_SET_VSKIP__VI(sq_wave_mode_reg, vskip)                                        \
  sq_wave_mode_reg =                                                                               \
      (sq_wave_mode_reg & ~SQ_WAVE_MODE_VSKIP_MASK) | (vskip << SQ_WAVE_MODE_VSKIP_SHIFT)

#define SQ_WAVE_PC_HI_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_PC_HI_DEFAULT__VI 0x0000cdcd
#define SQ_WAVE_PC_HI_GET_PC_HI__VI(sq_wave_pc_hi)                                                 \
  ((sq_wave_pc_hi & SQ_WAVE_PC_HI_PC_HI_MASK) >> SQ_WAVE_PC_HI_PC_HI_SHIFT)

#define SQ_WAVE_PC_HI_MASK__VI (SQ_WAVE_PC_HI_PC_HI_MASK)

#define SQ_WAVE_PC_HI_PC_HI_MASK__SI__CI 0x000000ff
#define SQ_WAVE_PC_HI_PC_HI_MASK__VI 0x0000ffff
#define SQ_WAVE_PC_HI_PC_HI_SIZE__SI__CI 8
#define SQ_WAVE_PC_HI_PC_HI_SIZE__VI 16
#define SQ_WAVE_PC_HI_SET_PC_HI__VI(sq_wave_pc_hi_reg, pc_hi)                                      \
  sq_wave_pc_hi_reg =                                                                              \
      (sq_wave_pc_hi_reg & ~SQ_WAVE_PC_HI_PC_HI_MASK) | (pc_hi << SQ_WAVE_PC_HI_PC_HI_SHIFT)

#define SQ_WAVE_PC_LO_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_PC_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_PC_LO_GET_PC_LO__VI(sq_wave_pc_lo)                                                 \
  ((sq_wave_pc_lo & SQ_WAVE_PC_LO_PC_LO_MASK) >> SQ_WAVE_PC_LO_PC_LO_SHIFT)

#define SQ_WAVE_PC_LO_MASK__VI (SQ_WAVE_PC_LO_PC_LO_MASK)

#define SQ_WAVE_PC_LO_SET_PC_LO__VI(sq_wave_pc_lo_reg, pc_lo)                                      \
  sq_wave_pc_lo_reg =                                                                              \
      (sq_wave_pc_lo_reg & ~SQ_WAVE_PC_LO_PC_LO_MASK) | (pc_lo << SQ_WAVE_PC_LO_PC_LO_SHIFT)

#define SQ_WAVE_STATUS_ALLOW_REPLAY_MASK__VI 0x00400000
#define SQ_WAVE_STATUS_ALLOW_REPLAY_SHIFT__VI 22
#define SQ_WAVE_STATUS_ALLOW_REPLAY_SIZE__VI 1
#define SQ_WAVE_STATUS_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_STATUS_DEFAULT__VI 0x08cdcdcd
#define SQ_WAVE_STATUS_GET_ALLOW_REPLAY__VI(sq_wave_status)                                        \
  ((sq_wave_status & SQ_WAVE_STATUS_ALLOW_REPLAY_MASK) >> SQ_WAVE_STATUS_ALLOW_REPLAY_SHIFT)

#define SQ_WAVE_STATUS_GET_COND_DBG_SYS__VI(sq_wave_status)                                        \
  ((sq_wave_status & SQ_WAVE_STATUS_COND_DBG_SYS_MASK) >> SQ_WAVE_STATUS_COND_DBG_SYS_SHIFT)

#define SQ_WAVE_STATUS_GET_COND_DBG_USER__VI(sq_wave_status)                                       \
  ((sq_wave_status & SQ_WAVE_STATUS_COND_DBG_USER_MASK) >> SQ_WAVE_STATUS_COND_DBG_USER_SHIFT)

#define SQ_WAVE_STATUS_GET_ECC_ERR__VI(sq_wave_status)                                             \
  ((sq_wave_status & SQ_WAVE_STATUS_ECC_ERR_MASK) >> SQ_WAVE_STATUS_ECC_ERR_SHIFT)

#define SQ_WAVE_STATUS_GET_EXECZ__VI(sq_wave_status)                                               \
  ((sq_wave_status & SQ_WAVE_STATUS_EXECZ_MASK) >> SQ_WAVE_STATUS_EXECZ_SHIFT)

#define SQ_WAVE_STATUS_GET_EXPORT_RDY__VI(sq_wave_status)                                          \
  ((sq_wave_status & SQ_WAVE_STATUS_EXPORT_RDY_MASK) >> SQ_WAVE_STATUS_EXPORT_RDY_SHIFT)

#define SQ_WAVE_STATUS_GET_HALT__VI(sq_wave_status)                                                \
  ((sq_wave_status & SQ_WAVE_STATUS_HALT_MASK) >> SQ_WAVE_STATUS_HALT_SHIFT)

#define SQ_WAVE_STATUS_GET_INST_ATC__VI(sq_wave_status)                                            \
  ((sq_wave_status & SQ_WAVE_STATUS_INST_ATC_MASK) >> SQ_WAVE_STATUS_INST_ATC_SHIFT)

#define SQ_WAVE_STATUS_GET_IN_BARRIER__VI(sq_wave_status)                                          \
  ((sq_wave_status & SQ_WAVE_STATUS_IN_BARRIER_MASK) >> SQ_WAVE_STATUS_IN_BARRIER_SHIFT)

#define SQ_WAVE_STATUS_GET_IN_TG__VI(sq_wave_status)                                               \
  ((sq_wave_status & SQ_WAVE_STATUS_IN_TG_MASK) >> SQ_WAVE_STATUS_IN_TG_SHIFT)

#define SQ_WAVE_STATUS_GET_MUST_EXPORT__VI(sq_wave_status)                                         \
  ((sq_wave_status & SQ_WAVE_STATUS_MUST_EXPORT_MASK) >> SQ_WAVE_STATUS_MUST_EXPORT_SHIFT)

#define SQ_WAVE_STATUS_GET_PERF_EN__VI(sq_wave_status)                                             \
  ((sq_wave_status & SQ_WAVE_STATUS_PERF_EN_MASK) >> SQ_WAVE_STATUS_PERF_EN_SHIFT)

#define SQ_WAVE_STATUS_GET_PRIV__VI(sq_wave_status)                                                \
  ((sq_wave_status & SQ_WAVE_STATUS_PRIV_MASK) >> SQ_WAVE_STATUS_PRIV_SHIFT)

#define SQ_WAVE_STATUS_GET_SCC__VI(sq_wave_status)                                                 \
  ((sq_wave_status & SQ_WAVE_STATUS_SCC_MASK) >> SQ_WAVE_STATUS_SCC_SHIFT)

#define SQ_WAVE_STATUS_GET_SKIP_EXPORT__VI(sq_wave_status)                                         \
  ((sq_wave_status & SQ_WAVE_STATUS_SKIP_EXPORT_MASK) >> SQ_WAVE_STATUS_SKIP_EXPORT_SHIFT)

#define SQ_WAVE_STATUS_GET_SPI_PRIO__VI(sq_wave_status)                                            \
  ((sq_wave_status & SQ_WAVE_STATUS_SPI_PRIO_MASK) >> SQ_WAVE_STATUS_SPI_PRIO_SHIFT)

#define SQ_WAVE_STATUS_GET_TRAP__VI(sq_wave_status)                                                \
  ((sq_wave_status & SQ_WAVE_STATUS_TRAP_MASK) >> SQ_WAVE_STATUS_TRAP_SHIFT)

#define SQ_WAVE_STATUS_GET_TRAP_EN__VI(sq_wave_status)                                             \
  ((sq_wave_status & SQ_WAVE_STATUS_TRAP_EN_MASK) >> SQ_WAVE_STATUS_TRAP_EN_SHIFT)

#define SQ_WAVE_STATUS_GET_TTRACE_CU_EN__VI(sq_wave_status)                                        \
  ((sq_wave_status & SQ_WAVE_STATUS_TTRACE_CU_EN_MASK) >> SQ_WAVE_STATUS_TTRACE_CU_EN_SHIFT)

#define SQ_WAVE_STATUS_GET_TTRACE_EN__VI(sq_wave_status)                                           \
  ((sq_wave_status & SQ_WAVE_STATUS_TTRACE_EN_MASK) >> SQ_WAVE_STATUS_TTRACE_EN_SHIFT)

#define SQ_WAVE_STATUS_GET_USER_PRIO__VI(sq_wave_status)                                           \
  ((sq_wave_status & SQ_WAVE_STATUS_USER_PRIO_MASK) >> SQ_WAVE_STATUS_USER_PRIO_SHIFT)

#define SQ_WAVE_STATUS_GET_VALID__VI(sq_wave_status)                                               \
  ((sq_wave_status & SQ_WAVE_STATUS_VALID_MASK) >> SQ_WAVE_STATUS_VALID_SHIFT)

#define SQ_WAVE_STATUS_GET_VCCZ__VI(sq_wave_status)                                                \
  ((sq_wave_status & SQ_WAVE_STATUS_VCCZ_MASK) >> SQ_WAVE_STATUS_VCCZ_SHIFT)

#define SQ_WAVE_STATUS_MASK__VI                                                                    \
  (SQ_WAVE_STATUS_SCC_MASK | SQ_WAVE_STATUS_SPI_PRIO_MASK | SQ_WAVE_STATUS_USER_PRIO_MASK |        \
   SQ_WAVE_STATUS_PRIV_MASK | SQ_WAVE_STATUS_TRAP_EN_MASK | SQ_WAVE_STATUS_TTRACE_EN_MASK |        \
   SQ_WAVE_STATUS_EXPORT_RDY_MASK | SQ_WAVE_STATUS_EXECZ_MASK | SQ_WAVE_STATUS_VCCZ_MASK |         \
   SQ_WAVE_STATUS_IN_TG_MASK | SQ_WAVE_STATUS_IN_BARRIER_MASK | SQ_WAVE_STATUS_HALT_MASK |         \
   SQ_WAVE_STATUS_TRAP_MASK | SQ_WAVE_STATUS_TTRACE_CU_EN_MASK | SQ_WAVE_STATUS_VALID_MASK |       \
   SQ_WAVE_STATUS_ECC_ERR_MASK | SQ_WAVE_STATUS_SKIP_EXPORT_MASK | SQ_WAVE_STATUS_PERF_EN_MASK |   \
   SQ_WAVE_STATUS_COND_DBG_USER_MASK | SQ_WAVE_STATUS_COND_DBG_SYS_MASK |                          \
   SQ_WAVE_STATUS_ALLOW_REPLAY_MASK | SQ_WAVE_STATUS_INST_ATC_MASK |                               \
   SQ_WAVE_STATUS_MUST_EXPORT_MASK)

#define SQ_WAVE_STATUS_SET_ALLOW_REPLAY__VI(sq_wave_status_reg, allow_replay)                      \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_ALLOW_REPLAY_MASK) |                  \
      (allow_replay << SQ_WAVE_STATUS_ALLOW_REPLAY_SHIFT)

#define SQ_WAVE_STATUS_SET_COND_DBG_SYS__VI(sq_wave_status_reg, cond_dbg_sys)                      \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_COND_DBG_SYS_MASK) |                  \
      (cond_dbg_sys << SQ_WAVE_STATUS_COND_DBG_SYS_SHIFT)

#define SQ_WAVE_STATUS_SET_COND_DBG_USER__VI(sq_wave_status_reg, cond_dbg_user)                    \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_COND_DBG_USER_MASK) |                 \
      (cond_dbg_user << SQ_WAVE_STATUS_COND_DBG_USER_SHIFT)

#define SQ_WAVE_STATUS_SET_ECC_ERR__VI(sq_wave_status_reg, ecc_err)                                \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_ECC_ERR_MASK) |                       \
      (ecc_err << SQ_WAVE_STATUS_ECC_ERR_SHIFT)

#define SQ_WAVE_STATUS_SET_EXECZ__VI(sq_wave_status_reg, execz)                                    \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_EXECZ_MASK) | (execz << SQ_WAVE_STATUS_EXECZ_SHIFT)

#define SQ_WAVE_STATUS_SET_EXPORT_RDY__VI(sq_wave_status_reg, export_rdy)                          \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_EXPORT_RDY_MASK) |                    \
      (export_rdy << SQ_WAVE_STATUS_EXPORT_RDY_SHIFT)

#define SQ_WAVE_STATUS_SET_HALT__VI(sq_wave_status_reg, halt)                                      \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_HALT_MASK) | (halt << SQ_WAVE_STATUS_HALT_SHIFT)

#define SQ_WAVE_STATUS_SET_INST_ATC__VI(sq_wave_status_reg, inst_atc)                              \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_INST_ATC_MASK) |                      \
      (inst_atc << SQ_WAVE_STATUS_INST_ATC_SHIFT)

#define SQ_WAVE_STATUS_SET_IN_BARRIER__VI(sq_wave_status_reg, in_barrier)                          \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_IN_BARRIER_MASK) |                    \
      (in_barrier << SQ_WAVE_STATUS_IN_BARRIER_SHIFT)

#define SQ_WAVE_STATUS_SET_IN_TG__VI(sq_wave_status_reg, in_tg)                                    \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_IN_TG_MASK) | (in_tg << SQ_WAVE_STATUS_IN_TG_SHIFT)

#define SQ_WAVE_STATUS_SET_MUST_EXPORT__VI(sq_wave_status_reg, must_export)                        \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_MUST_EXPORT_MASK) |                   \
      (must_export << SQ_WAVE_STATUS_MUST_EXPORT_SHIFT)

#define SQ_WAVE_STATUS_SET_PERF_EN__VI(sq_wave_status_reg, perf_en)                                \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_PERF_EN_MASK) |                       \
      (perf_en << SQ_WAVE_STATUS_PERF_EN_SHIFT)

#define SQ_WAVE_STATUS_SET_PRIV__VI(sq_wave_status_reg, priv)                                      \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_PRIV_MASK) | (priv << SQ_WAVE_STATUS_PRIV_SHIFT)

#define SQ_WAVE_STATUS_SET_SCC__VI(sq_wave_status_reg, scc)                                        \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_SCC_MASK) | (scc << SQ_WAVE_STATUS_SCC_SHIFT)

#define SQ_WAVE_STATUS_SET_SKIP_EXPORT__VI(sq_wave_status_reg, skip_export)                        \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_SKIP_EXPORT_MASK) |                   \
      (skip_export << SQ_WAVE_STATUS_SKIP_EXPORT_SHIFT)

#define SQ_WAVE_STATUS_SET_SPI_PRIO__VI(sq_wave_status_reg, spi_prio)                              \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_SPI_PRIO_MASK) |                      \
      (spi_prio << SQ_WAVE_STATUS_SPI_PRIO_SHIFT)

#define SQ_WAVE_STATUS_SET_TRAP__VI(sq_wave_status_reg, trap)                                      \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_TRAP_MASK) | (trap << SQ_WAVE_STATUS_TRAP_SHIFT)

#define SQ_WAVE_STATUS_SET_TRAP_EN__VI(sq_wave_status_reg, trap_en)                                \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_TRAP_EN_MASK) |                       \
      (trap_en << SQ_WAVE_STATUS_TRAP_EN_SHIFT)

#define SQ_WAVE_STATUS_SET_TTRACE_CU_EN__VI(sq_wave_status_reg, ttrace_cu_en)                      \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_TTRACE_CU_EN_MASK) |                  \
      (ttrace_cu_en << SQ_WAVE_STATUS_TTRACE_CU_EN_SHIFT)

#define SQ_WAVE_STATUS_SET_TTRACE_EN__VI(sq_wave_status_reg, ttrace_en)                            \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_TTRACE_EN_MASK) |                     \
      (ttrace_en << SQ_WAVE_STATUS_TTRACE_EN_SHIFT)

#define SQ_WAVE_STATUS_SET_USER_PRIO__VI(sq_wave_status_reg, user_prio)                            \
  sq_wave_status_reg = (sq_wave_status_reg & ~SQ_WAVE_STATUS_USER_PRIO_MASK) |                     \
      (user_prio << SQ_WAVE_STATUS_USER_PRIO_SHIFT)

#define SQ_WAVE_STATUS_SET_VALID__VI(sq_wave_status_reg, valid)                                    \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_VALID_MASK) | (valid << SQ_WAVE_STATUS_VALID_SHIFT)

#define SQ_WAVE_STATUS_SET_VCCZ__VI(sq_wave_status_reg, vccz)                                      \
  sq_wave_status_reg =                                                                             \
      (sq_wave_status_reg & ~SQ_WAVE_STATUS_VCCZ_MASK) | (vccz << SQ_WAVE_STATUS_VCCZ_SHIFT)

#define SQ_WAVE_STATUS_USER_PRIO_MASK__VI 0x00000018
#define SQ_WAVE_STATUS_USER_PRIO_SHIFT__VI 3
#define SQ_WAVE_STATUS_USER_PRIO_SIZE__VI 2
#define SQ_WAVE_TBA_HI_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TBA_HI_DEFAULT__VI 0x000000cd
#define SQ_WAVE_TBA_HI_GET_ADDR_HI__VI(sq_wave_tba_hi)                                             \
  ((sq_wave_tba_hi & SQ_WAVE_TBA_HI_ADDR_HI_MASK) >> SQ_WAVE_TBA_HI_ADDR_HI_SHIFT)

#define SQ_WAVE_TBA_HI_MASK__VI (SQ_WAVE_TBA_HI_ADDR_HI_MASK)

#define SQ_WAVE_TBA_HI_SET_ADDR_HI__VI(sq_wave_tba_hi_reg, addr_hi)                                \
  sq_wave_tba_hi_reg = (sq_wave_tba_hi_reg & ~SQ_WAVE_TBA_HI_ADDR_HI_MASK) |                       \
      (addr_hi << SQ_WAVE_TBA_HI_ADDR_HI_SHIFT)

#define SQ_WAVE_TBA_LO_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TBA_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TBA_LO_GET_ADDR_LO__VI(sq_wave_tba_lo)                                             \
  ((sq_wave_tba_lo & SQ_WAVE_TBA_LO_ADDR_LO_MASK) >> SQ_WAVE_TBA_LO_ADDR_LO_SHIFT)

#define SQ_WAVE_TBA_LO_MASK__VI (SQ_WAVE_TBA_LO_ADDR_LO_MASK)

#define SQ_WAVE_TBA_LO_SET_ADDR_LO__VI(sq_wave_tba_lo_reg, addr_lo)                                \
  sq_wave_tba_lo_reg = (sq_wave_tba_lo_reg & ~SQ_WAVE_TBA_LO_ADDR_LO_MASK) |                       \
      (addr_lo << SQ_WAVE_TBA_LO_ADDR_LO_SHIFT)

#define SQ_WAVE_TMA_HI_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TMA_HI_DEFAULT__VI 0x000000cd
#define SQ_WAVE_TMA_HI_GET_ADDR_HI__VI(sq_wave_tma_hi)                                             \
  ((sq_wave_tma_hi & SQ_WAVE_TMA_HI_ADDR_HI_MASK) >> SQ_WAVE_TMA_HI_ADDR_HI_SHIFT)

#define SQ_WAVE_TMA_HI_MASK__VI (SQ_WAVE_TMA_HI_ADDR_HI_MASK)

#define SQ_WAVE_TMA_HI_SET_ADDR_HI__VI(sq_wave_tma_hi_reg, addr_hi)                                \
  sq_wave_tma_hi_reg = (sq_wave_tma_hi_reg & ~SQ_WAVE_TMA_HI_ADDR_HI_MASK) |                       \
      (addr_hi << SQ_WAVE_TMA_HI_ADDR_HI_SHIFT)

#define SQ_WAVE_TMA_LO_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TMA_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TMA_LO_GET_ADDR_LO__VI(sq_wave_tma_lo)                                             \
  ((sq_wave_tma_lo & SQ_WAVE_TMA_LO_ADDR_LO_MASK) >> SQ_WAVE_TMA_LO_ADDR_LO_SHIFT)

#define SQ_WAVE_TMA_LO_MASK__VI (SQ_WAVE_TMA_LO_ADDR_LO_MASK)

#define SQ_WAVE_TMA_LO_SET_ADDR_LO__VI(sq_wave_tma_lo_reg, addr_lo)                                \
  sq_wave_tma_lo_reg = (sq_wave_tma_lo_reg & ~SQ_WAVE_TMA_LO_ADDR_LO_MASK) |                       \
      (addr_lo << SQ_WAVE_TMA_LO_ADDR_LO_SHIFT)

#define SQ_WAVE_TRAPSTS_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TRAPSTS_DEFAULT__VI 0xc00d05cd
#define SQ_WAVE_TRAPSTS_GET_DP_RATE__VI(sq_wave_trapsts)                                           \
  ((sq_wave_trapsts & SQ_WAVE_TRAPSTS_DP_RATE_MASK) >> SQ_WAVE_TRAPSTS_DP_RATE_SHIFT)

#define SQ_WAVE_TRAPSTS_GET_EXCP__VI(sq_wave_trapsts)                                              \
  ((sq_wave_trapsts & SQ_WAVE_TRAPSTS_EXCP_MASK) >> SQ_WAVE_TRAPSTS_EXCP_SHIFT)

#define SQ_WAVE_TRAPSTS_GET_EXCP_CYCLE__VI(sq_wave_trapsts)                                        \
  ((sq_wave_trapsts & SQ_WAVE_TRAPSTS_EXCP_CYCLE_MASK) >> SQ_WAVE_TRAPSTS_EXCP_CYCLE_SHIFT)

#define SQ_WAVE_TRAPSTS_GET_SAVECTX__VI(sq_wave_trapsts)                                           \
  ((sq_wave_trapsts & SQ_WAVE_TRAPSTS_SAVECTX_MASK) >> SQ_WAVE_TRAPSTS_SAVECTX_SHIFT)

#define SQ_WAVE_TRAPSTS_MASK__VI                                                                   \
  (SQ_WAVE_TRAPSTS_EXCP_MASK | SQ_WAVE_TRAPSTS_SAVECTX_MASK | SQ_WAVE_TRAPSTS_EXCP_CYCLE_MASK |    \
   SQ_WAVE_TRAPSTS_DP_RATE_MASK)

#define SQ_WAVE_TRAPSTS_SAVECTX_MASK__VI 0x00000400
#define SQ_WAVE_TRAPSTS_SAVECTX_SHIFT__VI 10
#define SQ_WAVE_TRAPSTS_SAVECTX_SIZE__VI 1
#define SQ_WAVE_TRAPSTS_SET_DP_RATE__VI(sq_wave_trapsts_reg, dp_rate)                              \
  sq_wave_trapsts_reg = (sq_wave_trapsts_reg & ~SQ_WAVE_TRAPSTS_DP_RATE_MASK) |                    \
      (dp_rate << SQ_WAVE_TRAPSTS_DP_RATE_SHIFT)

#define SQ_WAVE_TRAPSTS_SET_EXCP__VI(sq_wave_trapsts_reg, excp)                                    \
  sq_wave_trapsts_reg =                                                                            \
      (sq_wave_trapsts_reg & ~SQ_WAVE_TRAPSTS_EXCP_MASK) | (excp << SQ_WAVE_TRAPSTS_EXCP_SHIFT)

#define SQ_WAVE_TRAPSTS_SET_EXCP_CYCLE__VI(sq_wave_trapsts_reg, excp_cycle)                        \
  sq_wave_trapsts_reg = (sq_wave_trapsts_reg & ~SQ_WAVE_TRAPSTS_EXCP_CYCLE_MASK) |                 \
      (excp_cycle << SQ_WAVE_TRAPSTS_EXCP_CYCLE_SHIFT)

#define SQ_WAVE_TRAPSTS_SET_SAVECTX__VI(sq_wave_trapsts_reg, savectx)                              \
  sq_wave_trapsts_reg = (sq_wave_trapsts_reg & ~SQ_WAVE_TRAPSTS_SAVECTX_MASK) |                    \
      (savectx << SQ_WAVE_TRAPSTS_SAVECTX_SHIFT)

#define SQ_WAVE_TTMP0_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP0_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP0_GET_DATA__VI(sq_wave_ttmp0)                                                  \
  ((sq_wave_ttmp0 & SQ_WAVE_TTMP0_DATA_MASK) >> SQ_WAVE_TTMP0_DATA_SHIFT)

#define SQ_WAVE_TTMP0_MASK__VI (SQ_WAVE_TTMP0_DATA_MASK)

#define SQ_WAVE_TTMP0_SET_DATA__VI(sq_wave_ttmp0_reg, data)                                        \
  sq_wave_ttmp0_reg =                                                                              \
      (sq_wave_ttmp0_reg & ~SQ_WAVE_TTMP0_DATA_MASK) | (data << SQ_WAVE_TTMP0_DATA_SHIFT)

#define SQ_WAVE_TTMP10_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP10_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP10_GET_DATA__VI(sq_wave_ttmp10)                                                \
  ((sq_wave_ttmp10 & SQ_WAVE_TTMP10_DATA_MASK) >> SQ_WAVE_TTMP10_DATA_SHIFT)

#define SQ_WAVE_TTMP10_MASK__VI (SQ_WAVE_TTMP10_DATA_MASK)

#define SQ_WAVE_TTMP10_SET_DATA__VI(sq_wave_ttmp10_reg, data)                                      \
  sq_wave_ttmp10_reg =                                                                             \
      (sq_wave_ttmp10_reg & ~SQ_WAVE_TTMP10_DATA_MASK) | (data << SQ_WAVE_TTMP10_DATA_SHIFT)

#define SQ_WAVE_TTMP11_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP11_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP11_GET_DATA__VI(sq_wave_ttmp11)                                                \
  ((sq_wave_ttmp11 & SQ_WAVE_TTMP11_DATA_MASK) >> SQ_WAVE_TTMP11_DATA_SHIFT)

#define SQ_WAVE_TTMP11_MASK__VI (SQ_WAVE_TTMP11_DATA_MASK)

#define SQ_WAVE_TTMP11_SET_DATA__VI(sq_wave_ttmp11_reg, data)                                      \
  sq_wave_ttmp11_reg =                                                                             \
      (sq_wave_ttmp11_reg & ~SQ_WAVE_TTMP11_DATA_MASK) | (data << SQ_WAVE_TTMP11_DATA_SHIFT)

#define SQ_WAVE_TTMP1_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP1_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP1_GET_DATA__VI(sq_wave_ttmp1)                                                  \
  ((sq_wave_ttmp1 & SQ_WAVE_TTMP1_DATA_MASK) >> SQ_WAVE_TTMP1_DATA_SHIFT)

#define SQ_WAVE_TTMP1_MASK__VI (SQ_WAVE_TTMP1_DATA_MASK)

#define SQ_WAVE_TTMP1_SET_DATA__VI(sq_wave_ttmp1_reg, data)                                        \
  sq_wave_ttmp1_reg =                                                                              \
      (sq_wave_ttmp1_reg & ~SQ_WAVE_TTMP1_DATA_MASK) | (data << SQ_WAVE_TTMP1_DATA_SHIFT)

#define SQ_WAVE_TTMP2_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP2_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP2_GET_DATA__VI(sq_wave_ttmp2)                                                  \
  ((sq_wave_ttmp2 & SQ_WAVE_TTMP2_DATA_MASK) >> SQ_WAVE_TTMP2_DATA_SHIFT)

#define SQ_WAVE_TTMP2_MASK__VI (SQ_WAVE_TTMP2_DATA_MASK)

#define SQ_WAVE_TTMP2_SET_DATA__VI(sq_wave_ttmp2_reg, data)                                        \
  sq_wave_ttmp2_reg =                                                                              \
      (sq_wave_ttmp2_reg & ~SQ_WAVE_TTMP2_DATA_MASK) | (data << SQ_WAVE_TTMP2_DATA_SHIFT)

#define SQ_WAVE_TTMP3_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP3_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP3_GET_DATA__VI(sq_wave_ttmp3)                                                  \
  ((sq_wave_ttmp3 & SQ_WAVE_TTMP3_DATA_MASK) >> SQ_WAVE_TTMP3_DATA_SHIFT)

#define SQ_WAVE_TTMP3_MASK__VI (SQ_WAVE_TTMP3_DATA_MASK)

#define SQ_WAVE_TTMP3_SET_DATA__VI(sq_wave_ttmp3_reg, data)                                        \
  sq_wave_ttmp3_reg =                                                                              \
      (sq_wave_ttmp3_reg & ~SQ_WAVE_TTMP3_DATA_MASK) | (data << SQ_WAVE_TTMP3_DATA_SHIFT)

#define SQ_WAVE_TTMP4_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP4_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP4_GET_DATA__VI(sq_wave_ttmp4)                                                  \
  ((sq_wave_ttmp4 & SQ_WAVE_TTMP4_DATA_MASK) >> SQ_WAVE_TTMP4_DATA_SHIFT)

#define SQ_WAVE_TTMP4_MASK__VI (SQ_WAVE_TTMP4_DATA_MASK)

#define SQ_WAVE_TTMP4_SET_DATA__VI(sq_wave_ttmp4_reg, data)                                        \
  sq_wave_ttmp4_reg =                                                                              \
      (sq_wave_ttmp4_reg & ~SQ_WAVE_TTMP4_DATA_MASK) | (data << SQ_WAVE_TTMP4_DATA_SHIFT)

#define SQ_WAVE_TTMP5_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP5_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP5_GET_DATA__VI(sq_wave_ttmp5)                                                  \
  ((sq_wave_ttmp5 & SQ_WAVE_TTMP5_DATA_MASK) >> SQ_WAVE_TTMP5_DATA_SHIFT)

#define SQ_WAVE_TTMP5_MASK__VI (SQ_WAVE_TTMP5_DATA_MASK)

#define SQ_WAVE_TTMP5_SET_DATA__VI(sq_wave_ttmp5_reg, data)                                        \
  sq_wave_ttmp5_reg =                                                                              \
      (sq_wave_ttmp5_reg & ~SQ_WAVE_TTMP5_DATA_MASK) | (data << SQ_WAVE_TTMP5_DATA_SHIFT)

#define SQ_WAVE_TTMP6_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP6_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP6_GET_DATA__VI(sq_wave_ttmp6)                                                  \
  ((sq_wave_ttmp6 & SQ_WAVE_TTMP6_DATA_MASK) >> SQ_WAVE_TTMP6_DATA_SHIFT)

#define SQ_WAVE_TTMP6_MASK__VI (SQ_WAVE_TTMP6_DATA_MASK)

#define SQ_WAVE_TTMP6_SET_DATA__VI(sq_wave_ttmp6_reg, data)                                        \
  sq_wave_ttmp6_reg =                                                                              \
      (sq_wave_ttmp6_reg & ~SQ_WAVE_TTMP6_DATA_MASK) | (data << SQ_WAVE_TTMP6_DATA_SHIFT)

#define SQ_WAVE_TTMP7_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP7_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP7_GET_DATA__VI(sq_wave_ttmp7)                                                  \
  ((sq_wave_ttmp7 & SQ_WAVE_TTMP7_DATA_MASK) >> SQ_WAVE_TTMP7_DATA_SHIFT)

#define SQ_WAVE_TTMP7_MASK__VI (SQ_WAVE_TTMP7_DATA_MASK)

#define SQ_WAVE_TTMP7_SET_DATA__VI(sq_wave_ttmp7_reg, data)                                        \
  sq_wave_ttmp7_reg =                                                                              \
      (sq_wave_ttmp7_reg & ~SQ_WAVE_TTMP7_DATA_MASK) | (data << SQ_WAVE_TTMP7_DATA_SHIFT)

#define SQ_WAVE_TTMP8_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP8_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP8_GET_DATA__VI(sq_wave_ttmp8)                                                  \
  ((sq_wave_ttmp8 & SQ_WAVE_TTMP8_DATA_MASK) >> SQ_WAVE_TTMP8_DATA_SHIFT)

#define SQ_WAVE_TTMP8_MASK__VI (SQ_WAVE_TTMP8_DATA_MASK)

#define SQ_WAVE_TTMP8_SET_DATA__VI(sq_wave_ttmp8_reg, data)                                        \
  sq_wave_ttmp8_reg =                                                                              \
      (sq_wave_ttmp8_reg & ~SQ_WAVE_TTMP8_DATA_MASK) | (data << SQ_WAVE_TTMP8_DATA_SHIFT)

#define SQ_WAVE_TTMP9_DEFAULT__SI__CI 0x00000000
#define SQ_WAVE_TTMP9_DEFAULT__VI 0xcdcdcdcd
#define SQ_WAVE_TTMP9_GET_DATA__VI(sq_wave_ttmp9)                                                  \
  ((sq_wave_ttmp9 & SQ_WAVE_TTMP9_DATA_MASK) >> SQ_WAVE_TTMP9_DATA_SHIFT)

#define SQ_WAVE_TTMP9_MASK__VI (SQ_WAVE_TTMP9_DATA_MASK)

#define SQ_WAVE_TTMP9_SET_DATA__VI(sq_wave_ttmp9_reg, data)                                        \
  sq_wave_ttmp9_reg =                                                                              \
      (sq_wave_ttmp9_reg & ~SQ_WAVE_TTMP9_DATA_MASK) | (data << SQ_WAVE_TTMP9_DATA_SHIFT)

#define SQ_WREXEC_EXEC_HI_ADDR_HI_MASK__VI 0x0000ffff
#define SQ_WREXEC_EXEC_HI_ADDR_HI_SHIFT__VI 0x00000000
#define SQ_WREXEC_EXEC_HI_ADDR_HI_SIZE__VI 16
#define SQ_WREXEC_EXEC_HI_ATC_MASK__VI 0x08000000
#define SQ_WREXEC_EXEC_HI_ATC_SHIFT__VI 27
#define SQ_WREXEC_EXEC_HI_ATC_SIZE__VI 1
#define SQ_WREXEC_EXEC_HI_DEFAULT__VI 0xcc00cdcd
#define SQ_WREXEC_EXEC_HI_FIRST_WAVE_MASK__VI 0x04000000
#define SQ_WREXEC_EXEC_HI_FIRST_WAVE_SHIFT__VI 26
#define SQ_WREXEC_EXEC_HI_FIRST_WAVE_SIZE__VI 1
#define SQ_WREXEC_EXEC_HI_GET_ADDR_HI__VI(sq_wrexec_exec_hi)                                       \
  ((sq_wrexec_exec_hi & SQ_WREXEC_EXEC_HI_ADDR_HI_MASK) >> SQ_WREXEC_EXEC_HI_ADDR_HI_SHIFT)

#define SQ_WREXEC_EXEC_HI_GET_ATC__VI(sq_wrexec_exec_hi)                                           \
  ((sq_wrexec_exec_hi & SQ_WREXEC_EXEC_HI_ATC_MASK) >> SQ_WREXEC_EXEC_HI_ATC_SHIFT)

#define SQ_WREXEC_EXEC_HI_GET_FIRST_WAVE__VI(sq_wrexec_exec_hi)                                    \
  ((sq_wrexec_exec_hi & SQ_WREXEC_EXEC_HI_FIRST_WAVE_MASK) >> SQ_WREXEC_EXEC_HI_FIRST_WAVE_SHIFT)

#define SQ_WREXEC_EXEC_HI_GET_MSB__VI(sq_wrexec_exec_hi)                                           \
  ((sq_wrexec_exec_hi & SQ_WREXEC_EXEC_HI_MSB_MASK) >> SQ_WREXEC_EXEC_HI_MSB_SHIFT)

#define SQ_WREXEC_EXEC_HI_GET_MTYPE__VI(sq_wrexec_exec_hi)                                         \
  ((sq_wrexec_exec_hi & SQ_WREXEC_EXEC_HI_MTYPE_MASK) >> SQ_WREXEC_EXEC_HI_MTYPE_SHIFT)

#define SQ_WREXEC_EXEC_HI_MASK__VI                                                                 \
  (SQ_WREXEC_EXEC_HI_ADDR_HI_MASK | SQ_WREXEC_EXEC_HI_FIRST_WAVE_MASK |                            \
   SQ_WREXEC_EXEC_HI_ATC_MASK | SQ_WREXEC_EXEC_HI_MTYPE_MASK | SQ_WREXEC_EXEC_HI_MSB_MASK)

#define SQ_WREXEC_EXEC_HI_MSB_MASK__VI 0x80000000
#define SQ_WREXEC_EXEC_HI_MSB_SHIFT__VI 31
#define SQ_WREXEC_EXEC_HI_MSB_SIZE__VI 1
#define SQ_WREXEC_EXEC_HI_MTYPE_MASK__VI 0x70000000
#define SQ_WREXEC_EXEC_HI_MTYPE_SHIFT__VI 28
#define SQ_WREXEC_EXEC_HI_MTYPE_SIZE__VI 3
#define SQ_WREXEC_EXEC_HI_REG_SIZE__VI 32
#define SQ_WREXEC_EXEC_HI_SET_ADDR_HI__VI(sq_wrexec_exec_hi_reg, addr_hi)                          \
  sq_wrexec_exec_hi_reg = (sq_wrexec_exec_hi_reg & ~SQ_WREXEC_EXEC_HI_ADDR_HI_MASK) |              \
      (addr_hi << SQ_WREXEC_EXEC_HI_ADDR_HI_SHIFT)

#define SQ_WREXEC_EXEC_HI_SET_ATC__VI(sq_wrexec_exec_hi_reg, atc)                                  \
  sq_wrexec_exec_hi_reg =                                                                          \
      (sq_wrexec_exec_hi_reg & ~SQ_WREXEC_EXEC_HI_ATC_MASK) | (atc << SQ_WREXEC_EXEC_HI_ATC_SHIFT)

#define SQ_WREXEC_EXEC_HI_SET_FIRST_WAVE__VI(sq_wrexec_exec_hi_reg, first_wave)                    \
  sq_wrexec_exec_hi_reg = (sq_wrexec_exec_hi_reg & ~SQ_WREXEC_EXEC_HI_FIRST_WAVE_MASK) |           \
      (first_wave << SQ_WREXEC_EXEC_HI_FIRST_WAVE_SHIFT)

#define SQ_WREXEC_EXEC_HI_SET_MSB__VI(sq_wrexec_exec_hi_reg, msb)                                  \
  sq_wrexec_exec_hi_reg =                                                                          \
      (sq_wrexec_exec_hi_reg & ~SQ_WREXEC_EXEC_HI_MSB_MASK) | (msb << SQ_WREXEC_EXEC_HI_MSB_SHIFT)

#define SQ_WREXEC_EXEC_HI_SET_MTYPE__VI(sq_wrexec_exec_hi_reg, mtype)                              \
  sq_wrexec_exec_hi_reg = (sq_wrexec_exec_hi_reg & ~SQ_WREXEC_EXEC_HI_MTYPE_MASK) |                \
      (mtype << SQ_WREXEC_EXEC_HI_MTYPE_SHIFT)

#define SQ_WREXEC_EXEC_LO_ADDR_LO_MASK__VI 0xffffffff
#define SQ_WREXEC_EXEC_LO_ADDR_LO_SHIFT__VI 0x00000000
#define SQ_WREXEC_EXEC_LO_ADDR_LO_SIZE__VI 32
#define SQ_WREXEC_EXEC_LO_DEFAULT__VI 0xcdcdcdcd
#define SQ_WREXEC_EXEC_LO_GET_ADDR_LO__VI(sq_wrexec_exec_lo)                                       \
  ((sq_wrexec_exec_lo & SQ_WREXEC_EXEC_LO_ADDR_LO_MASK) >> SQ_WREXEC_EXEC_LO_ADDR_LO_SHIFT)

#define SQ_WREXEC_EXEC_LO_MASK__VI (SQ_WREXEC_EXEC_LO_ADDR_LO_MASK)

#define SQ_WREXEC_EXEC_LO_REG_SIZE__VI 32
#define SQ_WREXEC_EXEC_LO_SET_ADDR_LO__VI(sq_wrexec_exec_lo_reg, addr_lo)                          \
  sq_wrexec_exec_lo_reg = (sq_wrexec_exec_lo_reg & ~SQ_WREXEC_EXEC_LO_ADDR_LO_MASK) |              \
      (addr_lo << SQ_WREXEC_EXEC_LO_ADDR_LO_SHIFT)

#define USER_SQC_BANK_DISABLE_GET_SQC0_BANK_DISABLE__VI(user_sqc_bank_disable)                     \
  ((user_sqc_bank_disable & USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK) >>                       \
   USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SHIFT)

#define USER_SQC_BANK_DISABLE_GET_SQC1_BANK_DISABLE__VI(user_sqc_bank_disable)                     \
  ((user_sqc_bank_disable & USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK) >>                       \
   USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SHIFT)

#define USER_SQC_BANK_DISABLE_GET_SQC2_BANK_DISABLE__VI(user_sqc_bank_disable)                     \
  ((user_sqc_bank_disable & USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK) >>                       \
   USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SHIFT)

#define USER_SQC_BANK_DISABLE_GET_SQC3_BANK_DISABLE__VI(user_sqc_bank_disable)                     \
  ((user_sqc_bank_disable & USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK) >>                       \
   USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SHIFT)

#define USER_SQC_BANK_DISABLE_MASK__VI                                                             \
  (USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK | USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK |   \
   USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK | USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK)

#define USER_SQC_BANK_DISABLE_SET_SQC0_BANK_DISABLE__VI(user_sqc_bank_disable_reg,                 \
                                                        sqc0_bank_disable)                         \
  user_sqc_bank_disable_reg =                                                                      \
      (user_sqc_bank_disable_reg & ~USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_MASK) |                \
      (sqc0_bank_disable << USER_SQC_BANK_DISABLE_SQC0_BANK_DISABLE_SHIFT)

#define USER_SQC_BANK_DISABLE_SET_SQC1_BANK_DISABLE__VI(user_sqc_bank_disable_reg,                 \
                                                        sqc1_bank_disable)                         \
  user_sqc_bank_disable_reg =                                                                      \
      (user_sqc_bank_disable_reg & ~USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_MASK) |                \
      (sqc1_bank_disable << USER_SQC_BANK_DISABLE_SQC1_BANK_DISABLE_SHIFT)

#define USER_SQC_BANK_DISABLE_SET_SQC2_BANK_DISABLE__VI(user_sqc_bank_disable_reg,                 \
                                                        sqc2_bank_disable)                         \
  user_sqc_bank_disable_reg =                                                                      \
      (user_sqc_bank_disable_reg & ~USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_MASK) |                \
      (sqc2_bank_disable << USER_SQC_BANK_DISABLE_SQC2_BANK_DISABLE_SHIFT)

#define USER_SQC_BANK_DISABLE_SET_SQC3_BANK_DISABLE__VI(user_sqc_bank_disable_reg,                 \
                                                        sqc3_bank_disable)                         \
  user_sqc_bank_disable_reg =                                                                      \
      (user_sqc_bank_disable_reg & ~USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_MASK) |                \
      (sqc3_bank_disable << USER_SQC_BANK_DISABLE_SQC3_BANK_DISABLE_SHIFT)


#endif  // SI_CI_VI_merged_sq_reg_HEADER
#ifndef __VI___SI__CI_sq_reg_h
#define __VI___SI__CI_sq_reg_h


// *
// *
// *	 (c) 2014 AMD Inc.  (unpublished)
// *
// *	 All rights reserved.  This notice is intended as a precaution against
// *	 inadvertent publication and does not imply publication or any waiver
// *	 of confidentiality.  The year included in the foregoing notice is the
// *	 year of creation of the work.
//
//
#if defined(LITTLEENDIAN_CPU)
typedef struct _cc_sqc_bank_disable_t {
  unsigned int write_dis : 1;
  unsigned int : 15;
  unsigned int sqc0_bank_disable : 4;
  unsigned int sqc1_bank_disable : 4;
  unsigned int sqc2_bank_disable__CI__VI : 4;
  unsigned int sqc3_bank_disable__CI__VI : 4;
} cc_sqc_bank_disable_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _cc_sqc_bank_disable_t {
  unsigned int sqc3_bank_disable__CI__VI : 4;
  unsigned int sqc2_bank_disable__CI__VI : 4;
  unsigned int sqc1_bank_disable : 4;
  unsigned int sqc0_bank_disable : 4;
  unsigned int : 15;
  unsigned int write_dis : 1;
} cc_sqc_bank_disable_t;

#endif
typedef union {
  unsigned int val : 32;
  cc_sqc_bank_disable_t f;
} cc_sqc_bank_disable_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _cgtt_sq_clk_ctrl_t {
  unsigned int on_delay : 4;
  unsigned int off_hysteresis : 8;
  unsigned int : 17;
  unsigned int perfmon_override__VI : 1;
  unsigned int core_override : 1;
  unsigned int reg_override : 1;
} cgtt_sq_clk_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _cgtt_sq_clk_ctrl_t {
  unsigned int reg_override : 1;
  unsigned int core_override : 1;
  unsigned int perfmon_override__VI : 1;
  unsigned int : 17;
  unsigned int off_hysteresis : 8;
  unsigned int on_delay : 4;
} cgtt_sq_clk_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  cgtt_sq_clk_ctrl_t f;
} cgtt_sq_clk_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _cgtt_sqg_clk_ctrl_t {
  unsigned int on_delay : 4;
  unsigned int off_hysteresis : 8;
  unsigned int : 16;
  unsigned int ttrace_override__VI : 1;
  unsigned int perfmon_override__VI : 1;
  unsigned int core_override : 1;
  unsigned int reg_override : 1;
} cgtt_sqg_clk_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _cgtt_sqg_clk_ctrl_t {
  unsigned int reg_override : 1;
  unsigned int core_override : 1;
  unsigned int perfmon_override__VI : 1;
  unsigned int ttrace_override__VI : 1;
  unsigned int : 16;
  unsigned int off_hysteresis : 8;
  unsigned int on_delay : 4;
} cgtt_sqg_clk_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  cgtt_sqg_clk_ctrl_t f;
} cgtt_sqg_clk_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sh_mem_ape1_base_t { unsigned int base : 32; } sh_mem_ape1_base_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sh_mem_ape1_base_t { unsigned int base : 32; } sh_mem_ape1_base_t;

#endif
typedef union {
  unsigned int val : 32;
  sh_mem_ape1_base_t f;
} sh_mem_ape1_base_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sh_mem_ape1_limit_t { unsigned int limit : 32; } sh_mem_ape1_limit_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sh_mem_ape1_limit_t { unsigned int limit : 32; } sh_mem_ape1_limit_t;

#endif
typedef union {
  unsigned int val : 32;
  sh_mem_ape1_limit_t f;
} sh_mem_ape1_limit_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sh_mem_bases_t {
  unsigned int private_base : 16;
  unsigned int shared_base : 16;
} sh_mem_bases_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sh_mem_bases_t {
  unsigned int shared_base : 16;
  unsigned int private_base : 16;
} sh_mem_bases_t;

#endif
typedef union {
  unsigned int val : 32;
  sh_mem_bases_t f;
} sh_mem_bases_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sh_mem_config_t__SI__CI {
  unsigned int ptr32 : 1;
  unsigned int private_atc : 1;
  unsigned int alignment_mode : 2;
  unsigned int default_mtype : 3;
  unsigned int ape1_mtype : 3;
  unsigned int : 22;
} sh_mem_config_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sh_mem_config_t__SI__CI {
  unsigned int : 22;
  unsigned int ape1_mtype : 3;
  unsigned int default_mtype : 3;
  unsigned int alignment_mode : 2;
  unsigned int private_atc : 1;
  unsigned int ptr32 : 1;
} sh_mem_config_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sh_mem_config_t__SI__CI f;
} sh_mem_config_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sh_mem_config_t__VI {
  unsigned int address_mode : 2;
  unsigned int private_atc : 1;
  unsigned int alignment_mode : 2;
  unsigned int default_mtype : 3;
  unsigned int ape1_mtype : 3;
  unsigned int ape1_atc : 1;
  unsigned int : 20;
} sh_mem_config_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sh_mem_config_t__VI {
  unsigned int : 20;
  unsigned int ape1_atc : 1;
  unsigned int ape1_mtype : 3;
  unsigned int default_mtype : 3;
  unsigned int alignment_mode : 2;
  unsigned int private_atc : 1;
  unsigned int address_mode : 2;
} sh_mem_config_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sh_mem_config_t__VI f;
} sh_mem_config_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_alu_clk_ctrl_t {
  unsigned int force_cu_on_sh0 : 16;
  unsigned int force_cu_on_sh1 : 16;
} sq_alu_clk_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_alu_clk_ctrl_t {
  unsigned int force_cu_on_sh1 : 16;
  unsigned int force_cu_on_sh0 : 16;
} sq_alu_clk_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_alu_clk_ctrl_t f;
} sq_alu_clk_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_buf_rsrc_word0_t { unsigned int base_address : 32; } sq_buf_rsrc_word0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_buf_rsrc_word0_t { unsigned int base_address : 32; } sq_buf_rsrc_word0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_buf_rsrc_word0_t f;
} sq_buf_rsrc_word0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_buf_rsrc_word1_t {
  unsigned int base_address_hi : 16;
  unsigned int stride : 14;
  unsigned int cache_swizzle : 1;
  unsigned int swizzle_enable : 1;
} sq_buf_rsrc_word1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_buf_rsrc_word1_t {
  unsigned int swizzle_enable : 1;
  unsigned int cache_swizzle : 1;
  unsigned int stride : 14;
  unsigned int base_address_hi : 16;
} sq_buf_rsrc_word1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_buf_rsrc_word1_t f;
} sq_buf_rsrc_word1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_buf_rsrc_word2_t { unsigned int num_records : 32; } sq_buf_rsrc_word2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_buf_rsrc_word2_t { unsigned int num_records : 32; } sq_buf_rsrc_word2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_buf_rsrc_word2_t f;
} sq_buf_rsrc_word2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_buf_rsrc_word3_t {
  unsigned int dst_sel_x : 3;
  unsigned int dst_sel_y : 3;
  unsigned int dst_sel_z : 3;
  unsigned int dst_sel_w : 3;
  unsigned int num_format : 3;
  unsigned int data_format : 4;
  unsigned int element_size : 2;
  unsigned int index_stride : 2;
  unsigned int add_tid_enable : 1;
  unsigned int atc__CI__VI : 1;
  unsigned int hash_enable : 1;
  unsigned int heap : 1;
  unsigned int mtype__CI__VI : 3;
  unsigned int type : 2;
} sq_buf_rsrc_word3_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_buf_rsrc_word3_t {
  unsigned int type : 2;
  unsigned int mtype__CI__VI : 3;
  unsigned int heap : 1;
  unsigned int hash_enable : 1;
  unsigned int atc__CI__VI : 1;
  unsigned int add_tid_enable : 1;
  unsigned int index_stride : 2;
  unsigned int element_size : 2;
  unsigned int data_format : 4;
  unsigned int num_format : 3;
  unsigned int dst_sel_w : 3;
  unsigned int dst_sel_z : 3;
  unsigned int dst_sel_y : 3;
  unsigned int dst_sel_x : 3;
} sq_buf_rsrc_word3_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_buf_rsrc_word3_t f;
} sq_buf_rsrc_word3_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_cac_mask_t__SI {
  unsigned int valu : 1;
  unsigned int valu_mul : 1;
  unsigned int gpr : 1;
  unsigned int : 29;
} sq_cac_mask_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_cac_mask_t__SI {
  unsigned int : 29;
  unsigned int gpr : 1;
  unsigned int valu_mul : 1;
  unsigned int valu : 1;
} sq_cac_mask_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_cac_mask_t__SI f;
} sq_cac_mask_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_cmd_t__SI__CI {
  unsigned int cmd : 3;
  unsigned int : 1;
  unsigned int mode : 3;
  unsigned int check_vmid : 1;
  unsigned int trap_id : 3;
  unsigned int : 5;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int : 2;
  unsigned int queue_id : 3;
  unsigned int : 1;
  unsigned int vm_id : 4;
} sq_cmd_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_cmd_t__SI__CI {
  unsigned int vm_id : 4;
  unsigned int : 1;
  unsigned int queue_id : 3;
  unsigned int : 2;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int : 5;
  unsigned int trap_id : 3;
  unsigned int check_vmid : 1;
  unsigned int mode : 3;
  unsigned int : 1;
  unsigned int cmd : 3;
} sq_cmd_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_cmd_t__SI__CI f;
} sq_cmd_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_cmd_t__VI {
  unsigned int cmd : 3;
  unsigned int : 1;
  unsigned int mode : 3;
  unsigned int check_vmid : 1;
  unsigned int data : 3;
  unsigned int : 5;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int : 2;
  unsigned int queue_id : 3;
  unsigned int : 1;
  unsigned int vm_id : 4;
} sq_cmd_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_cmd_t__VI {
  unsigned int vm_id : 4;
  unsigned int : 1;
  unsigned int queue_id : 3;
  unsigned int : 2;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int : 5;
  unsigned int data : 3;
  unsigned int check_vmid : 1;
  unsigned int mode : 3;
  unsigned int : 1;
  unsigned int cmd : 3;
} sq_cmd_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_cmd_t__VI f;
} sq_cmd_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_cmd_timestamp_t {
  unsigned int timestamp : 8;
  unsigned int : 24;
} sq_cmd_timestamp_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_cmd_timestamp_t {
  unsigned int : 24;
  unsigned int timestamp : 8;
} sq_cmd_timestamp_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_cmd_timestamp_t f;
} sq_cmd_timestamp_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_config_t__SI__CI {
  unsigned int unused : 8;
  unsigned int debug_en : 1;
  unsigned int disable_sca_bypass : 1;
  unsigned int disable_ib_dep_check : 1;
  unsigned int enable_soft_clause__CI : 1;
  unsigned int early_ta_done_disable__CI : 1;
  unsigned int dua_flat_lock_enable__CI : 1;
  unsigned int dua_lds_bypass_disable__CI : 1;
  unsigned int dua_flat_lds_pingpong_disable__CI : 1;
  unsigned int : 16;
} sq_config_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_config_t__SI__CI {
  unsigned int : 16;
  unsigned int dua_flat_lds_pingpong_disable__CI : 1;
  unsigned int dua_lds_bypass_disable__CI : 1;
  unsigned int dua_flat_lock_enable__CI : 1;
  unsigned int early_ta_done_disable__CI : 1;
  unsigned int enable_soft_clause__CI : 1;
  unsigned int disable_ib_dep_check : 1;
  unsigned int disable_sca_bypass : 1;
  unsigned int debug_en : 1;
  unsigned int unused : 8;
} sq_config_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_config_t__SI__CI f;
} sq_config_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_config_t__VI {
  unsigned int unused : 8;
  unsigned int debug_en : 1;
  unsigned int debug_single_memop : 1;
  unsigned int debug_one_inst_clause : 1;
  unsigned int : 1;
  unsigned int early_ta_done_disable : 1;
  unsigned int dua_flat_lock_enable : 1;
  unsigned int dua_lds_bypass_disable : 1;
  unsigned int dua_flat_lds_pingpong_disable : 1;
  unsigned int disable_vmem_soft_clause : 1;
  unsigned int disable_smem_soft_clause : 1;
  unsigned int enable_hiprio_on_exp_rdy_vs : 1;
  unsigned int prio_val_on_exp_rdy_vs : 2;
  unsigned int replay_sleep_cnt : 4;
  unsigned int : 7;
} sq_config_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_config_t__VI {
  unsigned int : 7;
  unsigned int replay_sleep_cnt : 4;
  unsigned int prio_val_on_exp_rdy_vs : 2;
  unsigned int enable_hiprio_on_exp_rdy_vs : 1;
  unsigned int disable_smem_soft_clause : 1;
  unsigned int disable_vmem_soft_clause : 1;
  unsigned int dua_flat_lds_pingpong_disable : 1;
  unsigned int dua_lds_bypass_disable : 1;
  unsigned int dua_flat_lock_enable : 1;
  unsigned int early_ta_done_disable : 1;
  unsigned int : 1;
  unsigned int debug_one_inst_clause : 1;
  unsigned int debug_single_memop : 1;
  unsigned int debug_en : 1;
  unsigned int unused : 8;
} sq_config_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_config_t__VI f;
} sq_config_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_debug_ctrl_local_t {
  unsigned int unused : 8;
  unsigned int : 24;
} sq_debug_ctrl_local_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_debug_ctrl_local_t {
  unsigned int : 24;
  unsigned int unused : 8;
} sq_debug_ctrl_local_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_debug_ctrl_local_t f;
} sq_debug_ctrl_local_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_debug_sts_global2_t {
  unsigned int fifo_level_gfx0 : 8;
  unsigned int fifo_level_gfx1 : 8;
  unsigned int fifo_level_immed : 8;
  unsigned int fifo_level_host : 8;
} sq_debug_sts_global2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_debug_sts_global2_t {
  unsigned int fifo_level_host : 8;
  unsigned int fifo_level_immed : 8;
  unsigned int fifo_level_gfx1 : 8;
  unsigned int fifo_level_gfx0 : 8;
} sq_debug_sts_global2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_debug_sts_global2_t f;
} sq_debug_sts_global2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_debug_sts_global3_t {
  unsigned int fifo_level_host_cmd : 4;
  unsigned int fifo_level_host_reg : 6;
  unsigned int : 22;
} sq_debug_sts_global3_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_debug_sts_global3_t {
  unsigned int : 22;
  unsigned int fifo_level_host_reg : 6;
  unsigned int fifo_level_host_cmd : 4;
} sq_debug_sts_global3_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_debug_sts_global3_t f;
} sq_debug_sts_global3_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_debug_sts_global_t {
  unsigned int busy : 1;
  unsigned int interrupt_msg_busy__CI__VI : 1;
  unsigned int : 2;
  unsigned int wave_level_sh0 : 12;
  unsigned int wave_level_sh1 : 12;
  unsigned int : 4;
} sq_debug_sts_global_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_debug_sts_global_t {
  unsigned int : 4;
  unsigned int wave_level_sh1 : 12;
  unsigned int wave_level_sh0 : 12;
  unsigned int : 2;
  unsigned int interrupt_msg_busy__CI__VI : 1;
  unsigned int busy : 1;
} sq_debug_sts_global_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_debug_sts_global_t f;
} sq_debug_sts_global_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_debug_sts_local_t {
  unsigned int busy : 1;
  unsigned int : 3;
  unsigned int wave_level : 6;
  unsigned int : 22;
} sq_debug_sts_local_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_debug_sts_local_t {
  unsigned int : 22;
  unsigned int wave_level : 6;
  unsigned int : 3;
  unsigned int busy : 1;
} sq_debug_sts_local_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_debug_sts_local_t f;
} sq_debug_sts_local_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ded_cnt_t__SI__CI {
  unsigned int lds_ded : 6;
  unsigned int : 2;
  unsigned int sgpr_ded : 5;
  unsigned int : 3;
  unsigned int vgpr_ded : 9;
  unsigned int : 7;
} sq_ded_cnt_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ded_cnt_t__SI__CI {
  unsigned int : 7;
  unsigned int vgpr_ded : 9;
  unsigned int : 3;
  unsigned int sgpr_ded : 5;
  unsigned int : 2;
  unsigned int lds_ded : 6;
} sq_ded_cnt_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_ded_cnt_t__SI__CI f;
} sq_ded_cnt_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ded_info_t__SI__CI {
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int source : 3;
  unsigned int vm_id : 4;
  unsigned int ring_id : 3;
  unsigned int : 16;
} sq_ded_info_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ded_info_t__SI__CI {
  unsigned int : 16;
  unsigned int ring_id : 3;
  unsigned int vm_id : 4;
  unsigned int source : 3;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
} sq_ded_info_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_ded_info_t__SI__CI f;
} sq_ded_info_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_fifo_sizes_t {
  unsigned int interrupt_fifo_size : 4;
  unsigned int : 4;
  unsigned int ttrace_fifo_size : 4;
  unsigned int : 4;
  unsigned int export_buf_size : 2;
  unsigned int vmem_data_fifo_size : 2;
  unsigned int : 12;
} sq_fifo_sizes_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_fifo_sizes_t {
  unsigned int : 12;
  unsigned int vmem_data_fifo_size : 2;
  unsigned int export_buf_size : 2;
  unsigned int : 4;
  unsigned int ttrace_fifo_size : 4;
  unsigned int : 4;
  unsigned int interrupt_fifo_size : 4;
} sq_fifo_sizes_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_fifo_sizes_t f;
} sq_fifo_sizes_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_flat_scratch_word0_t {
  unsigned int size : 19;
  unsigned int : 13;
} sq_flat_scratch_word0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_flat_scratch_word0_t {
  unsigned int : 13;
  unsigned int size : 19;
} sq_flat_scratch_word0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_flat_scratch_word0_t f;
} sq_flat_scratch_word0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_flat_scratch_word1_t {
  unsigned int offset : 24;
  unsigned int : 8;
} sq_flat_scratch_word1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_flat_scratch_word1_t {
  unsigned int : 8;
  unsigned int offset : 24;
} sq_flat_scratch_word1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_flat_scratch_word1_t f;
} sq_flat_scratch_word1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_hv_vmid_ctrl_t {
  unsigned int default_vmid : 4;
  unsigned int allowed_vmid_mask : 16;
  unsigned int : 12;
} sq_hv_vmid_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_hv_vmid_ctrl_t {
  unsigned int : 12;
  unsigned int allowed_vmid_mask : 16;
  unsigned int default_vmid : 4;
} sq_hv_vmid_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_hv_vmid_ctrl_t f;
} sq_hv_vmid_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word0_t { unsigned int base_address : 32; } sq_img_rsrc_word0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word0_t { unsigned int base_address : 32; } sq_img_rsrc_word0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word0_t f;
} sq_img_rsrc_word0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word1_t {
  unsigned int base_address_hi : 8;
  unsigned int min_lod : 12;
  unsigned int data_format : 6;
  unsigned int num_format : 4;
  unsigned int mtype__CI__VI : 2;
} sq_img_rsrc_word1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word1_t {
  unsigned int mtype__CI__VI : 2;
  unsigned int num_format : 4;
  unsigned int data_format : 6;
  unsigned int min_lod : 12;
  unsigned int base_address_hi : 8;
} sq_img_rsrc_word1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word1_t f;
} sq_img_rsrc_word1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word2_t {
  unsigned int width : 14;
  unsigned int height : 14;
  unsigned int perf_mod : 3;
  unsigned int interlaced : 1;
} sq_img_rsrc_word2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word2_t {
  unsigned int interlaced : 1;
  unsigned int perf_mod : 3;
  unsigned int height : 14;
  unsigned int width : 14;
} sq_img_rsrc_word2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word2_t f;
} sq_img_rsrc_word2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word3_t {
  unsigned int dst_sel_x : 3;
  unsigned int dst_sel_y : 3;
  unsigned int dst_sel_z : 3;
  unsigned int dst_sel_w : 3;
  unsigned int base_level : 4;
  unsigned int last_level : 4;
  unsigned int tiling_index : 5;
  unsigned int pow2_pad : 1;
  unsigned int mtype__CI__VI : 1;
  unsigned int atc__CI__VI : 1;
  unsigned int type : 4;
} sq_img_rsrc_word3_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word3_t {
  unsigned int type : 4;
  unsigned int atc__CI__VI : 1;
  unsigned int mtype__CI__VI : 1;
  unsigned int pow2_pad : 1;
  unsigned int tiling_index : 5;
  unsigned int last_level : 4;
  unsigned int base_level : 4;
  unsigned int dst_sel_w : 3;
  unsigned int dst_sel_z : 3;
  unsigned int dst_sel_y : 3;
  unsigned int dst_sel_x : 3;
} sq_img_rsrc_word3_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word3_t f;
} sq_img_rsrc_word3_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word4_t {
  unsigned int depth : 13;
  unsigned int pitch : 14;
  unsigned int : 5;
} sq_img_rsrc_word4_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word4_t {
  unsigned int : 5;
  unsigned int pitch : 14;
  unsigned int depth : 13;
} sq_img_rsrc_word4_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word4_t f;
} sq_img_rsrc_word4_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word5_t {
  unsigned int base_array : 13;
  unsigned int last_array : 13;
  unsigned int : 6;
} sq_img_rsrc_word5_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word5_t {
  unsigned int : 6;
  unsigned int last_array : 13;
  unsigned int base_array : 13;
} sq_img_rsrc_word5_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word5_t f;
} sq_img_rsrc_word5_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word6_t__SI__CI {
  unsigned int min_lod_warn : 12;
  unsigned int counter_bank_id__CI : 8;
  unsigned int lod_hdw_cnt_en__CI : 1;
  unsigned int ununsed__CI : 11;
} sq_img_rsrc_word6_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word6_t__SI__CI {
  unsigned int ununsed__CI : 11;
  unsigned int lod_hdw_cnt_en__CI : 1;
  unsigned int counter_bank_id__CI : 8;
  unsigned int min_lod_warn : 12;
} sq_img_rsrc_word6_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word6_t__SI__CI f;
} sq_img_rsrc_word6_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word6_t__VI {
  unsigned int min_lod_warn : 12;
  unsigned int counter_bank_id : 8;
  unsigned int lod_hdw_cnt_en : 1;
  unsigned int compression_en : 1;
  unsigned int alpha_is_on_msb : 1;
  unsigned int color_transform : 1;
  unsigned int lost_alpha_bits : 4;
  unsigned int lost_color_bits : 4;
} sq_img_rsrc_word6_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word6_t__VI {
  unsigned int lost_color_bits : 4;
  unsigned int lost_alpha_bits : 4;
  unsigned int color_transform : 1;
  unsigned int alpha_is_on_msb : 1;
  unsigned int compression_en : 1;
  unsigned int lod_hdw_cnt_en : 1;
  unsigned int counter_bank_id : 8;
  unsigned int min_lod_warn : 12;
} sq_img_rsrc_word6_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word6_t__VI f;
} sq_img_rsrc_word6_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word7_t__SI__CI {
  unsigned int ununsed : 32;
} sq_img_rsrc_word7_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word7_t__SI__CI {
  unsigned int ununsed : 32;
} sq_img_rsrc_word7_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word7_t__SI__CI f;
} sq_img_rsrc_word7_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_rsrc_word7_t__VI {
  unsigned int meta_data_address : 32;
} sq_img_rsrc_word7_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_rsrc_word7_t__VI {
  unsigned int meta_data_address : 32;
} sq_img_rsrc_word7_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_rsrc_word7_t__VI f;
} sq_img_rsrc_word7_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_samp_word0_t {
  unsigned int clamp_x : 3;
  unsigned int clamp_y : 3;
  unsigned int clamp_z : 3;
  unsigned int max_aniso_ratio : 3;
  unsigned int depth_compare_func : 3;
  unsigned int force_unnormalized : 1;
  unsigned int aniso_threshold : 3;
  unsigned int mc_coord_trunc : 1;
  unsigned int force_degamma : 1;
  unsigned int aniso_bias : 6;
  unsigned int trunc_coord : 1;
  unsigned int disable_cube_wrap : 1;
  unsigned int filter_mode : 2;
  unsigned int compat_mode__VI : 1;
} sq_img_samp_word0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_samp_word0_t {
  unsigned int compat_mode__VI : 1;
  unsigned int filter_mode : 2;
  unsigned int disable_cube_wrap : 1;
  unsigned int trunc_coord : 1;
  unsigned int aniso_bias : 6;
  unsigned int force_degamma : 1;
  unsigned int mc_coord_trunc : 1;
  unsigned int aniso_threshold : 3;
  unsigned int force_unnormalized : 1;
  unsigned int depth_compare_func : 3;
  unsigned int max_aniso_ratio : 3;
  unsigned int clamp_z : 3;
  unsigned int clamp_y : 3;
  unsigned int clamp_x : 3;
} sq_img_samp_word0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_samp_word0_t f;
} sq_img_samp_word0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_samp_word1_t {
  unsigned int min_lod : 12;
  unsigned int max_lod : 12;
  unsigned int perf_mip : 4;
  unsigned int perf_z : 4;
} sq_img_samp_word1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_samp_word1_t {
  unsigned int perf_z : 4;
  unsigned int perf_mip : 4;
  unsigned int max_lod : 12;
  unsigned int min_lod : 12;
} sq_img_samp_word1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_samp_word1_t f;
} sq_img_samp_word1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_samp_word2_t {
  unsigned int lod_bias : 14;
  unsigned int lod_bias_sec : 6;
  unsigned int xy_mag_filter : 2;
  unsigned int xy_min_filter : 2;
  unsigned int z_filter : 2;
  unsigned int mip_filter : 2;
  unsigned int mip_point_preclamp : 1;
  unsigned int disable_lsb_ceil : 1;
  unsigned int filter_prec_fix : 1;
  unsigned int aniso_override__VI : 1;
} sq_img_samp_word2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_samp_word2_t {
  unsigned int aniso_override__VI : 1;
  unsigned int filter_prec_fix : 1;
  unsigned int disable_lsb_ceil : 1;
  unsigned int mip_point_preclamp : 1;
  unsigned int mip_filter : 2;
  unsigned int z_filter : 2;
  unsigned int xy_min_filter : 2;
  unsigned int xy_mag_filter : 2;
  unsigned int lod_bias_sec : 6;
  unsigned int lod_bias : 14;
} sq_img_samp_word2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_samp_word2_t f;
} sq_img_samp_word2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_img_samp_word3_t {
  unsigned int border_color_ptr : 12;
  unsigned int : 18;
  unsigned int border_color_type : 2;
} sq_img_samp_word3_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_img_samp_word3_t {
  unsigned int border_color_type : 2;
  unsigned int : 18;
  unsigned int border_color_ptr : 12;
} sq_img_samp_word3_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_img_samp_word3_t f;
} sq_img_samp_word3_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ind_cmd_t__SI__CI {
  unsigned int cmd__SI : 3;
  unsigned int : 1;
  unsigned int mode__SI : 2;
  unsigned int : 2;
  unsigned int trap_id__SI : 3;
  unsigned int : 17;
  unsigned int vm_id__SI : 4;
} sq_ind_cmd_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ind_cmd_t__SI__CI {
  unsigned int vm_id__SI : 4;
  unsigned int : 17;
  unsigned int trap_id__SI : 3;
  unsigned int : 2;
  unsigned int mode__SI : 2;
  unsigned int : 1;
  unsigned int cmd__SI : 3;
} sq_ind_cmd_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_ind_cmd_t__SI__CI f;
} sq_ind_cmd_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ind_data_t { unsigned int data : 32; } sq_ind_data_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ind_data_t { unsigned int data : 32; } sq_ind_data_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_ind_data_t f;
} sq_ind_data_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_ind_index_t {
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int thread_id : 6;
  unsigned int auto_incr__CI__VI : 1;
  unsigned int force_read__CI__VI : 1;
  unsigned int read_timeout : 1;
  unsigned int unindexed : 1;
  unsigned int index : 16;
} sq_ind_index_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_ind_index_t {
  unsigned int index : 16;
  unsigned int unindexed : 1;
  unsigned int read_timeout : 1;
  unsigned int force_read__CI__VI : 1;
  unsigned int auto_incr__CI__VI : 1;
  unsigned int thread_id : 6;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
} sq_ind_index_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_ind_index_t f;
} sq_ind_index_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_auto_mask_t {
  unsigned int mask : 24;
  unsigned int : 8;
} sq_interrupt_auto_mask_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_auto_mask_t {
  unsigned int : 8;
  unsigned int mask : 24;
} sq_interrupt_auto_mask_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_auto_mask_t f;
} sq_interrupt_auto_mask_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_msg_ctrl_t {
  unsigned int stall : 1;
  unsigned int : 31;
} sq_interrupt_msg_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_msg_ctrl_t {
  unsigned int : 31;
  unsigned int stall : 1;
} sq_interrupt_msg_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_msg_ctrl_t f;
} sq_interrupt_msg_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_auto_t__CI {
  unsigned int thread_trace : 1;
  unsigned int wlt : 1;
  unsigned int thread_trace_buf_full : 1;
  unsigned int reg_timestamp : 1;
  unsigned int cmd_timestamp : 1;
  unsigned int host_cmd_overflow : 1;
  unsigned int host_reg_overflow : 1;
  unsigned int immed_overflow : 1;
  unsigned int : 16;
  unsigned int se_id : 2;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_auto_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_auto_t__CI {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 2;
  unsigned int : 16;
  unsigned int immed_overflow : 1;
  unsigned int host_reg_overflow : 1;
  unsigned int host_cmd_overflow : 1;
  unsigned int cmd_timestamp : 1;
  unsigned int reg_timestamp : 1;
  unsigned int thread_trace_buf_full : 1;
  unsigned int wlt : 1;
  unsigned int thread_trace : 1;
} sq_interrupt_word_auto_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_auto_t__CI f;
} sq_interrupt_word_auto_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_auto_t__SI {
  unsigned int thread_trace : 1;
  unsigned int : 24;
  unsigned int se_id : 1;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_auto_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_auto_t__SI {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 1;
  unsigned int : 24;
  unsigned int thread_trace : 1;
} sq_interrupt_word_auto_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_auto_t__SI f;
} sq_interrupt_word_auto_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_cmn_t__CI {
  unsigned int : 24;
  unsigned int se_id : 2;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_cmn_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_cmn_t__CI {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 2;
  unsigned int : 24;
} sq_interrupt_word_cmn_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_cmn_t__CI f;
} sq_interrupt_word_cmn_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_cmn_t__SI {
  unsigned int : 25;
  unsigned int se_id : 1;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_cmn_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_cmn_t__SI {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 1;
  unsigned int : 25;
} sq_interrupt_word_cmn_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_cmn_t__SI f;
} sq_interrupt_word_cmn_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_wave_t__CI {
  unsigned int data : 8;
  unsigned int sh_id : 1;
  unsigned int priv : 1;
  unsigned int vm_id : 4;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int cu_id : 4;
  unsigned int se_id : 2;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_wave_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_wave_t__CI {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 2;
  unsigned int cu_id : 4;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int vm_id : 4;
  unsigned int priv : 1;
  unsigned int sh_id : 1;
  unsigned int data : 8;
} sq_interrupt_word_wave_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_wave_t__CI f;
} sq_interrupt_word_wave_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_wave_t__SI {
  unsigned int data : 8;
  unsigned int : 2;
  unsigned int vm_id : 4;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int se_id : 1;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_wave_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_wave_t__SI {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 1;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int vm_id : 4;
  unsigned int : 2;
  unsigned int data : 8;
} sq_interrupt_word_wave_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_wave_t__SI f;
} sq_interrupt_word_wave_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_lb_ctr_ctrl_t {
  unsigned int start : 1;
  unsigned int load : 1;
  unsigned int clear : 1;
  unsigned int : 29;
} sq_lb_ctr_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_lb_ctr_ctrl_t {
  unsigned int : 29;
  unsigned int clear : 1;
  unsigned int load : 1;
  unsigned int start : 1;
} sq_lb_ctr_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_lb_ctr_ctrl_t f;
} sq_lb_ctr_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_lb_data_alu_cycles_t { unsigned int data : 32; } sq_lb_data_alu_cycles_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_lb_data_alu_cycles_t { unsigned int data : 32; } sq_lb_data_alu_cycles_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_lb_data_alu_cycles_t f;
} sq_lb_data_alu_cycles_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_lb_data_alu_stalls_t { unsigned int data : 32; } sq_lb_data_alu_stalls_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_lb_data_alu_stalls_t { unsigned int data : 32; } sq_lb_data_alu_stalls_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_lb_data_alu_stalls_t f;
} sq_lb_data_alu_stalls_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_lb_data_tex_cycles_t { unsigned int data : 32; } sq_lb_data_tex_cycles_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_lb_data_tex_cycles_t { unsigned int data : 32; } sq_lb_data_tex_cycles_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_lb_data_tex_cycles_t f;
} sq_lb_data_tex_cycles_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_lb_data_tex_stalls_t { unsigned int data : 32; } sq_lb_data_tex_stalls_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_lb_data_tex_stalls_t { unsigned int data : 32; } sq_lb_data_tex_stalls_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_lb_data_tex_stalls_t f;
} sq_lb_data_tex_stalls_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_lds_clk_ctrl_t {
  unsigned int force_cu_on_sh0 : 16;
  unsigned int force_cu_on_sh1 : 16;
} sq_lds_clk_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_lds_clk_ctrl_t {
  unsigned int force_cu_on_sh1 : 16;
  unsigned int force_cu_on_sh0 : 16;
} sq_lds_clk_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_lds_clk_ctrl_t f;
} sq_lds_clk_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter0_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter0_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter0_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter0_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter0_hi_t f;
} sq_perfcounter0_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter0_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter0_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter0_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter0_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter0_lo_t f;
} sq_perfcounter0_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter0_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter0_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter0_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter0_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter0_select_t__CI f;
} sq_perfcounter0_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter0_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter0_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter0_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter0_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter0_select_t__SI f;
} sq_perfcounter0_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter10_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter10_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter10_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter10_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter10_hi_t f;
} sq_perfcounter10_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter10_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter10_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter10_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter10_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter10_lo_t f;
} sq_perfcounter10_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter10_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter10_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter10_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter10_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter10_select_t__CI f;
} sq_perfcounter10_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter10_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter10_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter10_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter10_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter10_select_t__SI f;
} sq_perfcounter10_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter11_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter11_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter11_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter11_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter11_hi_t f;
} sq_perfcounter11_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter11_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter11_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter11_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter11_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter11_lo_t f;
} sq_perfcounter11_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter11_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter11_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter11_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter11_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter11_select_t__CI f;
} sq_perfcounter11_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter11_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter11_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter11_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter11_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter11_select_t__SI f;
} sq_perfcounter11_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter12_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter12_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter12_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter12_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter12_hi_t f;
} sq_perfcounter12_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter12_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter12_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter12_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter12_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter12_lo_t f;
} sq_perfcounter12_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter12_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter12_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter12_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter12_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter12_select_t__CI f;
} sq_perfcounter12_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter12_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter12_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter12_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter12_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter12_select_t__SI f;
} sq_perfcounter12_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter13_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter13_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter13_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter13_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter13_hi_t f;
} sq_perfcounter13_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter13_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter13_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter13_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter13_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter13_lo_t f;
} sq_perfcounter13_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter13_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter13_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter13_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter13_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter13_select_t__CI f;
} sq_perfcounter13_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter13_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter13_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter13_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter13_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter13_select_t__SI f;
} sq_perfcounter13_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter14_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter14_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter14_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter14_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter14_hi_t f;
} sq_perfcounter14_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter14_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter14_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter14_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter14_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter14_lo_t f;
} sq_perfcounter14_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter14_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter14_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter14_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter14_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter14_select_t__CI f;
} sq_perfcounter14_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter14_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter14_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter14_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter14_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter14_select_t__SI f;
} sq_perfcounter14_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter15_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter15_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter15_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter15_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter15_hi_t f;
} sq_perfcounter15_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter15_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter15_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter15_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter15_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter15_lo_t f;
} sq_perfcounter15_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter15_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter15_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter15_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter15_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter15_select_t__CI f;
} sq_perfcounter15_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter15_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter15_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter15_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter15_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter15_select_t__SI f;
} sq_perfcounter15_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter1_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter1_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter1_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter1_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter1_hi_t f;
} sq_perfcounter1_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter1_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter1_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter1_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter1_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter1_lo_t f;
} sq_perfcounter1_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter1_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter1_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter1_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter1_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter1_select_t__CI f;
} sq_perfcounter1_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter1_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter1_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter1_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter1_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter1_select_t__SI f;
} sq_perfcounter1_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter2_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter2_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter2_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter2_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter2_hi_t f;
} sq_perfcounter2_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter2_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter2_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter2_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter2_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter2_lo_t f;
} sq_perfcounter2_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter2_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter2_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter2_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter2_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter2_select_t__CI f;
} sq_perfcounter2_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter2_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter2_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter2_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter2_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter2_select_t__SI f;
} sq_perfcounter2_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter3_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter3_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter3_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter3_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter3_hi_t f;
} sq_perfcounter3_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter3_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter3_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter3_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter3_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter3_lo_t f;
} sq_perfcounter3_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter3_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter3_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter3_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter3_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter3_select_t__CI f;
} sq_perfcounter3_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter3_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter3_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter3_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter3_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter3_select_t__SI f;
} sq_perfcounter3_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter4_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter4_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter4_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter4_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter4_hi_t f;
} sq_perfcounter4_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter4_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter4_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter4_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter4_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter4_lo_t f;
} sq_perfcounter4_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter4_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter4_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter4_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter4_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter4_select_t__CI f;
} sq_perfcounter4_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter4_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter4_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter4_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter4_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter4_select_t__SI f;
} sq_perfcounter4_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter5_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter5_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter5_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter5_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter5_hi_t f;
} sq_perfcounter5_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter5_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter5_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter5_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter5_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter5_lo_t f;
} sq_perfcounter5_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter5_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter5_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter5_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter5_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter5_select_t__CI f;
} sq_perfcounter5_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter5_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter5_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter5_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter5_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter5_select_t__SI f;
} sq_perfcounter5_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter6_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter6_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter6_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter6_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter6_hi_t f;
} sq_perfcounter6_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter6_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter6_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter6_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter6_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter6_lo_t f;
} sq_perfcounter6_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter6_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter6_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter6_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter6_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter6_select_t__CI f;
} sq_perfcounter6_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter6_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter6_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter6_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter6_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter6_select_t__SI f;
} sq_perfcounter6_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter7_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter7_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter7_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter7_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter7_hi_t f;
} sq_perfcounter7_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter7_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter7_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter7_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter7_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter7_lo_t f;
} sq_perfcounter7_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter7_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter7_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter7_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter7_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter7_select_t__CI f;
} sq_perfcounter7_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter7_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter7_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter7_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter7_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter7_select_t__SI f;
} sq_perfcounter7_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter8_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter8_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter8_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter8_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter8_hi_t f;
} sq_perfcounter8_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter8_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter8_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter8_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter8_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter8_lo_t f;
} sq_perfcounter8_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter8_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter8_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter8_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter8_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter8_select_t__CI f;
} sq_perfcounter8_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter8_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter8_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter8_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter8_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter8_select_t__SI f;
} sq_perfcounter8_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter9_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter9_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter9_hi_t { unsigned int perfcounter_hi : 32; } sq_perfcounter9_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter9_hi_t f;
} sq_perfcounter9_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter9_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter9_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter9_lo_t { unsigned int perfcounter_lo : 32; } sq_perfcounter9_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter9_lo_t f;
} sq_perfcounter9_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter9_select_t__CI {
  unsigned int perf_sel : 8;
  unsigned int : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter9_select_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter9_select_t__CI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 4;
  unsigned int perf_sel : 8;
} sq_perfcounter9_select_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter9_select_t__CI f;
} sq_perfcounter9_select_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter9_select_t__SI {
  unsigned int perf_sel : 9;
  unsigned int : 15;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter9_select_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter9_select_t__SI {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int : 15;
  unsigned int perf_sel : 9;
} sq_perfcounter9_select_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter9_select_t__SI f;
} sq_perfcounter9_select_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter_ctrl2_t {
  unsigned int force_en : 1;
  unsigned int : 31;
} sq_perfcounter_ctrl2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter_ctrl2_t {
  unsigned int : 31;
  unsigned int force_en : 1;
} sq_perfcounter_ctrl2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter_ctrl2_t f;
} sq_perfcounter_ctrl2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter_ctrl_t {
  unsigned int ps_en : 1;
  unsigned int vs_en : 1;
  unsigned int gs_en : 1;
  unsigned int es_en : 1;
  unsigned int hs_en : 1;
  unsigned int ls_en : 1;
  unsigned int cs_en : 1;
  unsigned int : 1;
  unsigned int cntr_rate : 5;
  unsigned int disable_flush : 1;
  unsigned int : 18;
} sq_perfcounter_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter_ctrl_t {
  unsigned int : 18;
  unsigned int disable_flush : 1;
  unsigned int cntr_rate : 5;
  unsigned int : 1;
  unsigned int cs_en : 1;
  unsigned int ls_en : 1;
  unsigned int hs_en : 1;
  unsigned int es_en : 1;
  unsigned int gs_en : 1;
  unsigned int vs_en : 1;
  unsigned int ps_en : 1;
} sq_perfcounter_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter_ctrl_t f;
} sq_perfcounter_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter_mask_t {
  unsigned int sh0_mask : 16;
  unsigned int sh1_mask : 16;
} sq_perfcounter_mask_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter_mask_t {
  unsigned int sh1_mask : 16;
  unsigned int sh0_mask : 16;
} sq_perfcounter_mask_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter_mask_t f;
} sq_perfcounter_mask_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_power_throttle2_t {
  unsigned int max_power_delta : 14;
  unsigned int : 2;
  unsigned int short_term_interval_size : 10;
  unsigned int : 1;
  unsigned int long_term_interval_ratio : 4;
  unsigned int use_ref_clock : 1;
} sq_power_throttle2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_power_throttle2_t {
  unsigned int use_ref_clock : 1;
  unsigned int long_term_interval_ratio : 4;
  unsigned int : 1;
  unsigned int short_term_interval_size : 10;
  unsigned int : 2;
  unsigned int max_power_delta : 14;
} sq_power_throttle2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_power_throttle2_t f;
} sq_power_throttle2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_power_throttle_t {
  unsigned int min_power : 14;
  unsigned int : 2;
  unsigned int max_power : 14;
  unsigned int phase_offset : 2;
} sq_power_throttle_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_power_throttle_t {
  unsigned int phase_offset : 2;
  unsigned int max_power : 14;
  unsigned int : 2;
  unsigned int min_power : 14;
} sq_power_throttle_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_power_throttle_t f;
} sq_power_throttle_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_random_wave_pri_t {
  unsigned int ret : 7;
  unsigned int rui : 3;
  unsigned int rng : 11;
  unsigned int : 11;
} sq_random_wave_pri_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_random_wave_pri_t {
  unsigned int : 11;
  unsigned int rng : 11;
  unsigned int rui : 3;
  unsigned int ret : 7;
} sq_random_wave_pri_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_random_wave_pri_t f;
} sq_random_wave_pri_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_reg_credits_t {
  unsigned int srbm_credits : 6;
  unsigned int : 2;
  unsigned int cmd_credits : 4;
  unsigned int : 16;
  unsigned int reg_busy__CI__VI : 1;
  unsigned int srbm_overflow__CI__VI : 1;
  unsigned int immed_overflow__CI__VI : 1;
  unsigned int cmd_overflow__CI__VI : 1;
} sq_reg_credits_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_reg_credits_t {
  unsigned int cmd_overflow__CI__VI : 1;
  unsigned int immed_overflow__CI__VI : 1;
  unsigned int srbm_overflow__CI__VI : 1;
  unsigned int reg_busy__CI__VI : 1;
  unsigned int : 16;
  unsigned int cmd_credits : 4;
  unsigned int : 2;
  unsigned int srbm_credits : 6;
} sq_reg_credits_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_reg_credits_t f;
} sq_reg_credits_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_reg_timestamp_t {
  unsigned int timestamp : 8;
  unsigned int : 24;
} sq_reg_timestamp_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_reg_timestamp_t {
  unsigned int : 24;
  unsigned int timestamp : 8;
} sq_reg_timestamp_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_reg_timestamp_t f;
} sq_reg_timestamp_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_sec_cnt_t__SI__CI {
  unsigned int lds_sec : 6;
  unsigned int : 2;
  unsigned int sgpr_sec : 5;
  unsigned int : 3;
  unsigned int vgpr_sec : 9;
  unsigned int : 7;
} sq_sec_cnt_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_sec_cnt_t__SI__CI {
  unsigned int : 7;
  unsigned int vgpr_sec : 9;
  unsigned int : 3;
  unsigned int sgpr_sec : 5;
  unsigned int : 2;
  unsigned int lds_sec : 6;
} sq_sec_cnt_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_sec_cnt_t__SI__CI f;
} sq_sec_cnt_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_tex_clk_ctrl_t {
  unsigned int force_cu_on_sh0 : 16;
  unsigned int force_cu_on_sh1 : 16;
} sq_tex_clk_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_tex_clk_ctrl_t {
  unsigned int force_cu_on_sh1 : 16;
  unsigned int force_cu_on_sh0 : 16;
} sq_tex_clk_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_tex_clk_ctrl_t f;
} sq_tex_clk_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_base2_t {
  unsigned int addr_hi : 4;
  unsigned int atc : 1;
  unsigned int : 27;
} sq_thread_trace_base2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_base2_t {
  unsigned int : 27;
  unsigned int atc : 1;
  unsigned int addr_hi : 4;
} sq_thread_trace_base2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_base2_t f;
} sq_thread_trace_base2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_base_t { unsigned int addr : 32; } sq_thread_trace_base_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_base_t { unsigned int addr : 32; } sq_thread_trace_base_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_base_t f;
} sq_thread_trace_base_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_cntr_t { unsigned int cntr : 32; } sq_thread_trace_cntr_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_cntr_t { unsigned int cntr : 32; } sq_thread_trace_cntr_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_cntr_t f;
} sq_thread_trace_cntr_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_ctrl_t {
  unsigned int : 31;
  unsigned int reset_buffer : 1;
} sq_thread_trace_ctrl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_ctrl_t {
  unsigned int reset_buffer : 1;
  unsigned int : 31;
} sq_thread_trace_ctrl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_ctrl_t f;
} sq_thread_trace_ctrl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_hiwater_t {
  unsigned int hiwater : 3;
  unsigned int : 29;
} sq_thread_trace_hiwater_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_hiwater_t {
  unsigned int : 29;
  unsigned int hiwater : 3;
} sq_thread_trace_hiwater_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_hiwater_t f;
} sq_thread_trace_hiwater_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_mask_t {
  unsigned int cu_sel : 5;
  unsigned int sh_sel : 1;
  unsigned int : 1;
  unsigned int reg_stall_en__CI__VI : 1;
  unsigned int simd_en : 4;
  unsigned int vm_id_mask : 2;
  unsigned int spi_stall_en__CI__VI : 1;
  unsigned int sq_stall_en__CI__VI : 1;
  unsigned int random_seed : 16;
} sq_thread_trace_mask_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_mask_t {
  unsigned int random_seed : 16;
  unsigned int sq_stall_en__CI__VI : 1;
  unsigned int spi_stall_en__CI__VI : 1;
  unsigned int vm_id_mask : 2;
  unsigned int simd_en : 4;
  unsigned int reg_stall_en__CI__VI : 1;
  unsigned int : 1;
  unsigned int sh_sel : 1;
  unsigned int cu_sel : 5;
} sq_thread_trace_mask_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_mask_t f;
} sq_thread_trace_mask_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_mode_t {
  unsigned int mask_ps : 3;
  unsigned int mask_vs : 3;
  unsigned int mask_gs : 3;
  unsigned int mask_es : 3;
  unsigned int mask_hs : 3;
  unsigned int mask_ls : 3;
  unsigned int mask_cs : 3;
  unsigned int mode : 2;
  unsigned int capture_mode : 2;
  unsigned int autoflush_en : 1;
  unsigned int priv : 1;
  unsigned int issue_mask : 2;
  unsigned int test_mode : 1;
  unsigned int interrupt_en : 1;
  unsigned int wrap : 1;
} sq_thread_trace_mode_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_mode_t {
  unsigned int wrap : 1;
  unsigned int interrupt_en : 1;
  unsigned int test_mode : 1;
  unsigned int issue_mask : 2;
  unsigned int priv : 1;
  unsigned int autoflush_en : 1;
  unsigned int capture_mode : 2;
  unsigned int mode : 2;
  unsigned int mask_cs : 3;
  unsigned int mask_ls : 3;
  unsigned int mask_hs : 3;
  unsigned int mask_es : 3;
  unsigned int mask_gs : 3;
  unsigned int mask_vs : 3;
  unsigned int mask_ps : 3;
} sq_thread_trace_mode_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_mode_t f;
} sq_thread_trace_mode_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_perf_mask_t {
  unsigned int sh0_mask : 16;
  unsigned int sh1_mask : 16;
} sq_thread_trace_perf_mask_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_perf_mask_t {
  unsigned int sh1_mask : 16;
  unsigned int sh0_mask : 16;
} sq_thread_trace_perf_mask_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_perf_mask_t f;
} sq_thread_trace_perf_mask_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_size_t {
  unsigned int size : 22;
  unsigned int : 10;
} sq_thread_trace_size_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_size_t {
  unsigned int : 10;
  unsigned int size : 22;
} sq_thread_trace_size_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_size_t f;
} sq_thread_trace_size_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_status_t {
  unsigned int finish_pending : 10;
  unsigned int : 6;
  unsigned int finish_done : 10;
  unsigned int : 3;
  unsigned int new_buf : 1;
  unsigned int busy : 1;
  unsigned int full : 1;
} sq_thread_trace_status_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_status_t {
  unsigned int full : 1;
  unsigned int busy : 1;
  unsigned int new_buf : 1;
  unsigned int : 3;
  unsigned int finish_done : 10;
  unsigned int : 6;
  unsigned int finish_pending : 10;
} sq_thread_trace_status_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_status_t f;
} sq_thread_trace_status_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_token_mask2_t__SI__CI {
  unsigned int inst_mask : 16;
  unsigned int : 16;
} sq_thread_trace_token_mask2_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_token_mask2_t__SI__CI {
  unsigned int : 16;
  unsigned int inst_mask : 16;
} sq_thread_trace_token_mask2_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_token_mask2_t__SI__CI f;
} sq_thread_trace_token_mask2_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_token_mask2_t__VI {
  unsigned int inst_mask : 32;
} sq_thread_trace_token_mask2_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_token_mask2_t__VI {
  unsigned int inst_mask : 32;
} sq_thread_trace_token_mask2_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_token_mask2_t__VI f;
} sq_thread_trace_token_mask2_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_token_mask_t {
  unsigned int token_mask : 16;
  unsigned int reg_mask : 8;
  unsigned int reg_drop_on_stall__CI__VI : 1;
  unsigned int : 7;
} sq_thread_trace_token_mask_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_token_mask_t {
  unsigned int : 7;
  unsigned int reg_drop_on_stall__CI__VI : 1;
  unsigned int reg_mask : 8;
  unsigned int token_mask : 16;
} sq_thread_trace_token_mask_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_token_mask_t f;
} sq_thread_trace_token_mask_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_0_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_0_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_userdata_0_t f;
} sq_thread_trace_userdata_0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_1_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_1_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_userdata_1_t f;
} sq_thread_trace_userdata_1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_2_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_2_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_userdata_2_t f;
} sq_thread_trace_userdata_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_3_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_3_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_userdata_3_t {
  unsigned int data : 32;
} sq_thread_trace_userdata_3_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_userdata_3_t f;
} sq_thread_trace_userdata_3_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_cmn_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int : 27;
} sq_thread_trace_word_cmn_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_cmn_t {
  unsigned int : 27;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_cmn_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_cmn_t f;
} sq_thread_trace_word_cmn_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_event_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int sh_id : 1;
  unsigned int stage : 3;
  unsigned int : 1;
  unsigned int event_type : 6;
  unsigned int : 16;
} sq_thread_trace_word_event_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_event_t {
  unsigned int : 16;
  unsigned int event_type : 6;
  unsigned int : 1;
  unsigned int stage : 3;
  unsigned int sh_id : 1;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_event_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_event_t f;
} sq_thread_trace_word_event_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_pc_1_of_2_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int : 5;
  unsigned int pc_lo : 16;
} sq_thread_trace_word_inst_pc_1_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_pc_1_of_2_t {
  unsigned int pc_lo : 16;
  unsigned int : 5;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_inst_pc_1_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_inst_pc_1_of_2_t f;
} sq_thread_trace_word_inst_pc_1_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_pc_2_of_2_t {
  unsigned int pc_hi : 24;
  unsigned int : 8;
} sq_thread_trace_word_inst_pc_2_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_pc_2_of_2_t {
  unsigned int : 8;
  unsigned int pc_hi : 24;
} sq_thread_trace_word_inst_pc_2_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_inst_pc_2_of_2_t f;
} sq_thread_trace_word_inst_pc_2_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_t__SI__CI {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int size : 1;
  unsigned int inst_type : 4;
  unsigned int : 16;
} sq_thread_trace_word_inst_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_t__SI__CI {
  unsigned int : 16;
  unsigned int inst_type : 4;
  unsigned int size : 1;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_inst_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_inst_t__SI__CI f;
} sq_thread_trace_word_inst_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_t__VI {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int inst_type : 5;
  unsigned int : 16;
} sq_thread_trace_word_inst_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_t__VI {
  unsigned int : 16;
  unsigned int inst_type : 5;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_inst_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_inst_t__VI f;
} sq_thread_trace_word_inst_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_userdata_1_of_2_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int data_lo : 16;
} sq_thread_trace_word_inst_userdata_1_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_userdata_1_of_2_t {
  unsigned int data_lo : 16;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_inst_userdata_1_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_inst_userdata_1_of_2_t f;
} sq_thread_trace_word_inst_userdata_1_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_userdata_2_of_2_t {
  unsigned int data_hi : 16;
  unsigned int : 16;
} sq_thread_trace_word_inst_userdata_2_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_inst_userdata_2_of_2_t {
  unsigned int : 16;
  unsigned int data_hi : 16;
} sq_thread_trace_word_inst_userdata_2_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_inst_userdata_2_of_2_t f;
} sq_thread_trace_word_inst_userdata_2_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_issue_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int simd_id : 2;
  unsigned int : 1;
  unsigned int inst0 : 2;
  unsigned int inst1 : 2;
  unsigned int inst2 : 2;
  unsigned int inst3 : 2;
  unsigned int inst4 : 2;
  unsigned int inst5 : 2;
  unsigned int inst6 : 2;
  unsigned int inst7 : 2;
  unsigned int inst8 : 2;
  unsigned int inst9 : 2;
  unsigned int : 4;
} sq_thread_trace_word_issue_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_issue_t {
  unsigned int : 4;
  unsigned int inst9 : 2;
  unsigned int inst8 : 2;
  unsigned int inst7 : 2;
  unsigned int inst6 : 2;
  unsigned int inst5 : 2;
  unsigned int inst4 : 2;
  unsigned int inst3 : 2;
  unsigned int inst2 : 2;
  unsigned int inst1 : 2;
  unsigned int inst0 : 2;
  unsigned int : 1;
  unsigned int simd_id : 2;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_issue_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_issue_t f;
} sq_thread_trace_word_issue_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_misc_t__CI {
  unsigned int token_type : 4;
  unsigned int time_delta : 8;
  unsigned int sh_id : 1;
  unsigned int misc_token_type : 3;
  unsigned int : 16;
} sq_thread_trace_word_misc_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_misc_t__CI {
  unsigned int : 16;
  unsigned int misc_token_type : 3;
  unsigned int sh_id : 1;
  unsigned int time_delta : 8;
  unsigned int token_type : 4;
} sq_thread_trace_word_misc_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_misc_t__CI f;
} sq_thread_trace_word_misc_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_misc_t__SI {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int sh_id : 1;
  unsigned int misc_token_type : 2;
  unsigned int : 24;
} sq_thread_trace_word_misc_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_misc_t__SI {
  unsigned int : 24;
  unsigned int misc_token_type : 2;
  unsigned int sh_id : 1;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_misc_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_misc_t__SI f;
} sq_thread_trace_word_misc_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_perf_1_of_2_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int cntr_bank : 2;
  unsigned int cntr0 : 13;
  unsigned int cntr1_lo : 7;
} sq_thread_trace_word_perf_1_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_perf_1_of_2_t {
  unsigned int cntr1_lo : 7;
  unsigned int cntr0 : 13;
  unsigned int cntr_bank : 2;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_perf_1_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_perf_1_of_2_t f;
} sq_thread_trace_word_perf_1_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_perf_2_of_2_t {
  unsigned int cntr1_hi : 6;
  unsigned int cntr2 : 13;
  unsigned int cntr3 : 13;
} sq_thread_trace_word_perf_2_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_perf_2_of_2_t {
  unsigned int cntr3 : 13;
  unsigned int cntr2 : 13;
  unsigned int cntr1_hi : 6;
} sq_thread_trace_word_perf_2_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_perf_2_of_2_t f;
} sq_thread_trace_word_perf_2_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_1_of_2_t__CI {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int pipe_id : 2;
  unsigned int me_id : 2;
  unsigned int reg_dropped_prev : 1;
  unsigned int reg_type : 3;
  unsigned int : 1;
  unsigned int reg_priv : 1;
  unsigned int reg_op : 1;
  unsigned int reg_addr : 16;
} sq_thread_trace_word_reg_1_of_2_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_1_of_2_t__CI {
  unsigned int reg_addr : 16;
  unsigned int reg_op : 1;
  unsigned int reg_priv : 1;
  unsigned int : 1;
  unsigned int reg_type : 3;
  unsigned int reg_dropped_prev : 1;
  unsigned int me_id : 2;
  unsigned int pipe_id : 2;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_reg_1_of_2_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_reg_1_of_2_t__CI f;
} sq_thread_trace_word_reg_1_of_2_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_1_of_2_t__SI {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int dispatcher : 5;
  unsigned int reg_type : 3;
  unsigned int : 1;
  unsigned int reg_priv : 1;
  unsigned int reg_op : 1;
  unsigned int reg_addr : 16;
} sq_thread_trace_word_reg_1_of_2_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_1_of_2_t__SI {
  unsigned int reg_addr : 16;
  unsigned int reg_op : 1;
  unsigned int reg_priv : 1;
  unsigned int : 1;
  unsigned int reg_type : 3;
  unsigned int dispatcher : 5;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_reg_1_of_2_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_reg_1_of_2_t__SI f;
} sq_thread_trace_word_reg_1_of_2_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_2_of_2_t {
  unsigned int data : 32;
} sq_thread_trace_word_reg_2_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_2_of_2_t {
  unsigned int data : 32;
} sq_thread_trace_word_reg_2_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_reg_2_of_2_t f;
} sq_thread_trace_word_reg_2_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_cs_1_of_2_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int pipe_id : 2;
  unsigned int me_id : 2;
  unsigned int reg_addr : 7;
  unsigned int data_lo : 16;
} sq_thread_trace_word_reg_cs_1_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_cs_1_of_2_t {
  unsigned int data_lo : 16;
  unsigned int reg_addr : 7;
  unsigned int me_id : 2;
  unsigned int pipe_id : 2;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_reg_cs_1_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_reg_cs_1_of_2_t f;
} sq_thread_trace_word_reg_cs_1_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_cs_2_of_2_t {
  unsigned int data_hi : 16;
  unsigned int : 16;
} sq_thread_trace_word_reg_cs_2_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_cs_2_of_2_t {
  unsigned int : 16;
  unsigned int data_hi : 16;
} sq_thread_trace_word_reg_cs_2_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_reg_cs_2_of_2_t f;
} sq_thread_trace_word_reg_cs_2_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_time_t__SI {
  unsigned int token_type : 4;
  unsigned int time_delta : 10;
  unsigned int time_reset : 1;
  unsigned int packet_lost : 1;
  unsigned int : 16;
} sq_thread_trace_word_time_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_time_t__SI {
  unsigned int : 16;
  unsigned int packet_lost : 1;
  unsigned int time_reset : 1;
  unsigned int time_delta : 10;
  unsigned int token_type : 4;
} sq_thread_trace_word_time_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_time_t__SI f;
} sq_thread_trace_word_time_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_timestamp_1_of_2_t {
  unsigned int token_type : 4;
  unsigned int : 12;
  unsigned int time_lo : 16;
} sq_thread_trace_word_timestamp_1_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_timestamp_1_of_2_t {
  unsigned int time_lo : 16;
  unsigned int : 12;
  unsigned int token_type : 4;
} sq_thread_trace_word_timestamp_1_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_timestamp_1_of_2_t f;
} sq_thread_trace_word_timestamp_1_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_timestamp_2_of_2_t {
  unsigned int time_hi : 32;
} sq_thread_trace_word_timestamp_2_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_timestamp_2_of_2_t {
  unsigned int time_hi : 32;
} sq_thread_trace_word_timestamp_2_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_timestamp_2_of_2_t f;
} sq_thread_trace_word_timestamp_2_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_wave_start_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int dispatcher : 5;
  unsigned int vs_no_alloc_or_grouped : 1;
  unsigned int count : 7;
  unsigned int tg_id : 3;
} sq_thread_trace_word_wave_start_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_wave_start_t {
  unsigned int tg_id : 3;
  unsigned int count : 7;
  unsigned int vs_no_alloc_or_grouped : 1;
  unsigned int dispatcher : 5;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_wave_start_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_wave_start_t f;
} sq_thread_trace_word_wave_start_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_wave_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int : 16;
} sq_thread_trace_word_wave_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_wave_t {
  unsigned int : 16;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_wave_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_wave_t f;
} sq_thread_trace_word_wave_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_wptr_t {
  unsigned int wptr : 30;
  unsigned int read_offset : 2;
} sq_thread_trace_wptr_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_wptr_t {
  unsigned int read_offset : 2;
  unsigned int wptr : 30;
} sq_thread_trace_wptr_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_wptr_t f;
} sq_thread_trace_wptr_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_time_hi_t { unsigned int time : 32; } sq_time_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_time_hi_t { unsigned int time : 32; } sq_time_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_time_hi_t f;
} sq_time_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_time_lo_t { unsigned int time : 32; } sq_time_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_time_lo_t { unsigned int time : 32; } sq_time_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_time_lo_t f;
} sq_time_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_exec_hi_t { unsigned int exec_hi : 32; } sq_wave_exec_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_exec_hi_t { unsigned int exec_hi : 32; } sq_wave_exec_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_exec_hi_t f;
} sq_wave_exec_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_exec_lo_t { unsigned int exec_lo : 32; } sq_wave_exec_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_exec_lo_t { unsigned int exec_lo : 32; } sq_wave_exec_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_exec_lo_t f;
} sq_wave_exec_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_gpr_alloc_t {
  unsigned int vgpr_base : 6;
  unsigned int : 2;
  unsigned int vgpr_size : 6;
  unsigned int : 2;
  unsigned int sgpr_base : 6;
  unsigned int : 2;
  unsigned int sgpr_size : 4;
  unsigned int : 4;
} sq_wave_gpr_alloc_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_gpr_alloc_t {
  unsigned int : 4;
  unsigned int sgpr_size : 4;
  unsigned int : 2;
  unsigned int sgpr_base : 6;
  unsigned int : 2;
  unsigned int vgpr_size : 6;
  unsigned int : 2;
  unsigned int vgpr_base : 6;
} sq_wave_gpr_alloc_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_gpr_alloc_t f;
} sq_wave_gpr_alloc_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_hw_id_t__CI {
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int pipe_id : 2;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int se_id : 2;
  unsigned int : 1;
  unsigned int tg_id : 4;
  unsigned int vm_id : 4;
  unsigned int queue_id : 3;
  unsigned int state_id : 3;
  unsigned int me_id : 2;
} sq_wave_hw_id_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_hw_id_t__CI {
  unsigned int me_id : 2;
  unsigned int state_id : 3;
  unsigned int queue_id : 3;
  unsigned int vm_id : 4;
  unsigned int tg_id : 4;
  unsigned int : 1;
  unsigned int se_id : 2;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int pipe_id : 2;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
} sq_wave_hw_id_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_hw_id_t__CI f;
} sq_wave_hw_id_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_hw_id_t__SI {
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int : 2;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int se_id : 1;
  unsigned int : 2;
  unsigned int tg_id : 4;
  unsigned int vm_id : 4;
  unsigned int ring_id : 3;
  unsigned int state_id : 3;
  unsigned int : 2;
} sq_wave_hw_id_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_hw_id_t__SI {
  unsigned int : 2;
  unsigned int state_id : 3;
  unsigned int ring_id : 3;
  unsigned int vm_id : 4;
  unsigned int tg_id : 4;
  unsigned int : 2;
  unsigned int se_id : 1;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int : 2;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
} sq_wave_hw_id_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_hw_id_t__SI f;
} sq_wave_hw_id_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ib_dbg0_t__SI__CI {
  unsigned int ibuf_st : 3;
  unsigned int pc_invalid : 1;
  unsigned int need_next_dw : 1;
  unsigned int no_prefetch_cnt : 3;
  unsigned int ibuf_rptr : 2;
  unsigned int ibuf_wptr : 2;
  unsigned int : 4;
  unsigned int inst_str_st : 3;
  unsigned int misc_cnt : 3;
  unsigned int ecc_st : 2;
  unsigned int is_hyb : 1;
  unsigned int hyb_cnt : 2;
  unsigned int kill__CI : 1;
  unsigned int need_kill_ifetch__CI : 1;
  unsigned int : 3;
} sq_wave_ib_dbg0_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ib_dbg0_t__SI__CI {
  unsigned int : 3;
  unsigned int need_kill_ifetch__CI : 1;
  unsigned int kill__CI : 1;
  unsigned int hyb_cnt : 2;
  unsigned int is_hyb : 1;
  unsigned int ecc_st : 2;
  unsigned int misc_cnt : 3;
  unsigned int inst_str_st : 3;
  unsigned int : 4;
  unsigned int ibuf_wptr : 2;
  unsigned int ibuf_rptr : 2;
  unsigned int no_prefetch_cnt : 3;
  unsigned int need_next_dw : 1;
  unsigned int pc_invalid : 1;
  unsigned int ibuf_st : 3;
} sq_wave_ib_dbg0_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ib_dbg0_t__SI__CI f;
} sq_wave_ib_dbg0_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ib_dbg0_t__VI {
  unsigned int ibuf_st : 3;
  unsigned int pc_invalid : 1;
  unsigned int need_next_dw : 1;
  unsigned int no_prefetch_cnt : 3;
  unsigned int ibuf_rptr : 2;
  unsigned int ibuf_wptr : 2;
  unsigned int : 4;
  unsigned int inst_str_st : 4;
  unsigned int misc_cnt : 4;
  unsigned int ecc_st : 2;
  unsigned int is_hyb : 1;
  unsigned int hyb_cnt : 2;
  unsigned int kill : 1;
  unsigned int need_kill_ifetch : 1;
  unsigned int : 1;
} sq_wave_ib_dbg0_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ib_dbg0_t__VI {
  unsigned int : 1;
  unsigned int need_kill_ifetch : 1;
  unsigned int kill : 1;
  unsigned int hyb_cnt : 2;
  unsigned int is_hyb : 1;
  unsigned int ecc_st : 2;
  unsigned int misc_cnt : 4;
  unsigned int inst_str_st : 4;
  unsigned int : 4;
  unsigned int ibuf_wptr : 2;
  unsigned int ibuf_rptr : 2;
  unsigned int no_prefetch_cnt : 3;
  unsigned int need_next_dw : 1;
  unsigned int pc_invalid : 1;
  unsigned int ibuf_st : 3;
} sq_wave_ib_dbg0_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ib_dbg0_t__VI f;
} sq_wave_ib_dbg0_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ib_sts_t__CI {
  unsigned int vm_cnt : 4;
  unsigned int exp_cnt : 3;
  unsigned int : 1;
  unsigned int lgkm_cnt : 4;
  unsigned int valu_cnt : 3;
  unsigned int : 17;
} sq_wave_ib_sts_t__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ib_sts_t__CI {
  unsigned int : 17;
  unsigned int valu_cnt : 3;
  unsigned int lgkm_cnt : 4;
  unsigned int : 1;
  unsigned int exp_cnt : 3;
  unsigned int vm_cnt : 4;
} sq_wave_ib_sts_t__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ib_sts_t__CI f;
} sq_wave_ib_sts_u__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ib_sts_t__SI {
  unsigned int vm_cnt : 4;
  unsigned int exp_cnt : 3;
  unsigned int : 1;
  unsigned int lgkm_cnt : 5;
  unsigned int valu_cnt : 3;
  unsigned int : 16;
} sq_wave_ib_sts_t__SI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ib_sts_t__SI {
  unsigned int : 16;
  unsigned int valu_cnt : 3;
  unsigned int lgkm_cnt : 5;
  unsigned int : 1;
  unsigned int exp_cnt : 3;
  unsigned int vm_cnt : 4;
} sq_wave_ib_sts_t__SI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ib_sts_t__SI f;
} sq_wave_ib_sts_u__SI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_inst_dw0_t { unsigned int inst_dw0 : 32; } sq_wave_inst_dw0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_inst_dw0_t { unsigned int inst_dw0 : 32; } sq_wave_inst_dw0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_inst_dw0_t f;
} sq_wave_inst_dw0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_inst_dw1_t { unsigned int inst_dw1 : 32; } sq_wave_inst_dw1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_inst_dw1_t { unsigned int inst_dw1 : 32; } sq_wave_inst_dw1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_inst_dw1_t f;
} sq_wave_inst_dw1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_lds_alloc_t {
  unsigned int lds_base : 8;
  unsigned int : 4;
  unsigned int lds_size : 9;
  unsigned int : 11;
} sq_wave_lds_alloc_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_lds_alloc_t {
  unsigned int : 11;
  unsigned int lds_size : 9;
  unsigned int : 4;
  unsigned int lds_base : 8;
} sq_wave_lds_alloc_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_lds_alloc_t f;
} sq_wave_lds_alloc_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_m0_t { unsigned int m0 : 32; } sq_wave_m0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_m0_t { unsigned int m0 : 32; } sq_wave_m0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_m0_t f;
} sq_wave_m0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_mode_t {
  unsigned int fp_round : 4;
  unsigned int fp_denorm : 4;
  unsigned int dx10_clamp : 1;
  unsigned int ieee : 1;
  unsigned int lod_clamped : 1;
  unsigned int debug_en : 1;
  unsigned int excp_en : 9;
  unsigned int : 6;
  unsigned int gpr_idx_en__VI : 1;
  unsigned int vskip : 1;
  unsigned int csp : 3;
} sq_wave_mode_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_mode_t {
  unsigned int csp : 3;
  unsigned int vskip : 1;
  unsigned int gpr_idx_en__VI : 1;
  unsigned int : 6;
  unsigned int excp_en : 9;
  unsigned int debug_en : 1;
  unsigned int lod_clamped : 1;
  unsigned int ieee : 1;
  unsigned int dx10_clamp : 1;
  unsigned int fp_denorm : 4;
  unsigned int fp_round : 4;
} sq_wave_mode_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_mode_t f;
} sq_wave_mode_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_pc_hi_t {
  unsigned int pc_hi : 16;
  unsigned int : 16;
} sq_wave_pc_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_pc_hi_t {
  unsigned int : 16;
  unsigned int pc_hi : 16;
} sq_wave_pc_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_pc_hi_t f;
} sq_wave_pc_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_pc_lo_t { unsigned int pc_lo : 32; } sq_wave_pc_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_pc_lo_t { unsigned int pc_lo : 32; } sq_wave_pc_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_pc_lo_t f;
} sq_wave_pc_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_status_t__SI__CI {
  unsigned int scc : 1;
  unsigned int spi_prio : 2;
  unsigned int wave_prio : 2;
  unsigned int priv : 1;
  unsigned int trap_en : 1;
  unsigned int ttrace_en : 1;
  unsigned int export_rdy : 1;
  unsigned int execz : 1;
  unsigned int vccz : 1;
  unsigned int in_tg : 1;
  unsigned int in_barrier : 1;
  unsigned int halt : 1;
  unsigned int trap : 1;
  unsigned int ttrace_cu_en : 1;
  unsigned int valid : 1;
  unsigned int ecc_err : 1;
  unsigned int skip_export : 1;
  unsigned int perf_en : 1;
  unsigned int cond_dbg_user__CI : 1;
  unsigned int cond_dbg_sys__CI : 1;
  unsigned int data_atc__CI : 1;
  unsigned int inst_atc__CI : 1;
  unsigned int dispatch_cache_ctrl__CI : 3;
  unsigned int must_export__CI : 1;
  unsigned int : 4;
} sq_wave_status_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_status_t__SI__CI {
  unsigned int : 4;
  unsigned int must_export__CI : 1;
  unsigned int dispatch_cache_ctrl__CI : 3;
  unsigned int inst_atc__CI : 1;
  unsigned int data_atc__CI : 1;
  unsigned int cond_dbg_sys__CI : 1;
  unsigned int cond_dbg_user__CI : 1;
  unsigned int perf_en : 1;
  unsigned int skip_export : 1;
  unsigned int ecc_err : 1;
  unsigned int valid : 1;
  unsigned int ttrace_cu_en : 1;
  unsigned int trap : 1;
  unsigned int halt : 1;
  unsigned int in_barrier : 1;
  unsigned int in_tg : 1;
  unsigned int vccz : 1;
  unsigned int execz : 1;
  unsigned int export_rdy : 1;
  unsigned int ttrace_en : 1;
  unsigned int trap_en : 1;
  unsigned int priv : 1;
  unsigned int wave_prio : 2;
  unsigned int spi_prio : 2;
  unsigned int scc : 1;
} sq_wave_status_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_status_t__SI__CI f;
} sq_wave_status_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_status_t__VI {
  unsigned int scc : 1;
  unsigned int spi_prio : 2;
  unsigned int user_prio : 2;
  unsigned int priv : 1;
  unsigned int trap_en : 1;
  unsigned int ttrace_en : 1;
  unsigned int export_rdy : 1;
  unsigned int execz : 1;
  unsigned int vccz : 1;
  unsigned int in_tg : 1;
  unsigned int in_barrier : 1;
  unsigned int halt : 1;
  unsigned int trap : 1;
  unsigned int ttrace_cu_en : 1;
  unsigned int valid : 1;
  unsigned int ecc_err : 1;
  unsigned int skip_export : 1;
  unsigned int perf_en : 1;
  unsigned int cond_dbg_user : 1;
  unsigned int cond_dbg_sys : 1;
  unsigned int allow_replay : 1;
  unsigned int inst_atc : 1;
  unsigned int : 3;
  unsigned int must_export : 1;
  unsigned int : 4;
} sq_wave_status_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_status_t__VI {
  unsigned int : 4;
  unsigned int must_export : 1;
  unsigned int : 3;
  unsigned int inst_atc : 1;
  unsigned int allow_replay : 1;
  unsigned int cond_dbg_sys : 1;
  unsigned int cond_dbg_user : 1;
  unsigned int perf_en : 1;
  unsigned int skip_export : 1;
  unsigned int ecc_err : 1;
  unsigned int valid : 1;
  unsigned int ttrace_cu_en : 1;
  unsigned int trap : 1;
  unsigned int halt : 1;
  unsigned int in_barrier : 1;
  unsigned int in_tg : 1;
  unsigned int vccz : 1;
  unsigned int execz : 1;
  unsigned int export_rdy : 1;
  unsigned int ttrace_en : 1;
  unsigned int trap_en : 1;
  unsigned int priv : 1;
  unsigned int user_prio : 2;
  unsigned int spi_prio : 2;
  unsigned int scc : 1;
} sq_wave_status_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_status_t__VI f;
} sq_wave_status_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_tba_hi_t {
  unsigned int addr_hi : 8;
  unsigned int : 24;
} sq_wave_tba_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_tba_hi_t {
  unsigned int : 24;
  unsigned int addr_hi : 8;
} sq_wave_tba_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_tba_hi_t f;
} sq_wave_tba_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_tba_lo_t { unsigned int addr_lo : 32; } sq_wave_tba_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_tba_lo_t { unsigned int addr_lo : 32; } sq_wave_tba_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_tba_lo_t f;
} sq_wave_tba_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_tma_hi_t {
  unsigned int addr_hi : 8;
  unsigned int : 24;
} sq_wave_tma_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_tma_hi_t {
  unsigned int : 24;
  unsigned int addr_hi : 8;
} sq_wave_tma_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_tma_hi_t f;
} sq_wave_tma_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_tma_lo_t { unsigned int addr_lo : 32; } sq_wave_tma_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_tma_lo_t { unsigned int addr_lo : 32; } sq_wave_tma_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_tma_lo_t f;
} sq_wave_tma_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_trapsts_t {
  unsigned int excp : 9;
  unsigned int : 1;
  unsigned int savectx__VI : 1;
  unsigned int : 5;
  unsigned int excp_cycle : 6;
  unsigned int : 7;
  unsigned int dp_rate : 3;
} sq_wave_trapsts_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_trapsts_t {
  unsigned int dp_rate : 3;
  unsigned int : 7;
  unsigned int excp_cycle : 6;
  unsigned int : 5;
  unsigned int savectx__VI : 1;
  unsigned int : 1;
  unsigned int excp : 9;
} sq_wave_trapsts_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_trapsts_t f;
} sq_wave_trapsts_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp0_t { unsigned int data : 32; } sq_wave_ttmp0_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp0_t { unsigned int data : 32; } sq_wave_ttmp0_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp0_t f;
} sq_wave_ttmp0_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp10_t { unsigned int data : 32; } sq_wave_ttmp10_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp10_t { unsigned int data : 32; } sq_wave_ttmp10_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp10_t f;
} sq_wave_ttmp10_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp11_t { unsigned int data : 32; } sq_wave_ttmp11_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp11_t { unsigned int data : 32; } sq_wave_ttmp11_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp11_t f;
} sq_wave_ttmp11_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp1_t { unsigned int data : 32; } sq_wave_ttmp1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp1_t { unsigned int data : 32; } sq_wave_ttmp1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp1_t f;
} sq_wave_ttmp1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp2_t { unsigned int data : 32; } sq_wave_ttmp2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp2_t { unsigned int data : 32; } sq_wave_ttmp2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp2_t f;
} sq_wave_ttmp2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp3_t { unsigned int data : 32; } sq_wave_ttmp3_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp3_t { unsigned int data : 32; } sq_wave_ttmp3_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp3_t f;
} sq_wave_ttmp3_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp4_t { unsigned int data : 32; } sq_wave_ttmp4_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp4_t { unsigned int data : 32; } sq_wave_ttmp4_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp4_t f;
} sq_wave_ttmp4_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp5_t { unsigned int data : 32; } sq_wave_ttmp5_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp5_t { unsigned int data : 32; } sq_wave_ttmp5_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp5_t f;
} sq_wave_ttmp5_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp6_t { unsigned int data : 32; } sq_wave_ttmp6_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp6_t { unsigned int data : 32; } sq_wave_ttmp6_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp6_t f;
} sq_wave_ttmp6_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp7_t { unsigned int data : 32; } sq_wave_ttmp7_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp7_t { unsigned int data : 32; } sq_wave_ttmp7_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp7_t f;
} sq_wave_ttmp7_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp8_t { unsigned int data : 32; } sq_wave_ttmp8_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp8_t { unsigned int data : 32; } sq_wave_ttmp8_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp8_t f;
} sq_wave_ttmp8_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ttmp9_t { unsigned int data : 32; } sq_wave_ttmp9_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ttmp9_t { unsigned int data : 32; } sq_wave_ttmp9_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ttmp9_t f;
} sq_wave_ttmp9_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_caches_t__SI__CI {
  unsigned int inst_invalidate : 1;
  unsigned int data_invalidate : 1;
  unsigned int invalidate_volatile__CI : 1;
  unsigned int : 29;
} sqc_caches_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_caches_t__SI__CI {
  unsigned int : 29;
  unsigned int invalidate_volatile__CI : 1;
  unsigned int data_invalidate : 1;
  unsigned int inst_invalidate : 1;
} sqc_caches_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sqc_caches_t__SI__CI f;
} sqc_caches_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_caches_t__VI {
  unsigned int target_inst : 1;
  unsigned int target_data : 1;
  unsigned int invalidate : 1;
  unsigned int writeback : 1;
  unsigned int vol : 1;
  unsigned int : 11;
  unsigned int complete : 1;
  unsigned int : 15;
} sqc_caches_t__VI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_caches_t__VI {
  unsigned int : 15;
  unsigned int complete : 1;
  unsigned int : 11;
  unsigned int vol : 1;
  unsigned int writeback : 1;
  unsigned int invalidate : 1;
  unsigned int target_data : 1;
  unsigned int target_inst : 1;
} sqc_caches_t__VI;

#endif
typedef union {
  unsigned int val : 32;
  sqc_caches_t__VI f;
} sqc_caches_u__VI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_config_t {
  unsigned int inst_cache_size : 2;
  unsigned int data_cache_size : 2;
  unsigned int miss_fifo_depth : 2;
  unsigned int hit_fifo_depth : 1;
  unsigned int force_always_miss : 1;
  unsigned int force_in_order : 1;
  unsigned int identity_hash_bank : 1;
  unsigned int identity_hash_set : 1;
  unsigned int per_vmid_inv_disable__CI__VI : 1;
  unsigned int evict_lru : 2;
  unsigned int force_2_bank : 1;
  unsigned int force_1_bank : 1;
  unsigned int ls_disable_clocks : 8;
  unsigned int : 8;
} sqc_config_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_config_t {
  unsigned int : 8;
  unsigned int ls_disable_clocks : 8;
  unsigned int force_1_bank : 1;
  unsigned int force_2_bank : 1;
  unsigned int evict_lru : 2;
  unsigned int per_vmid_inv_disable__CI__VI : 1;
  unsigned int identity_hash_set : 1;
  unsigned int identity_hash_bank : 1;
  unsigned int force_in_order : 1;
  unsigned int force_always_miss : 1;
  unsigned int hit_fifo_depth : 1;
  unsigned int miss_fifo_depth : 2;
  unsigned int data_cache_size : 2;
  unsigned int inst_cache_size : 2;
} sqc_config_t;

#endif
typedef union {
  unsigned int val : 32;
  sqc_config_t f;
} sqc_config_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_policy_t__SI__CI {
  unsigned int data_l1_policy_0 : 1;
  unsigned int data_l1_policy_1 : 1;
  unsigned int data_l1_policy_2 : 1;
  unsigned int data_l1_policy_3 : 1;
  unsigned int data_l1_policy_4 : 1;
  unsigned int data_l1_policy_5 : 1;
  unsigned int data_l1_policy_6 : 1;
  unsigned int data_l1_policy_7 : 1;
  unsigned int data_l2_policy_0 : 2;
  unsigned int data_l2_policy_1 : 2;
  unsigned int data_l2_policy_2 : 2;
  unsigned int data_l2_policy_3 : 2;
  unsigned int data_l2_policy_4 : 2;
  unsigned int data_l2_policy_5 : 2;
  unsigned int data_l2_policy_6 : 2;
  unsigned int data_l2_policy_7 : 2;
  unsigned int inst_l2_policy : 2;
  unsigned int : 6;
} sqc_policy_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_policy_t__SI__CI {
  unsigned int : 6;
  unsigned int inst_l2_policy : 2;
  unsigned int data_l2_policy_7 : 2;
  unsigned int data_l2_policy_6 : 2;
  unsigned int data_l2_policy_5 : 2;
  unsigned int data_l2_policy_4 : 2;
  unsigned int data_l2_policy_3 : 2;
  unsigned int data_l2_policy_2 : 2;
  unsigned int data_l2_policy_1 : 2;
  unsigned int data_l2_policy_0 : 2;
  unsigned int data_l1_policy_7 : 1;
  unsigned int data_l1_policy_6 : 1;
  unsigned int data_l1_policy_5 : 1;
  unsigned int data_l1_policy_4 : 1;
  unsigned int data_l1_policy_3 : 1;
  unsigned int data_l1_policy_2 : 1;
  unsigned int data_l1_policy_1 : 1;
  unsigned int data_l1_policy_0 : 1;
} sqc_policy_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sqc_policy_t__SI__CI f;
} sqc_policy_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_secded_cnt_t__SI__CI {
  unsigned int inst_sec : 8;
  unsigned int inst_ded : 8;
  unsigned int data_sec : 8;
  unsigned int data_ded : 8;
} sqc_secded_cnt_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_secded_cnt_t__SI__CI {
  unsigned int data_ded : 8;
  unsigned int data_sec : 8;
  unsigned int inst_ded : 8;
  unsigned int inst_sec : 8;
} sqc_secded_cnt_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sqc_secded_cnt_t__SI__CI f;
} sqc_secded_cnt_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_volatile_t__SI__CI {
  unsigned int data_l1 : 4;
  unsigned int data_l2 : 4;
  unsigned int inst_l2 : 1;
  unsigned int : 23;
} sqc_volatile_t__SI__CI;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_volatile_t__SI__CI {
  unsigned int : 23;
  unsigned int inst_l2 : 1;
  unsigned int data_l2 : 4;
  unsigned int data_l1 : 4;
} sqc_volatile_t__SI__CI;

#endif
typedef union {
  unsigned int val : 32;
  sqc_volatile_t__SI__CI f;
} sqc_volatile_u__SI__CI;


#if defined(LITTLEENDIAN_CPU)
typedef struct _user_sqc_bank_disable_t {
  unsigned int : 16;
  unsigned int sqc0_bank_disable : 4;
  unsigned int sqc1_bank_disable : 4;
  unsigned int sqc2_bank_disable__CI__VI : 4;
  unsigned int sqc3_bank_disable__CI__VI : 4;
} user_sqc_bank_disable_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _user_sqc_bank_disable_t {
  unsigned int sqc3_bank_disable__CI__VI : 4;
  unsigned int sqc2_bank_disable__CI__VI : 4;
  unsigned int sqc1_bank_disable : 4;
  unsigned int sqc0_bank_disable : 4;
  unsigned int : 16;
} user_sqc_bank_disable_t;

#endif
typedef union {
  unsigned int val : 32;
  user_sqc_bank_disable_t f;
} user_sqc_bank_disable_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _cc_gc_shader_rate_config_t {
  unsigned int write_dis : 1;
  unsigned int dpfp_rate : 2;
  unsigned int sqc_balance_disable : 1;
  unsigned int half_lds : 1;
  unsigned int : 27;
} cc_gc_shader_rate_config_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _cc_gc_shader_rate_config_t {
  unsigned int : 27;
  unsigned int half_lds : 1;
  unsigned int sqc_balance_disable : 1;
  unsigned int dpfp_rate : 2;
  unsigned int write_dis : 1;
} cc_gc_shader_rate_config_t;

#endif
typedef union {
  unsigned int val : 32;
  cc_gc_shader_rate_config_t f;
} cc_gc_shader_rate_config_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _gc_user_shader_rate_config_t {
  unsigned int : 1;
  unsigned int dpfp_rate : 2;
  unsigned int sqc_balance_disable : 1;
  unsigned int half_lds : 1;
  unsigned int : 27;
} gc_user_shader_rate_config_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _gc_user_shader_rate_config_t {
  unsigned int : 27;
  unsigned int half_lds : 1;
  unsigned int sqc_balance_disable : 1;
  unsigned int dpfp_rate : 2;
  unsigned int : 1;
} gc_user_shader_rate_config_t;

#endif
typedef union {
  unsigned int val : 32;
  gc_user_shader_rate_config_t f;
} gc_user_shader_rate_config_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_dsm_cntl_t {
  unsigned int wavefront_stall_0 : 1;
  unsigned int wavefront_stall_1 : 1;
  unsigned int spi_backpressure_0 : 1;
  unsigned int spi_backpressure_1 : 1;
  unsigned int : 4;
  unsigned int sel_dsm_sgpr_irritator_data0 : 1;
  unsigned int sel_dsm_sgpr_irritator_data1 : 1;
  unsigned int sgpr_enable_single_write : 1;
  unsigned int : 5;
  unsigned int sel_dsm_lds_irritator_data0 : 1;
  unsigned int sel_dsm_lds_irritator_data1 : 1;
  unsigned int lds_enable_single_write01 : 1;
  unsigned int sel_dsm_lds_irritator_data2 : 1;
  unsigned int sel_dsm_lds_irritator_data3 : 1;
  unsigned int lds_enable_single_write23 : 1;
  unsigned int : 2;
  unsigned int sel_dsm_sp_irritator_data0 : 1;
  unsigned int sel_dsm_sp_irritator_data1 : 1;
  unsigned int sp_enable_single_write : 1;
  unsigned int : 5;
} sq_dsm_cntl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_dsm_cntl_t {
  unsigned int : 5;
  unsigned int sp_enable_single_write : 1;
  unsigned int sel_dsm_sp_irritator_data1 : 1;
  unsigned int sel_dsm_sp_irritator_data0 : 1;
  unsigned int : 2;
  unsigned int lds_enable_single_write23 : 1;
  unsigned int sel_dsm_lds_irritator_data3 : 1;
  unsigned int sel_dsm_lds_irritator_data2 : 1;
  unsigned int lds_enable_single_write01 : 1;
  unsigned int sel_dsm_lds_irritator_data1 : 1;
  unsigned int sel_dsm_lds_irritator_data0 : 1;
  unsigned int : 5;
  unsigned int sgpr_enable_single_write : 1;
  unsigned int sel_dsm_sgpr_irritator_data1 : 1;
  unsigned int sel_dsm_sgpr_irritator_data0 : 1;
  unsigned int : 4;
  unsigned int spi_backpressure_1 : 1;
  unsigned int spi_backpressure_0 : 1;
  unsigned int wavefront_stall_1 : 1;
  unsigned int wavefront_stall_0 : 1;
} sq_dsm_cntl_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_dsm_cntl_t f;
} sq_dsm_cntl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_edc_ded_cnt_t {
  unsigned int lds_ded : 8;
  unsigned int sgpr_ded : 8;
  unsigned int vgpr_ded : 8;
  unsigned int : 8;
} sq_edc_ded_cnt_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_edc_ded_cnt_t {
  unsigned int : 8;
  unsigned int vgpr_ded : 8;
  unsigned int sgpr_ded : 8;
  unsigned int lds_ded : 8;
} sq_edc_ded_cnt_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_edc_ded_cnt_t f;
} sq_edc_ded_cnt_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_edc_info_t {
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int source : 3;
  unsigned int vm_id : 4;
  unsigned int : 19;
} sq_edc_info_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_edc_info_t {
  unsigned int : 19;
  unsigned int vm_id : 4;
  unsigned int source : 3;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
} sq_edc_info_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_edc_info_t f;
} sq_edc_info_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_edc_sec_cnt_t {
  unsigned int lds_sec : 8;
  unsigned int sgpr_sec : 8;
  unsigned int vgpr_sec : 8;
  unsigned int : 8;
} sq_edc_sec_cnt_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_edc_sec_cnt_t {
  unsigned int : 8;
  unsigned int vgpr_sec : 8;
  unsigned int sgpr_sec : 8;
  unsigned int lds_sec : 8;
} sq_edc_sec_cnt_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_edc_sec_cnt_t f;
} sq_edc_sec_cnt_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_auto_t {
  unsigned int thread_trace : 1;
  unsigned int wlt : 1;
  unsigned int thread_trace_buf_full : 1;
  unsigned int reg_timestamp : 1;
  unsigned int cmd_timestamp : 1;
  unsigned int host_cmd_overflow : 1;
  unsigned int host_reg_overflow : 1;
  unsigned int immed_overflow : 1;
  unsigned int : 16;
  unsigned int se_id : 2;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_auto_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_auto_t {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 2;
  unsigned int : 16;
  unsigned int immed_overflow : 1;
  unsigned int host_reg_overflow : 1;
  unsigned int host_cmd_overflow : 1;
  unsigned int cmd_timestamp : 1;
  unsigned int reg_timestamp : 1;
  unsigned int thread_trace_buf_full : 1;
  unsigned int wlt : 1;
  unsigned int thread_trace : 1;
} sq_interrupt_word_auto_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_auto_t f;
} sq_interrupt_word_auto_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_cmn_t {
  unsigned int : 24;
  unsigned int se_id : 2;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_cmn_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_cmn_t {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 2;
  unsigned int : 24;
} sq_interrupt_word_cmn_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_cmn_t f;
} sq_interrupt_word_cmn_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_interrupt_word_wave_t {
  unsigned int data : 8;
  unsigned int sh_id : 1;
  unsigned int priv : 1;
  unsigned int vm_id : 4;
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int cu_id : 4;
  unsigned int se_id : 2;
  unsigned int encoding : 2;
  unsigned int : 4;
} sq_interrupt_word_wave_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_interrupt_word_wave_t {
  unsigned int : 4;
  unsigned int encoding : 2;
  unsigned int se_id : 2;
  unsigned int cu_id : 4;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
  unsigned int vm_id : 4;
  unsigned int priv : 1;
  unsigned int sh_id : 1;
  unsigned int data : 8;
} sq_interrupt_word_wave_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_interrupt_word_wave_t f;
} sq_interrupt_word_wave_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_m0_gpr_idx_word_t {
  unsigned int index : 8;
  unsigned int : 4;
  unsigned int vsrc0_rel : 1;
  unsigned int vsrc1_rel : 1;
  unsigned int vsrc2_rel : 1;
  unsigned int vdst_rel : 1;
  unsigned int : 16;
} sq_m0_gpr_idx_word_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_m0_gpr_idx_word_t {
  unsigned int : 16;
  unsigned int vdst_rel : 1;
  unsigned int vsrc2_rel : 1;
  unsigned int vsrc1_rel : 1;
  unsigned int vsrc0_rel : 1;
  unsigned int : 4;
  unsigned int index : 8;
} sq_m0_gpr_idx_word_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_m0_gpr_idx_word_t f;
} sq_m0_gpr_idx_word_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter0_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter0_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter0_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter0_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter0_select_t f;
} sq_perfcounter0_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter10_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter10_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter10_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter10_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter10_select_t f;
} sq_perfcounter10_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter11_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter11_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter11_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter11_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter11_select_t f;
} sq_perfcounter11_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter12_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter12_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter12_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter12_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter12_select_t f;
} sq_perfcounter12_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter13_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter13_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter13_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter13_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter13_select_t f;
} sq_perfcounter13_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter14_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter14_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter14_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter14_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter14_select_t f;
} sq_perfcounter14_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter15_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter15_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter15_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter15_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter15_select_t f;
} sq_perfcounter15_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter1_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter1_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter1_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter1_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter1_select_t f;
} sq_perfcounter1_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter2_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter2_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter2_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter2_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter2_select_t f;
} sq_perfcounter2_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter3_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter3_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter3_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter3_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter3_select_t f;
} sq_perfcounter3_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter4_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter4_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter4_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter4_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter4_select_t f;
} sq_perfcounter4_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter5_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter5_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter5_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter5_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter5_select_t f;
} sq_perfcounter5_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter6_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter6_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter6_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter6_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter6_select_t f;
} sq_perfcounter6_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter7_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter7_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter7_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter7_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter7_select_t f;
} sq_perfcounter7_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter8_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter8_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter8_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter8_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter8_select_t f;
} sq_perfcounter8_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_perfcounter9_select_t {
  unsigned int perf_sel : 9;
  unsigned int : 3;
  unsigned int sqc_bank_mask : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int perf_mode : 4;
} sq_perfcounter9_select_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_perfcounter9_select_t {
  unsigned int perf_mode : 4;
  unsigned int simd_mask : 4;
  unsigned int spm_mode : 4;
  unsigned int sqc_client_mask : 4;
  unsigned int sqc_bank_mask : 4;
  unsigned int : 3;
  unsigned int perf_sel : 9;
} sq_perfcounter9_select_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_perfcounter9_select_t f;
} sq_perfcounter9_select_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_misc_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 8;
  unsigned int sh_id : 1;
  unsigned int misc_token_type : 3;
  unsigned int : 16;
} sq_thread_trace_word_misc_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_misc_t {
  unsigned int : 16;
  unsigned int misc_token_type : 3;
  unsigned int sh_id : 1;
  unsigned int time_delta : 8;
  unsigned int token_type : 4;
} sq_thread_trace_word_misc_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_misc_t f;
} sq_thread_trace_word_misc_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_1_of_2_t {
  unsigned int token_type : 4;
  unsigned int time_delta : 1;
  unsigned int pipe_id : 2;
  unsigned int me_id : 2;
  unsigned int reg_dropped_prev : 1;
  unsigned int reg_type : 3;
  unsigned int : 1;
  unsigned int reg_priv : 1;
  unsigned int reg_op : 1;
  unsigned int reg_addr : 16;
} sq_thread_trace_word_reg_1_of_2_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_thread_trace_word_reg_1_of_2_t {
  unsigned int reg_addr : 16;
  unsigned int reg_op : 1;
  unsigned int reg_priv : 1;
  unsigned int : 1;
  unsigned int reg_type : 3;
  unsigned int reg_dropped_prev : 1;
  unsigned int me_id : 2;
  unsigned int pipe_id : 2;
  unsigned int time_delta : 1;
  unsigned int token_type : 4;
} sq_thread_trace_word_reg_1_of_2_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_thread_trace_word_reg_1_of_2_t f;
} sq_thread_trace_word_reg_1_of_2_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_hw_id_t {
  unsigned int wave_id : 4;
  unsigned int simd_id : 2;
  unsigned int pipe_id : 2;
  unsigned int cu_id : 4;
  unsigned int sh_id : 1;
  unsigned int se_id : 2;
  unsigned int : 1;
  unsigned int tg_id : 4;
  unsigned int vm_id : 4;
  unsigned int queue_id : 3;
  unsigned int state_id : 3;
  unsigned int me_id : 2;
} sq_wave_hw_id_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_hw_id_t {
  unsigned int me_id : 2;
  unsigned int state_id : 3;
  unsigned int queue_id : 3;
  unsigned int vm_id : 4;
  unsigned int tg_id : 4;
  unsigned int : 1;
  unsigned int se_id : 2;
  unsigned int sh_id : 1;
  unsigned int cu_id : 4;
  unsigned int pipe_id : 2;
  unsigned int simd_id : 2;
  unsigned int wave_id : 4;
} sq_wave_hw_id_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_hw_id_t f;
} sq_wave_hw_id_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ib_dbg1_t {
  unsigned int ixnack : 1;
  unsigned int xnack : 1;
  unsigned int ta_need_reset : 1;
  unsigned int : 1;
  unsigned int xcnt : 4;
  unsigned int qcnt : 4;
  unsigned int : 20;
} sq_wave_ib_dbg1_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ib_dbg1_t {
  unsigned int : 20;
  unsigned int qcnt : 4;
  unsigned int xcnt : 4;
  unsigned int : 1;
  unsigned int ta_need_reset : 1;
  unsigned int xnack : 1;
  unsigned int ixnack : 1;
} sq_wave_ib_dbg1_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ib_dbg1_t f;
} sq_wave_ib_dbg1_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wave_ib_sts_t {
  unsigned int vm_cnt : 4;
  unsigned int exp_cnt : 3;
  unsigned int : 1;
  unsigned int lgkm_cnt : 4;
  unsigned int valu_cnt : 3;
  unsigned int first_replay : 1;
  unsigned int rcnt : 4;
  unsigned int : 12;
} sq_wave_ib_sts_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wave_ib_sts_t {
  unsigned int : 12;
  unsigned int rcnt : 4;
  unsigned int first_replay : 1;
  unsigned int valu_cnt : 3;
  unsigned int lgkm_cnt : 4;
  unsigned int : 1;
  unsigned int exp_cnt : 3;
  unsigned int vm_cnt : 4;
} sq_wave_ib_sts_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wave_ib_sts_t f;
} sq_wave_ib_sts_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wrexec_exec_hi_t {
  unsigned int addr_hi : 16;
  unsigned int : 10;
  unsigned int first_wave : 1;
  unsigned int atc : 1;
  unsigned int mtype : 3;
  unsigned int msb : 1;
} sq_wrexec_exec_hi_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wrexec_exec_hi_t {
  unsigned int msb : 1;
  unsigned int mtype : 3;
  unsigned int atc : 1;
  unsigned int first_wave : 1;
  unsigned int : 10;
  unsigned int addr_hi : 16;
} sq_wrexec_exec_hi_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wrexec_exec_hi_t f;
} sq_wrexec_exec_hi_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sq_wrexec_exec_lo_t { unsigned int addr_lo : 32; } sq_wrexec_exec_lo_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sq_wrexec_exec_lo_t { unsigned int addr_lo : 32; } sq_wrexec_exec_lo_t;

#endif
typedef union {
  unsigned int val : 32;
  sq_wrexec_exec_lo_t f;
} sq_wrexec_exec_lo_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_atc_edc_gatcl1_cnt_t {
  unsigned int icache_data_sec : 8;
  unsigned int : 8;
  unsigned int dcache_data_sec : 8;
  unsigned int : 8;
} sqc_atc_edc_gatcl1_cnt_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_atc_edc_gatcl1_cnt_t {
  unsigned int : 8;
  unsigned int dcache_data_sec : 8;
  unsigned int : 8;
  unsigned int icache_data_sec : 8;
} sqc_atc_edc_gatcl1_cnt_t;

#endif
typedef union {
  unsigned int val : 32;
  sqc_atc_edc_gatcl1_cnt_t f;
} sqc_atc_edc_gatcl1_cnt_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_dsm_cntl_t {
  unsigned int sel_data_icache_banka : 2;
  unsigned int en_single_wr_icache_banka : 1;
  unsigned int sel_data_icache_bankb : 2;
  unsigned int en_single_wr_icache_bankb : 1;
  unsigned int sel_data_icache_bankc : 2;
  unsigned int en_single_wr_icache_bankc : 1;
  unsigned int sel_data_icache_bankd : 2;
  unsigned int en_single_wr_icache_bankd : 1;
  unsigned int sel_data_icache_gatcl1 : 2;
  unsigned int en_single_wr_icache_gatcl1 : 1;
  unsigned int sel_data_dcache_banka : 2;
  unsigned int en_single_wr_dcache_banka : 1;
  unsigned int sel_data_dcache_bankb : 2;
  unsigned int en_single_wr_dcache_bankb : 1;
  unsigned int sel_data_dcache_bankc : 2;
  unsigned int en_single_wr_dcache_bankc : 1;
  unsigned int sel_data_dcache_bankd : 2;
  unsigned int en_single_wr_dcache_bankd : 1;
  unsigned int sel_data_dcache_gatcl1 : 2;
  unsigned int en_single_wr_dcache_gatcl1 : 1;
  unsigned int : 2;
} sqc_dsm_cntl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_dsm_cntl_t {
  unsigned int : 2;
  unsigned int en_single_wr_dcache_gatcl1 : 1;
  unsigned int sel_data_dcache_gatcl1 : 2;
  unsigned int en_single_wr_dcache_bankd : 1;
  unsigned int sel_data_dcache_bankd : 2;
  unsigned int en_single_wr_dcache_bankc : 1;
  unsigned int sel_data_dcache_bankc : 2;
  unsigned int en_single_wr_dcache_bankb : 1;
  unsigned int sel_data_dcache_bankb : 2;
  unsigned int en_single_wr_dcache_banka : 1;
  unsigned int sel_data_dcache_banka : 2;
  unsigned int en_single_wr_icache_gatcl1 : 1;
  unsigned int sel_data_icache_gatcl1 : 2;
  unsigned int en_single_wr_icache_bankd : 1;
  unsigned int sel_data_icache_bankd : 2;
  unsigned int en_single_wr_icache_bankc : 1;
  unsigned int sel_data_icache_bankc : 2;
  unsigned int en_single_wr_icache_bankb : 1;
  unsigned int sel_data_icache_bankb : 2;
  unsigned int en_single_wr_icache_banka : 1;
  unsigned int sel_data_icache_banka : 2;
} sqc_dsm_cntl_t;

#endif
typedef union {
  unsigned int val : 32;
  sqc_dsm_cntl_t f;
} sqc_dsm_cntl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_edc_cnt_t {
  unsigned int inst_sec : 8;
  unsigned int inst_ded : 8;
  unsigned int data_sec : 8;
  unsigned int data_ded : 8;
} sqc_edc_cnt_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_edc_cnt_t {
  unsigned int data_ded : 8;
  unsigned int data_sec : 8;
  unsigned int inst_ded : 8;
  unsigned int inst_sec : 8;
} sqc_edc_cnt_t;

#endif
typedef union {
  unsigned int val : 32;
  sqc_edc_cnt_t f;
} sqc_edc_cnt_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_gatcl1_cntl_t {
  unsigned int reserved : 18;
  unsigned int dcache_invalidate_all_vmid : 1;
  unsigned int dcache_force_miss : 1;
  unsigned int dcache_force_in_order : 1;
  unsigned int dcache_reduce_fifo_depth_by_2 : 2;
  unsigned int dcache_reduce_cache_size_by_2 : 2;
  unsigned int icache_invalidate_all_vmid : 1;
  unsigned int icache_force_miss : 1;
  unsigned int icache_force_in_order : 1;
  unsigned int icache_reduce_fifo_depth_by_2 : 2;
  unsigned int icache_reduce_cache_size_by_2 : 2;
} sqc_gatcl1_cntl_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_gatcl1_cntl_t {
  unsigned int icache_reduce_cache_size_by_2 : 2;
  unsigned int icache_reduce_fifo_depth_by_2 : 2;
  unsigned int icache_force_in_order : 1;
  unsigned int icache_force_miss : 1;
  unsigned int icache_invalidate_all_vmid : 1;
  unsigned int dcache_reduce_cache_size_by_2 : 2;
  unsigned int dcache_reduce_fifo_depth_by_2 : 2;
  unsigned int dcache_force_in_order : 1;
  unsigned int dcache_force_miss : 1;
  unsigned int dcache_invalidate_all_vmid : 1;
  unsigned int reserved : 18;
} sqc_gatcl1_cntl_t;

#endif
typedef union {
  unsigned int val : 32;
  sqc_gatcl1_cntl_t f;
} sqc_gatcl1_cntl_u;


#if defined(LITTLEENDIAN_CPU)
typedef struct _sqc_writeback_t {
  unsigned int dwb : 1;
  unsigned int dirty : 1;
  unsigned int : 30;
} sqc_writeback_t;

#elif defined(BIGENDIAN_CPU)
typedef struct _sqc_writeback_t {
  unsigned int : 30;
  unsigned int dirty : 1;
  unsigned int dwb : 1;
} sqc_writeback_t;

#endif
typedef union {
  unsigned int val : 32;
  sqc_writeback_t f;
} sqc_writeback_u;


#endif  // __VI___SI__CI_sq_reg_h
